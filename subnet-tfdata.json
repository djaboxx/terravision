{
    "codepath": [
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc"
    ],
    "workdir": "/Users/patrick/git/terravision",
    "plandata": {
        "format_version": "1.2",
        "terraform_version": "1.6.6",
        "variables": {
            "azs": {
                "value": 2
            },
            "database_subnet_names": {
                "value": []
            },
            "database_subnets": {
                "value": null
            },
            "elasticache_subnet_names": {
                "value": []
            },
            "elasticache_subnets": {
                "value": null
            },
            "enable_nat_gateway": {
                "value": true
            },
            "intra_subnet_names": {
                "value": []
            },
            "intra_subnets": {
                "value": null
            },
            "one_nat_gateway_per_az": {
                "value": true
            },
            "prefix": {
                "value": "fdfd"
            },
            "private_subnet_names": {
                "value": []
            },
            "private_subnets": {
                "value": null
            },
            "public_subnet_names": {
                "value": []
            },
            "public_subnets": {
                "value": null
            },
            "vpc_cidr": {
                "value": "10.156.0.0/16"
            }
        },
        "planned_values": {
            "outputs": {
                "database_route_table_ids": {
                    "sensitive": false
                },
                "database_subnet_cidrs": {
                    "sensitive": false,
                    "type": [
                        "list",
                        "string"
                    ],
                    "value": [
                        "10.156.128.0/20",
                        "10.156.144.0/20"
                    ]
                },
                "database_subnet_group": {
                    "sensitive": false
                },
                "database_subnets": {
                    "sensitive": false
                },
                "elasticache_route_table_ids": {
                    "sensitive": false
                },
                "elasticache_subnet_cidrs": {
                    "sensitive": false,
                    "type": [
                        "list",
                        "string"
                    ],
                    "value": [
                        "10.156.192.0/21",
                        "10.156.200.0/21"
                    ]
                },
                "elasticache_subnet_group": {
                    "sensitive": false
                },
                "elasticache_subnets": {
                    "sensitive": false
                },
                "intra_route_table_ids": {
                    "sensitive": false
                },
                "intra_subnet_cidrs": {
                    "sensitive": false,
                    "type": [
                        "list",
                        "string"
                    ],
                    "value": [
                        "10.156.32.0/21",
                        "10.156.40.0/21"
                    ]
                },
                "intra_subnets": {
                    "sensitive": false
                },
                "private_route_table_ids": {
                    "sensitive": false
                },
                "private_subnet_cidrs": {
                    "sensitive": false,
                    "type": [
                        "list",
                        "string"
                    ],
                    "value": [
                        "10.156.64.0/20",
                        "10.156.80.0/20"
                    ]
                },
                "private_subnets": {
                    "sensitive": false
                },
                "public_route_table_ids": {
                    "sensitive": false
                },
                "public_subnet_cidrs": {
                    "sensitive": false,
                    "type": [
                        "list",
                        "string"
                    ],
                    "value": [
                        "10.156.0.0/21",
                        "10.156.8.0/21"
                    ]
                },
                "public_subnets": {
                    "sensitive": false
                },
                "vpc_id": {
                    "sensitive": false
                }
            },
            "root_module": {
                "resources": [
                    {
                        "address": "aws_security_group.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_security_group",
                        "name": "pipeline_security_group",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 1,
                        "values": {
                            "description": "fdfd-default Security group used by pipelines that run terraform",
                            "name": "fdfd-default-pipeline",
                            "revoke_rules_on_delete": false,
                            "tags": {
                                "Name": "Allow pipeline access to fdfd-default"
                            },
                            "tags_all": {
                                "Name": "Allow pipeline access to fdfd-default"
                            },
                            "timeouts": null
                        },
                        "sensitive_values": {
                            "egress": [],
                            "ingress": [],
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_security_group_rule.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "pipeline_security_group",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 2,
                        "values": {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": null,
                            "from_port": 0,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "-1",
                            "self": false,
                            "timeouts": null,
                            "to_port": 0,
                            "type": "egress"
                        },
                        "sensitive_values": {
                            "cidr_blocks": [
                                false
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_route_table_ids[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_route_table_ids",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/database_route_table_ids",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_cidrs[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_cidrs",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/database_subnet_cidrs",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"10.156.128.0/20\",\"10.156.144.0/20\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_group[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_group",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/database_subnet_group",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "String"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_names",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/database_subnet_names",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnets[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnets",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/database_subnets",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_route_table_ids[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_route_table_ids",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/elasticache_route_table_ids",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_cidrs[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_cidrs",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_cidrs",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"10.156.192.0/21\",\"10.156.200.0/21\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_group[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_group",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_group",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "String"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_names",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_names",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnets[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnets",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/elasticache_subnets",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_route_table_ids[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_route_table_ids",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/intra_route_table_ids",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnet_cidrs[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnet_cidrs",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/intra_subnet_cidrs",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"10.156.32.0/21\",\"10.156.40.0/21\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnet_names",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/intra_subnet_names",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnets[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnets",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/intra_subnets",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "pipeline_security_group",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/pipeline_security_group",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "String"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.private_route_table_ids[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_route_table_ids",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/private_route_table_ids",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnet_cidrs",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/private_subnet_cidrs",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"10.156.64.0/20\",\"10.156.80.0/20\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnet_names",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/private_subnet_names",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnets",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/private_subnets",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.public_route_table_ids[0]",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_route_table_ids",
                        "index": 0,
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/public_route_table_ids",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnet_cidrs",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/public_subnet_cidrs",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"10.156.0.0/21\",\"10.156.8.0/21\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnet_names",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/public_subnet_names",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList",
                            "value": "\"\""
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnets",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/public_subnets",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "StringList"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.vpc_id",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "vpc_id",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "allowed_pattern": null,
                            "description": null,
                            "name": "/entigo-infralib/fdfd-default/vpc_id",
                            "overwrite": null,
                            "tags": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "tags_all": {
                                "Prefix": "fdfd",
                                "Terraform": "true",
                                "Workspace": "default"
                            },
                            "type": "String"
                        },
                        "sensitive_values": {
                            "tags": {},
                            "tags_all": {}
                        }
                    }
                ],
                "child_modules": [
                    {
                        "resources": [
                            {
                                "address": "module.vpc.aws_db_subnet_group.database[0]",
                                "mode": "managed",
                                "type": "aws_db_subnet_group",
                                "name": "database",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "description": "Database subnet group for fdfd-default",
                                    "name": "fdfd-default",
                                    "tags": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    }
                                },
                                "sensitive_values": {
                                    "subnet_ids": [],
                                    "supported_network_types": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_default_network_acl.this[0]",
                                "mode": "managed",
                                "type": "aws_default_network_acl",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "egress": [
                                        {
                                            "action": "allow",
                                            "cidr_block": "",
                                            "from_port": 0,
                                            "icmp_code": null,
                                            "icmp_type": null,
                                            "ipv6_cidr_block": "::/0",
                                            "protocol": "-1",
                                            "rule_no": 101,
                                            "to_port": 0
                                        },
                                        {
                                            "action": "allow",
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": 0,
                                            "icmp_code": null,
                                            "icmp_type": null,
                                            "ipv6_cidr_block": "",
                                            "protocol": "-1",
                                            "rule_no": 100,
                                            "to_port": 0
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "action": "allow",
                                            "cidr_block": "",
                                            "from_port": 0,
                                            "icmp_code": null,
                                            "icmp_type": null,
                                            "ipv6_cidr_block": "::/0",
                                            "protocol": "-1",
                                            "rule_no": 101,
                                            "to_port": 0
                                        },
                                        {
                                            "action": "allow",
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": 0,
                                            "icmp_code": null,
                                            "icmp_type": null,
                                            "ipv6_cidr_block": "",
                                            "protocol": "-1",
                                            "rule_no": 100,
                                            "to_port": 0
                                        }
                                    ],
                                    "subnet_ids": null,
                                    "tags": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    }
                                },
                                "sensitive_values": {
                                    "egress": [
                                        {},
                                        {}
                                    ],
                                    "ingress": [
                                        {},
                                        {}
                                    ],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_default_route_table.default[0]",
                                "mode": "managed",
                                "type": "aws_default_route_table",
                                "name": "default",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "propagating_vgws": null,
                                    "tags": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": {
                                        "create": "5m",
                                        "update": "5m"
                                    }
                                },
                                "sensitive_values": {
                                    "route": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "timeouts": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_default_security_group.this[0]",
                                "mode": "managed",
                                "type": "aws_default_security_group",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "revoke_rules_on_delete": false,
                                    "tags": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    }
                                },
                                "sensitive_values": {
                                    "egress": [],
                                    "ingress": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_eip.nat[0]",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "address": null,
                                    "associate_with_private_ip": null,
                                    "customer_owned_ipv4_pool": null,
                                    "domain": "vpc",
                                    "tags": {
                                        "Name": "fdfd-default-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_eip.nat[1]",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "address": null,
                                    "associate_with_private_ip": null,
                                    "customer_owned_ipv4_pool": null,
                                    "domain": "vpc",
                                    "tags": {
                                        "Name": "fdfd-default-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
                                "mode": "managed",
                                "type": "aws_elasticache_subnet_group",
                                "name": "elasticache",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "description": "ElastiCache subnet group for fdfd-default",
                                    "name": "fdfd-default",
                                    "tags": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    }
                                },
                                "sensitive_values": {
                                    "subnet_ids": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_internet_gateway.this[0]",
                                "mode": "managed",
                                "type": "aws_internet_gateway",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "tags": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_nat_gateway.this[0]",
                                "mode": "managed",
                                "type": "aws_nat_gateway",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "connectivity_type": "public",
                                    "secondary_allocation_ids": null,
                                    "tags": {
                                        "Name": "fdfd-default-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "secondary_private_ip_addresses": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_nat_gateway.this[1]",
                                "mode": "managed",
                                "type": "aws_nat_gateway",
                                "name": "this",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "connectivity_type": "public",
                                    "secondary_allocation_ids": null,
                                    "tags": {
                                        "Name": "fdfd-default-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "secondary_private_ip_addresses": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route.private_nat_gateway[0]",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_nat_gateway",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "carrier_gateway_id": null,
                                    "core_network_arn": null,
                                    "destination_cidr_block": "0.0.0.0/0",
                                    "destination_ipv6_cidr_block": null,
                                    "destination_prefix_list_id": null,
                                    "egress_only_gateway_id": null,
                                    "gateway_id": null,
                                    "local_gateway_id": null,
                                    "timeouts": {
                                        "create": "5m",
                                        "delete": null,
                                        "update": null
                                    },
                                    "transit_gateway_id": null,
                                    "vpc_endpoint_id": null,
                                    "vpc_peering_connection_id": null
                                },
                                "sensitive_values": {
                                    "timeouts": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route.private_nat_gateway[1]",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_nat_gateway",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "carrier_gateway_id": null,
                                    "core_network_arn": null,
                                    "destination_cidr_block": "0.0.0.0/0",
                                    "destination_ipv6_cidr_block": null,
                                    "destination_prefix_list_id": null,
                                    "egress_only_gateway_id": null,
                                    "gateway_id": null,
                                    "local_gateway_id": null,
                                    "timeouts": {
                                        "create": "5m",
                                        "delete": null,
                                        "update": null
                                    },
                                    "transit_gateway_id": null,
                                    "vpc_endpoint_id": null,
                                    "vpc_peering_connection_id": null
                                },
                                "sensitive_values": {
                                    "timeouts": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route.public_internet_gateway[0]",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "carrier_gateway_id": null,
                                    "core_network_arn": null,
                                    "destination_cidr_block": "0.0.0.0/0",
                                    "destination_ipv6_cidr_block": null,
                                    "destination_prefix_list_id": null,
                                    "egress_only_gateway_id": null,
                                    "local_gateway_id": null,
                                    "nat_gateway_id": null,
                                    "timeouts": {
                                        "create": "5m",
                                        "delete": null,
                                        "update": null
                                    },
                                    "transit_gateway_id": null,
                                    "vpc_endpoint_id": null,
                                    "vpc_peering_connection_id": null
                                },
                                "sensitive_values": {
                                    "timeouts": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route_table.intra[0]",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "intra",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "tags": {
                                        "Name": "fdfd-default-intra",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-intra",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "propagating_vgws": [],
                                    "route": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route_table.private[0]",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "private",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "tags": {
                                        "Name": "fdfd-default-private-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-private-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "propagating_vgws": [],
                                    "route": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route_table.private[1]",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "private",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "tags": {
                                        "Name": "fdfd-default-private-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-private-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "propagating_vgws": [],
                                    "route": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route_table.public[0]",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "public",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "tags": {
                                        "Name": "fdfd-default-public",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-public",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "propagating_vgws": [],
                                    "route": [],
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.database[0]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "database",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.database[1]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "database",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.elasticache[0]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "elasticache",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.elasticache[1]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "elasticache",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.intra[0]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "intra",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.intra[1]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "intra",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.private[0]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "private",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.private[1]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "private",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.public[0]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "public",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_route_table_association.public[1]",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "public",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "gateway_id": null,
                                    "timeouts": null
                                },
                                "sensitive_values": {}
                            },
                            {
                                "address": "module.vpc.aws_subnet.database[0]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "database",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1a",
                                    "cidr_block": "10.156.128.0/20",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-db-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-db-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.database[1]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "database",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1b",
                                    "cidr_block": "10.156.144.0/20",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-db-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-db-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.elasticache[0]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "elasticache",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1a",
                                    "cidr_block": "10.156.192.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-elasticache-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-elasticache-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.elasticache[1]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "elasticache",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1b",
                                    "cidr_block": "10.156.200.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-elasticache-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-elasticache-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.intra[0]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "intra",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1a",
                                    "cidr_block": "10.156.32.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-intra-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-intra-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.intra[1]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "intra",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1b",
                                    "cidr_block": "10.156.40.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-intra-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-intra-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.private[0]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "private",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1a",
                                    "cidr_block": "10.156.64.0/20",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-private-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/internal-elb": "1"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-private-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/internal-elb": "1"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.private[1]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "private",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1b",
                                    "cidr_block": "10.156.80.0/20",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-private-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/internal-elb": "1"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-private-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/internal-elb": "1"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.public[0]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "public",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1a",
                                    "cidr_block": "10.156.0.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-public-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/elb": "1"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-public-us-east-1a",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/elb": "1"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_subnet.public[1]",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "public",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_ipv6_address_on_creation": false,
                                    "availability_zone": "us-east-1b",
                                    "cidr_block": "10.156.8.0/21",
                                    "customer_owned_ipv4_pool": null,
                                    "enable_dns64": false,
                                    "enable_lni_at_device_index": null,
                                    "enable_resource_name_dns_a_record_on_launch": false,
                                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                                    "ipv6_cidr_block": null,
                                    "ipv6_native": false,
                                    "map_customer_owned_ip_on_launch": null,
                                    "map_public_ip_on_launch": false,
                                    "outpost_arn": null,
                                    "tags": {
                                        "Name": "fdfd-default-public-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/elb": "1"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default-public-us-east-1b",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default",
                                        "kubernetes.io/role/elb": "1"
                                    },
                                    "timeouts": null
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.vpc.aws_vpc.this[0]",
                                "mode": "managed",
                                "type": "aws_vpc",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "assign_generated_ipv6_cidr_block": null,
                                    "cidr_block": "10.156.0.0/16",
                                    "enable_dns_hostnames": true,
                                    "enable_dns_support": true,
                                    "instance_tenancy": "default",
                                    "ipv4_ipam_pool_id": null,
                                    "ipv4_netmask_length": null,
                                    "ipv6_ipam_pool_id": null,
                                    "ipv6_netmask_length": null,
                                    "tags": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    },
                                    "tags_all": {
                                        "Name": "fdfd-default",
                                        "Prefix": "fdfd",
                                        "Terraform": "true",
                                        "Workspace": "default"
                                    }
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            }
                        ],
                        "address": "module.vpc"
                    }
                ]
            }
        },
        "resource_changes": [
            {
                "address": "aws_security_group.pipeline_security_group",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "pipeline_security_group",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "description": "fdfd-default Security group used by pipelines that run terraform",
                        "name": "fdfd-default-pipeline",
                        "revoke_rules_on_delete": false,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "egress": [],
                        "id": true,
                        "ingress": [],
                        "name_prefix": true,
                        "owner_id": true,
                        "vpc_id": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "egress": true,
                        "id": true,
                        "ingress": true,
                        "name_prefix": true,
                        "owner_id": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "egress": [],
                        "ingress": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "aws_security_group_rule.pipeline_security_group",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "pipeline_security_group",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "cidr_blocks": [
                            false
                        ],
                        "description": null,
                        "from_port": 0,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "-1",
                        "self": false,
                        "timeouts": null,
                        "to_port": 0,
                        "type": "egress",
                        "id": true,
                        "security_group_id": true,
                        "security_group_rule_id": true,
                        "source_security_group_id": true
                    },
                    "after_unknown": {
                        "cidr_blocks": [
                            false
                        ],
                        "id": true,
                        "security_group_id": true,
                        "security_group_rule_id": true,
                        "source_security_group_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "cidr_blocks": [
                            false
                        ]
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.database_route_table_ids[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "database_route_table_ids",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/database_route_table_ids",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.database_subnet_cidrs[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "database_subnet_cidrs",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/database_subnet_cidrs",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.database_subnet_group[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "database_subnet_group",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/database_subnet_group",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "String",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.database_subnet_names",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "database_subnet_names",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/database_subnet_names",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.database_subnets[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "database_subnets",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/database_subnets",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.elasticache_route_table_ids[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "elasticache_route_table_ids",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/elasticache_route_table_ids",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.elasticache_subnet_cidrs[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "elasticache_subnet_cidrs",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/elasticache_subnet_cidrs",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.elasticache_subnet_group[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "elasticache_subnet_group",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/elasticache_subnet_group",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "String",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.elasticache_subnet_names",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "elasticache_subnet_names",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/elasticache_subnet_names",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.elasticache_subnets[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "elasticache_subnets",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/elasticache_subnets",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.intra_route_table_ids[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "intra_route_table_ids",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/intra_route_table_ids",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.intra_subnet_cidrs[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "intra_subnet_cidrs",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/intra_subnet_cidrs",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.intra_subnet_names",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "intra_subnet_names",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/intra_subnet_names",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.intra_subnets[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "intra_subnets",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/intra_subnets",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.pipeline_security_group",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "pipeline_security_group",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/pipeline_security_group",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "String",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.private_route_table_ids[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "private_route_table_ids",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/private_route_table_ids",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.private_subnet_cidrs",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "private_subnet_cidrs",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/private_subnet_cidrs",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.private_subnet_names",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "private_subnet_names",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/private_subnet_names",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.private_subnets",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "private_subnets",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/private_subnets",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.public_route_table_ids[0]",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "public_route_table_ids",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/public_route_table_ids",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.public_subnet_cidrs",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "public_subnet_cidrs",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/public_subnet_cidrs",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.public_subnet_names",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "public_subnet_names",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/public_subnet_names",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "value": true,
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.public_subnets",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "public_subnets",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/public_subnets",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "StringList",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "aws_ssm_parameter.vpc_id",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "vpc_id",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/entigo-infralib/fdfd-default/vpc_id",
                        "overwrite": null,
                        "tags": {},
                        "tags_all": {},
                        "type": "String",
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "after_unknown": {
                        "arn": true,
                        "data_type": true,
                        "id": true,
                        "insecure_value": true,
                        "key_id": true,
                        "tags": {},
                        "tags_all": {},
                        "tier": true,
                        "value": true,
                        "version": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {},
                        "value": true
                    }
                }
            },
            {
                "address": "module.vpc.aws_db_subnet_group.database[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_db_subnet_group",
                "name": "database",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "description": "Database subnet group for fdfd-default",
                        "name": "fdfd-default",
                        "tags": {},
                        "tags_all": {},
                        "arn": true,
                        "id": true,
                        "name_prefix": true,
                        "subnet_ids": [],
                        "supported_network_types": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "name_prefix": true,
                        "subnet_ids": true,
                        "supported_network_types": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "subnet_ids": [],
                        "supported_network_types": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_default_network_acl.this[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_default_network_acl",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "egress": [
                            {},
                            {}
                        ],
                        "ingress": [
                            {},
                            {}
                        ],
                        "subnet_ids": null,
                        "tags": {},
                        "tags_all": {},
                        "arn": true,
                        "default_network_acl_id": true,
                        "id": true,
                        "owner_id": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "default_network_acl_id": true,
                        "egress": [
                            {},
                            {}
                        ],
                        "id": true,
                        "ingress": [
                            {},
                            {}
                        ],
                        "owner_id": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "egress": [
                            {},
                            {}
                        ],
                        "ingress": [
                            {},
                            {}
                        ],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_default_route_table.default[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_default_route_table",
                "name": "default",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "propagating_vgws": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {},
                        "arn": true,
                        "default_route_table_id": true,
                        "id": true,
                        "owner_id": true,
                        "route": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "default_route_table_id": true,
                        "id": true,
                        "owner_id": true,
                        "route": true,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "route": [],
                        "tags": {},
                        "tags_all": {},
                        "timeouts": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_default_security_group.this[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_default_security_group",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "revoke_rules_on_delete": false,
                        "tags": {},
                        "tags_all": {},
                        "arn": true,
                        "description": true,
                        "egress": [],
                        "id": true,
                        "ingress": [],
                        "name": true,
                        "name_prefix": true,
                        "owner_id": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "description": true,
                        "egress": true,
                        "id": true,
                        "ingress": true,
                        "name": true,
                        "name_prefix": true,
                        "owner_id": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "egress": [],
                        "ingress": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_eip.nat[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "address": null,
                        "associate_with_private_ip": null,
                        "customer_owned_ipv4_pool": null,
                        "domain": "vpc",
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "allocation_id": true,
                        "association_id": true,
                        "carrier_ip": true,
                        "customer_owned_ip": true,
                        "id": true,
                        "instance": true,
                        "network_border_group": true,
                        "network_interface": true,
                        "private_dns": true,
                        "private_ip": true,
                        "ptr_record": true,
                        "public_dns": true,
                        "public_ip": true,
                        "public_ipv4_pool": true,
                        "vpc": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "allocation_id": true,
                        "association_id": true,
                        "carrier_ip": true,
                        "customer_owned_ip": true,
                        "id": true,
                        "instance": true,
                        "network_border_group": true,
                        "network_interface": true,
                        "private_dns": true,
                        "private_ip": true,
                        "ptr_record": true,
                        "public_dns": true,
                        "public_ip": true,
                        "public_ipv4_pool": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_eip.nat[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "address": null,
                        "associate_with_private_ip": null,
                        "customer_owned_ipv4_pool": null,
                        "domain": "vpc",
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "allocation_id": true,
                        "association_id": true,
                        "carrier_ip": true,
                        "customer_owned_ip": true,
                        "id": true,
                        "instance": true,
                        "network_border_group": true,
                        "network_interface": true,
                        "private_dns": true,
                        "private_ip": true,
                        "ptr_record": true,
                        "public_dns": true,
                        "public_ip": true,
                        "public_ipv4_pool": true,
                        "vpc": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "allocation_id": true,
                        "association_id": true,
                        "carrier_ip": true,
                        "customer_owned_ip": true,
                        "id": true,
                        "instance": true,
                        "network_border_group": true,
                        "network_interface": true,
                        "private_dns": true,
                        "private_ip": true,
                        "ptr_record": true,
                        "public_dns": true,
                        "public_ip": true,
                        "public_ipv4_pool": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_elasticache_subnet_group",
                "name": "elasticache",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "description": "ElastiCache subnet group for fdfd-default",
                        "name": "fdfd-default",
                        "tags": {},
                        "tags_all": {},
                        "arn": true,
                        "id": true,
                        "subnet_ids": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "subnet_ids": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "subnet_ids": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_internet_gateway.this[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_nat_gateway.this[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "connectivity_type": "public",
                        "secondary_allocation_ids": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "allocation_id": true,
                        "association_id": true,
                        "id": true,
                        "network_interface_id": true,
                        "private_ip": true,
                        "public_ip": true,
                        "secondary_private_ip_address_count": true,
                        "secondary_private_ip_addresses": [],
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "allocation_id": true,
                        "association_id": true,
                        "id": true,
                        "network_interface_id": true,
                        "private_ip": true,
                        "public_ip": true,
                        "secondary_private_ip_address_count": true,
                        "secondary_private_ip_addresses": true,
                        "subnet_id": true,
                        "tags": {},
                        "tags_all": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "secondary_private_ip_addresses": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_nat_gateway.this[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "connectivity_type": "public",
                        "secondary_allocation_ids": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "allocation_id": true,
                        "association_id": true,
                        "id": true,
                        "network_interface_id": true,
                        "private_ip": true,
                        "public_ip": true,
                        "secondary_private_ip_address_count": true,
                        "secondary_private_ip_addresses": [],
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "allocation_id": true,
                        "association_id": true,
                        "id": true,
                        "network_interface_id": true,
                        "private_ip": true,
                        "public_ip": true,
                        "secondary_private_ip_address_count": true,
                        "secondary_private_ip_addresses": true,
                        "subnet_id": true,
                        "tags": {},
                        "tags_all": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "secondary_private_ip_addresses": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route.private_nat_gateway[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "carrier_gateway_id": null,
                        "core_network_arn": null,
                        "destination_cidr_block": "0.0.0.0/0",
                        "destination_ipv6_cidr_block": null,
                        "destination_prefix_list_id": null,
                        "egress_only_gateway_id": null,
                        "gateway_id": null,
                        "local_gateway_id": null,
                        "timeouts": {},
                        "transit_gateway_id": null,
                        "vpc_endpoint_id": null,
                        "vpc_peering_connection_id": null,
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "nat_gateway_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "nat_gateway_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "timeouts": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "timeouts": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route.private_nat_gateway[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "carrier_gateway_id": null,
                        "core_network_arn": null,
                        "destination_cidr_block": "0.0.0.0/0",
                        "destination_ipv6_cidr_block": null,
                        "destination_prefix_list_id": null,
                        "egress_only_gateway_id": null,
                        "gateway_id": null,
                        "local_gateway_id": null,
                        "timeouts": {},
                        "transit_gateway_id": null,
                        "vpc_endpoint_id": null,
                        "vpc_peering_connection_id": null,
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "nat_gateway_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "nat_gateway_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "timeouts": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "timeouts": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route.public_internet_gateway[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "carrier_gateway_id": null,
                        "core_network_arn": null,
                        "destination_cidr_block": "0.0.0.0/0",
                        "destination_ipv6_cidr_block": null,
                        "destination_prefix_list_id": null,
                        "egress_only_gateway_id": null,
                        "local_gateway_id": null,
                        "nat_gateway_id": null,
                        "timeouts": {},
                        "transit_gateway_id": null,
                        "vpc_endpoint_id": null,
                        "vpc_peering_connection_id": null,
                        "gateway_id": true,
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "gateway_id": true,
                        "id": true,
                        "instance_id": true,
                        "instance_owner_id": true,
                        "network_interface_id": true,
                        "origin": true,
                        "route_table_id": true,
                        "state": true,
                        "timeouts": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "timeouts": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route_table.intra[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "intra",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": [],
                        "route": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": true,
                        "route": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route_table.private[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": [],
                        "route": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": true,
                        "route": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route_table.private[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": [],
                        "route": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": true,
                        "route": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route_table.public[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": [],
                        "route": [],
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "id": true,
                        "owner_id": true,
                        "propagating_vgws": true,
                        "route": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "propagating_vgws": [],
                        "route": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.database[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.database[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.elasticache[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.elasticache[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.intra[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.intra[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.private[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.private[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.public[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_route_table_association.public[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "gateway_id": null,
                        "timeouts": null,
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "id": true,
                        "route_table_id": true,
                        "subnet_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {}
                }
            },
            {
                "address": "module.vpc.aws_subnet.database[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "cidr_block": "10.156.128.0/20",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.database[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "cidr_block": "10.156.144.0/20",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.elasticache[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "cidr_block": "10.156.192.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.elasticache[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "cidr_block": "10.156.200.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.intra[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "cidr_block": "10.156.32.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.intra[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "cidr_block": "10.156.40.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.private[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "cidr_block": "10.156.64.0/20",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.private[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "cidr_block": "10.156.80.0/20",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.public[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1a",
                        "cidr_block": "10.156.0.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_subnet.public[1]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_ipv6_address_on_creation": false,
                        "availability_zone": "us-east-1b",
                        "cidr_block": "10.156.8.0/21",
                        "customer_owned_ipv4_pool": null,
                        "enable_dns64": false,
                        "enable_lni_at_device_index": null,
                        "enable_resource_name_dns_a_record_on_launch": false,
                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                        "ipv6_cidr_block": null,
                        "ipv6_native": false,
                        "map_customer_owned_ip_on_launch": null,
                        "map_public_ip_on_launch": false,
                        "outpost_arn": null,
                        "tags": {},
                        "tags_all": {},
                        "timeouts": null,
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "vpc_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "availability_zone_id": true,
                        "id": true,
                        "ipv6_cidr_block_association_id": true,
                        "owner_id": true,
                        "private_dns_hostname_type_on_launch": true,
                        "tags": {},
                        "tags_all": {},
                        "vpc_id": true
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            },
            {
                "address": "module.vpc.aws_vpc.this[0]",
                "module_address": "module.vpc",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "change": {
                    "actions": [
                        "create"
                    ],
                    "before": null,
                    "after": {
                        "assign_generated_ipv6_cidr_block": null,
                        "cidr_block": "10.156.0.0/16",
                        "enable_dns_hostnames": true,
                        "enable_dns_support": true,
                        "instance_tenancy": "default",
                        "ipv4_ipam_pool_id": null,
                        "ipv4_netmask_length": null,
                        "ipv6_ipam_pool_id": null,
                        "ipv6_netmask_length": null,
                        "tags": {},
                        "tags_all": {},
                        "arn": true,
                        "default_network_acl_id": true,
                        "default_route_table_id": true,
                        "default_security_group_id": true,
                        "dhcp_options_id": true,
                        "enable_network_address_usage_metrics": true,
                        "id": true,
                        "ipv6_association_id": true,
                        "ipv6_cidr_block": true,
                        "ipv6_cidr_block_network_border_group": true,
                        "main_route_table_id": true,
                        "owner_id": true,
                        "module": "vpc"
                    },
                    "after_unknown": {
                        "arn": true,
                        "default_network_acl_id": true,
                        "default_route_table_id": true,
                        "default_security_group_id": true,
                        "dhcp_options_id": true,
                        "enable_network_address_usage_metrics": true,
                        "id": true,
                        "ipv6_association_id": true,
                        "ipv6_cidr_block": true,
                        "ipv6_cidr_block_network_border_group": true,
                        "main_route_table_id": true,
                        "owner_id": true,
                        "tags": {},
                        "tags_all": {}
                    },
                    "before_sensitive": false,
                    "after_sensitive": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            }
        ],
        "output_changes": {
            "database_route_table_ids": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "database_subnet_cidrs": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    "10.156.128.0/20",
                    "10.156.144.0/20"
                ],
                "after_unknown": false,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "database_subnet_group": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after_unknown": true,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "database_subnets": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "elasticache_route_table_ids": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after_unknown": true,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "elasticache_subnet_cidrs": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    "10.156.192.0/21",
                    "10.156.200.0/21"
                ],
                "after_unknown": false,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "elasticache_subnet_group": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after_unknown": true,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "elasticache_subnets": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "intra_route_table_ids": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null
                ],
                "after_unknown": [
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "intra_subnet_cidrs": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    "10.156.32.0/21",
                    "10.156.40.0/21"
                ],
                "after_unknown": false,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "intra_subnets": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "private_route_table_ids": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "private_subnet_cidrs": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    "10.156.64.0/20",
                    "10.156.80.0/20"
                ],
                "after_unknown": false,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "private_subnets": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "public_route_table_ids": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null
                ],
                "after_unknown": [
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "public_subnet_cidrs": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    "10.156.0.0/21",
                    "10.156.8.0/21"
                ],
                "after_unknown": false,
                "before_sensitive": false,
                "after_sensitive": false
            },
            "public_subnets": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": [
                    null,
                    null
                ],
                "after_unknown": [
                    true,
                    true
                ],
                "before_sensitive": false,
                "after_sensitive": false
            },
            "vpc_id": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after_unknown": true,
                "before_sensitive": false,
                "after_sensitive": false
            }
        },
        "prior_state": {
            "format_version": "1.0",
            "terraform_version": "1.6.6",
            "values": {
                "outputs": {
                    "database_subnet_cidrs": {
                        "sensitive": false,
                        "value": [
                            "10.156.128.0/20",
                            "10.156.144.0/20"
                        ],
                        "type": [
                            "list",
                            "string"
                        ]
                    },
                    "elasticache_subnet_cidrs": {
                        "sensitive": false,
                        "value": [
                            "10.156.192.0/21",
                            "10.156.200.0/21"
                        ],
                        "type": [
                            "list",
                            "string"
                        ]
                    },
                    "intra_subnet_cidrs": {
                        "sensitive": false,
                        "value": [
                            "10.156.32.0/21",
                            "10.156.40.0/21"
                        ],
                        "type": [
                            "list",
                            "string"
                        ]
                    },
                    "private_subnet_cidrs": {
                        "sensitive": false,
                        "value": [
                            "10.156.64.0/20",
                            "10.156.80.0/20"
                        ],
                        "type": [
                            "list",
                            "string"
                        ]
                    },
                    "public_subnet_cidrs": {
                        "sensitive": false,
                        "value": [
                            "10.156.0.0/21",
                            "10.156.8.0/21"
                        ],
                        "type": [
                            "list",
                            "string"
                        ]
                    }
                },
                "root_module": {
                    "resources": [
                        {
                            "address": "data.aws_availability_zones.available",
                            "mode": "data",
                            "type": "aws_availability_zones",
                            "name": "available",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "all_availability_zones": null,
                                "exclude_names": null,
                                "exclude_zone_ids": null,
                                "filter": null,
                                "group_names": [
                                    "us-east-1"
                                ],
                                "id": "us-east-1",
                                "names": [
                                    "us-east-1a",
                                    "us-east-1b",
                                    "us-east-1c",
                                    "us-east-1d",
                                    "us-east-1e",
                                    "us-east-1f"
                                ],
                                "state": "available",
                                "timeouts": null,
                                "zone_ids": [
                                    "use1-az4",
                                    "use1-az6",
                                    "use1-az1",
                                    "use1-az2",
                                    "use1-az3",
                                    "use1-az5"
                                ]
                            },
                            "sensitive_values": {
                                "group_names": [
                                    false
                                ],
                                "names": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ],
                                "zone_ids": [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                    false
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "configuration": {
            "provider_config": {
                "aws": {
                    "name": "aws",
                    "full_name": "registry.terraform.io/hashicorp/aws",
                    "version_constraint": "5.46.0"
                }
            },
            "root_module": {
                "outputs": {
                    "database_route_table_ids": {
                        "expression": {
                            "references": [
                                "module.vpc.database_route_table_ids",
                                "module.vpc"
                            ]
                        }
                    },
                    "database_subnet_cidrs": {
                        "expression": {
                            "references": [
                                "module.vpc.database_subnets_cidr_blocks",
                                "module.vpc"
                            ]
                        }
                    },
                    "database_subnet_group": {
                        "expression": {
                            "references": [
                                "module.vpc.database_subnet_group",
                                "module.vpc"
                            ]
                        }
                    },
                    "database_subnets": {
                        "expression": {
                            "references": [
                                "module.vpc.database_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "elasticache_route_table_ids": {
                        "expression": {
                            "references": [
                                "module.vpc.elasticache_route_table_ids",
                                "module.vpc"
                            ]
                        }
                    },
                    "elasticache_subnet_cidrs": {
                        "expression": {
                            "references": [
                                "module.vpc.elasticache_subnets_cidr_blocks",
                                "module.vpc"
                            ]
                        }
                    },
                    "elasticache_subnet_group": {
                        "expression": {
                            "references": [
                                "module.vpc.elasticache_subnet_group",
                                "module.vpc"
                            ]
                        }
                    },
                    "elasticache_subnets": {
                        "expression": {
                            "references": [
                                "module.vpc.elasticache_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "intra_route_table_ids": {
                        "expression": {
                            "references": [
                                "module.vpc.intra_route_table_ids",
                                "module.vpc"
                            ]
                        }
                    },
                    "intra_subnet_cidrs": {
                        "expression": {
                            "references": [
                                "module.vpc.intra_subnets_cidr_blocks",
                                "module.vpc"
                            ]
                        }
                    },
                    "intra_subnets": {
                        "expression": {
                            "references": [
                                "module.vpc.intra_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "private_route_table_ids": {
                        "expression": {
                            "references": [
                                "module.vpc.private_route_table_ids",
                                "module.vpc"
                            ]
                        }
                    },
                    "private_subnet_cidrs": {
                        "expression": {
                            "references": [
                                "module.vpc.private_subnets_cidr_blocks",
                                "module.vpc"
                            ]
                        }
                    },
                    "private_subnets": {
                        "expression": {
                            "references": [
                                "module.vpc.private_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "public_route_table_ids": {
                        "expression": {
                            "references": [
                                "module.vpc.public_route_table_ids",
                                "module.vpc"
                            ]
                        }
                    },
                    "public_subnet_cidrs": {
                        "expression": {
                            "references": [
                                "module.vpc.public_subnets_cidr_blocks",
                                "module.vpc"
                            ]
                        }
                    },
                    "public_subnets": {
                        "expression": {
                            "references": [
                                "module.vpc.public_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "vpc_id": {
                        "expression": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    }
                },
                "resources": [
                    {
                        "address": "aws_security_group.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_security_group",
                        "name": "pipeline_security_group",
                        "provider_config_key": "aws",
                        "expressions": {
                            "description": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "vpc_id": {
                                "references": [
                                    "module.vpc.vpc_id",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 1
                    },
                    {
                        "address": "aws_security_group_rule.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_security_group_rule",
                        "name": "pipeline_security_group",
                        "provider_config_key": "aws",
                        "expressions": {
                            "cidr_blocks": {
                                "constant_value": [
                                    "0.0.0.0/0"
                                ]
                            },
                            "from_port": {
                                "constant_value": 0
                            },
                            "protocol": {
                                "constant_value": -1
                            },
                            "security_group_id": {
                                "references": [
                                    "aws_security_group.pipeline_security_group.id",
                                    "aws_security_group.pipeline_security_group"
                                ]
                            },
                            "to_port": {
                                "constant_value": 0
                            },
                            "type": {
                                "constant_value": "egress"
                            }
                        },
                        "schema_version": 2
                    },
                    {
                        "address": "aws_ssm_parameter.database_route_table_ids",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_route_table_ids",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.database_route_table_ids",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.database_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_cidrs",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.database_subnets_cidr_blocks",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.database_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_group",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_group",
                        "provider_config_key": "aws",
                        "expressions": {
                            "insecure_value": {
                                "references": [
                                    "module.vpc.database_subnet_group",
                                    "module.vpc"
                                ]
                            },
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "String"
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.database_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnet_names",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "var.database_subnet_names"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.database_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "database_subnets",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.database_subnets",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.database_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_route_table_ids",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_route_table_ids",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.elasticache_route_table_ids",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.elasticache_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_cidrs",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.elasticache_subnets_cidr_blocks",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.elasticache_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_group",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_group",
                        "provider_config_key": "aws",
                        "expressions": {
                            "insecure_value": {
                                "references": [
                                    "module.vpc.elasticache_subnet_group",
                                    "module.vpc"
                                ]
                            },
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "String"
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.elasticache_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnet_names",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "var.elasticache_subnet_names"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.elasticache_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "elasticache_subnets",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.elasticache_subnets",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.elasticache_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_route_table_ids",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_route_table_ids",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.intra_route_table_ids",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.intra_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnet_cidrs",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.intra_subnets_cidr_blocks",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.intra_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnet_names",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "var.intra_subnet_names"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.intra_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "intra_subnets",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.intra_subnets",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "module.vpc.intra_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.pipeline_security_group",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "pipeline_security_group",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "String"
                            },
                            "value": {
                                "references": [
                                    "aws_security_group.pipeline_security_group.id",
                                    "aws_security_group.pipeline_security_group"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.private_route_table_ids",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_route_table_ids",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.private_route_table_ids",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.private_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnet_cidrs",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.private_subnets_cidr_blocks",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnet_names",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "var.private_subnet_names"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.private_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "private_subnets",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.private_subnets",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.public_route_table_ids",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_route_table_ids",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.public_route_table_ids",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0,
                        "count_expression": {
                            "references": [
                                "local.public_subnets"
                            ]
                        }
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnet_cidrs",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnet_cidrs",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.public_subnets_cidr_blocks",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnet_names",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnet_names",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "var.public_subnet_names"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.public_subnets",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "public_subnets",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "StringList"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.public_subnets",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "aws_ssm_parameter.vpc_id",
                        "mode": "managed",
                        "type": "aws_ssm_parameter",
                        "name": "vpc_id",
                        "provider_config_key": "aws",
                        "expressions": {
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            },
                            "type": {
                                "constant_value": "String"
                            },
                            "value": {
                                "references": [
                                    "module.vpc.vpc_id",
                                    "module.vpc"
                                ]
                            }
                        },
                        "schema_version": 0
                    },
                    {
                        "address": "data.aws_availability_zones.available",
                        "mode": "data",
                        "type": "aws_availability_zones",
                        "name": "available",
                        "provider_config_key": "aws",
                        "expressions": {
                            "state": {
                                "constant_value": "available"
                            }
                        },
                        "schema_version": 0
                    }
                ],
                "module_calls": {
                    "vpc": {
                        "source": "terraform-aws-modules/vpc/aws",
                        "expressions": {
                            "azs": {
                                "references": [
                                    "local.azs",
                                    "data.aws_availability_zones.available.names",
                                    "data.aws_availability_zones.available"
                                ]
                            },
                            "cidr": {
                                "references": [
                                    "var.vpc_cidr"
                                ]
                            },
                            "create_database_subnet_group": {
                                "references": [
                                    "local.database_subnets"
                                ]
                            },
                            "create_elasticache_subnet_group": {
                                "references": [
                                    "local.elasticache_subnets"
                                ]
                            },
                            "create_flow_log_cloudwatch_iam_role": {
                                "constant_value": false
                            },
                            "create_flow_log_cloudwatch_log_group": {
                                "constant_value": false
                            },
                            "database_subnet_names": {
                                "references": [
                                    "var.database_subnet_names"
                                ]
                            },
                            "database_subnets": {
                                "references": [
                                    "local.database_subnets"
                                ]
                            },
                            "elasticache_subnet_names": {
                                "references": [
                                    "var.elasticache_subnet_names"
                                ]
                            },
                            "elasticache_subnets": {
                                "references": [
                                    "local.elasticache_subnets"
                                ]
                            },
                            "enable_dns_hostnames": {
                                "constant_value": true
                            },
                            "enable_dns_support": {
                                "constant_value": true
                            },
                            "enable_flow_log": {
                                "constant_value": false
                            },
                            "enable_nat_gateway": {
                                "references": [
                                    "var.enable_nat_gateway"
                                ]
                            },
                            "flow_log_cloudwatch_log_group_retention_in_days": {
                                "constant_value": 7
                            },
                            "flow_log_max_aggregation_interval": {
                                "constant_value": 60
                            },
                            "intra_subnet_names": {
                                "references": [
                                    "var.intra_subnet_names"
                                ]
                            },
                            "intra_subnets": {
                                "references": [
                                    "local.intra_subnets"
                                ]
                            },
                            "name": {
                                "references": [
                                    "local.hname"
                                ]
                            },
                            "one_nat_gateway_per_az": {
                                "references": [
                                    "var.one_nat_gateway_per_az"
                                ]
                            },
                            "private_subnet_names": {
                                "references": [
                                    "var.private_subnet_names"
                                ]
                            },
                            "private_subnet_tags": {
                                "constant_value": {
                                    "kubernetes.io/role/internal-elb": "1"
                                }
                            },
                            "private_subnets": {
                                "references": [
                                    "local.private_subnets"
                                ]
                            },
                            "public_subnet_names": {
                                "references": [
                                    "var.public_subnet_names"
                                ]
                            },
                            "public_subnet_tags": {
                                "constant_value": {
                                    "kubernetes.io/role/elb": "1"
                                }
                            },
                            "public_subnets": {
                                "references": [
                                    "local.public_subnets"
                                ]
                            },
                            "reuse_nat_ips": {
                                "constant_value": false
                            },
                            "single_nat_gateway": {
                                "references": [
                                    "var.one_nat_gateway_per_az"
                                ]
                            },
                            "tags": {
                                "references": [
                                    "var.prefix",
                                    "terraform.workspace"
                                ]
                            }
                        },
                        "module": {
                            "outputs": {
                                "azs": {
                                    "expression": {
                                        "references": [
                                            "var.azs"
                                        ]
                                    },
                                    "description": "A list of availability zones specified as argument to this module"
                                },
                                "cgw_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_customer_gateway.this"
                                        ]
                                    },
                                    "description": "List of ARNs of Customer Gateway"
                                },
                                "cgw_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_customer_gateway.this"
                                        ]
                                    },
                                    "description": "List of IDs of Customer Gateway"
                                },
                                "database_internet_gateway_route_id": {
                                    "expression": {
                                        "references": [
                                            "aws_route.database_internet_gateway[0].id",
                                            "aws_route.database_internet_gateway[0]",
                                            "aws_route.database_internet_gateway"
                                        ]
                                    },
                                    "description": "ID of the database internet gateway route"
                                },
                                "database_ipv6_egress_route_id": {
                                    "expression": {
                                        "references": [
                                            "aws_route.database_ipv6_egress[0].id",
                                            "aws_route.database_ipv6_egress[0]",
                                            "aws_route.database_ipv6_egress"
                                        ]
                                    },
                                    "description": "ID of the database IPv6 egress route"
                                },
                                "database_nat_gateway_route_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route.database_nat_gateway"
                                        ]
                                    },
                                    "description": "List of IDs of the database nat gateway route"
                                },
                                "database_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.database[0].arn",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "description": "ARN of the database network ACL"
                                },
                                "database_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "description": "ID of the database network ACL"
                                },
                                "database_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.database"
                                        ]
                                    },
                                    "description": "List of IDs of the database route table association"
                                },
                                "database_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table.database",
                                            "aws_route_table.database",
                                            "aws_route_table.private"
                                        ]
                                    },
                                    "description": "List of IDs of database route tables"
                                },
                                "database_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "description": "List of ARNs of database subnets"
                                },
                                "database_subnet_group": {
                                    "expression": {
                                        "references": [
                                            "aws_db_subnet_group.database[0].id",
                                            "aws_db_subnet_group.database[0]",
                                            "aws_db_subnet_group.database"
                                        ]
                                    },
                                    "description": "ID of database subnet group"
                                },
                                "database_subnet_group_name": {
                                    "expression": {
                                        "references": [
                                            "aws_db_subnet_group.database[0].name",
                                            "aws_db_subnet_group.database[0]",
                                            "aws_db_subnet_group.database"
                                        ]
                                    },
                                    "description": "Name of database subnet group"
                                },
                                "database_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "description": "List of IDs of database subnets"
                                },
                                "database_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of database subnets"
                                },
                                "database_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                                },
                                "default_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].default_network_acl_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the default network ACL"
                                },
                                "default_route_table_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].default_route_table_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the default route table"
                                },
                                "default_security_group_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].default_security_group_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the security group created by default on VPC creation"
                                },
                                "default_vpc_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].arn",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ARN of the Default VPC"
                                },
                                "default_vpc_cidr_block": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].cidr_block",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The CIDR block of the Default VPC"
                                },
                                "default_vpc_default_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].default_network_acl_id",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the default network ACL of the Default VPC"
                                },
                                "default_vpc_default_route_table_id": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].default_route_table_id",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the default route table of the Default VPC"
                                },
                                "default_vpc_default_security_group_id": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].default_security_group_id",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the security group created by default on Default VPC creation"
                                },
                                "default_vpc_enable_dns_hostnames": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].enable_dns_hostnames",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "Whether or not the Default VPC has DNS hostname support"
                                },
                                "default_vpc_enable_dns_support": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].enable_dns_support",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "Whether or not the Default VPC has DNS support"
                                },
                                "default_vpc_id": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].id",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the Default VPC"
                                },
                                "default_vpc_instance_tenancy": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].instance_tenancy",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "Tenancy of instances spin up within Default VPC"
                                },
                                "default_vpc_main_route_table_id": {
                                    "expression": {
                                        "references": [
                                            "aws_default_vpc.this[0].main_route_table_id",
                                            "aws_default_vpc.this[0]",
                                            "aws_default_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the main route table associated with the Default VPC"
                                },
                                "dhcp_options_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc_dhcp_options.this[0].id",
                                            "aws_vpc_dhcp_options.this[0]",
                                            "aws_vpc_dhcp_options.this"
                                        ]
                                    },
                                    "description": "The ID of the DHCP options"
                                },
                                "egress_only_internet_gateway_id": {
                                    "expression": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this[0].id",
                                            "aws_egress_only_internet_gateway.this[0]",
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "description": "The ID of the egress only Internet Gateway"
                                },
                                "elasticache_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].arn",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "description": "ARN of the elasticache network ACL"
                                },
                                "elasticache_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "description": "ID of the elasticache network ACL"
                                },
                                "elasticache_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.elasticache"
                                        ]
                                    },
                                    "description": "List of IDs of the elasticache route table association"
                                },
                                "elasticache_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table.elasticache",
                                            "local.private_route_table_ids"
                                        ]
                                    },
                                    "description": "List of IDs of elasticache route tables"
                                },
                                "elasticache_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "description": "List of ARNs of elasticache subnets"
                                },
                                "elasticache_subnet_group": {
                                    "expression": {
                                        "references": [
                                            "aws_elasticache_subnet_group.elasticache[0].id",
                                            "aws_elasticache_subnet_group.elasticache[0]",
                                            "aws_elasticache_subnet_group.elasticache"
                                        ]
                                    },
                                    "description": "ID of elasticache subnet group"
                                },
                                "elasticache_subnet_group_name": {
                                    "expression": {
                                        "references": [
                                            "aws_elasticache_subnet_group.elasticache[0].name",
                                            "aws_elasticache_subnet_group.elasticache[0]",
                                            "aws_elasticache_subnet_group.elasticache"
                                        ]
                                    },
                                    "description": "Name of elasticache subnet group"
                                },
                                "elasticache_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "description": "List of IDs of elasticache subnets"
                                },
                                "elasticache_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of elasticache subnets"
                                },
                                "elasticache_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                                },
                                "igw_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_internet_gateway.this[0].arn",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "description": "The ARN of the Internet Gateway"
                                },
                                "igw_id": {
                                    "expression": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "description": "The ID of the Internet Gateway"
                                },
                                "intra_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.intra[0].arn",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "description": "ARN of the intra network ACL"
                                },
                                "intra_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "description": "ID of the intra network ACL"
                                },
                                "intra_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.intra"
                                        ]
                                    },
                                    "description": "List of IDs of the intra route table association"
                                },
                                "intra_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "description": "List of IDs of intra route tables"
                                },
                                "intra_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "description": "List of ARNs of intra subnets"
                                },
                                "intra_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "description": "List of IDs of intra subnets"
                                },
                                "intra_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of intra subnets"
                                },
                                "intra_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                                },
                                "name": {
                                    "expression": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "description": "The name of the VPC specified as argument to this module"
                                },
                                "nat_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_eip.nat"
                                        ]
                                    },
                                    "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                                },
                                "nat_public_ips": {
                                    "expression": {
                                        "references": [
                                            "var.reuse_nat_ips",
                                            "var.external_nat_ips",
                                            "aws_eip.nat"
                                        ]
                                    },
                                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                                },
                                "natgw_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_nat_gateway.this"
                                        ]
                                    },
                                    "description": "List of NAT Gateway IDs"
                                },
                                "natgw_interface_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_nat_gateway.this"
                                        ]
                                    },
                                    "description": "List of Network Interface IDs assigned to NAT Gateways"
                                },
                                "outpost_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.outpost[0].arn",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "description": "ARN of the outpost network ACL"
                                },
                                "outpost_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "description": "ID of the outpost network ACL"
                                },
                                "outpost_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "description": "List of ARNs of outpost subnets"
                                },
                                "outpost_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "description": "List of IDs of outpost subnets"
                                },
                                "outpost_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of outpost subnets"
                                },
                                "outpost_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                                },
                                "private_ipv6_egress_route_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route.private_ipv6_egress"
                                        ]
                                    },
                                    "description": "List of IDs of the ipv6 egress route"
                                },
                                "private_nat_gateway_route_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route.private_nat_gateway"
                                        ]
                                    },
                                    "description": "List of IDs of the private nat gateway route"
                                },
                                "private_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.private[0].arn",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "description": "ARN of the private network ACL"
                                },
                                "private_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "description": "ID of the private network ACL"
                                },
                                "private_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.private"
                                        ]
                                    },
                                    "description": "List of IDs of the private route table association"
                                },
                                "private_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "local.private_route_table_ids"
                                        ]
                                    },
                                    "description": "List of IDs of private route tables"
                                },
                                "private_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "description": "List of ARNs of private subnets"
                                },
                                "private_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "description": "List of IDs of private subnets"
                                },
                                "private_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of private subnets"
                                },
                                "private_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                                },
                                "public_internet_gateway_ipv6_route_id": {
                                    "expression": {
                                        "references": [
                                            "aws_route.public_internet_gateway_ipv6[0].id",
                                            "aws_route.public_internet_gateway_ipv6[0]",
                                            "aws_route.public_internet_gateway_ipv6"
                                        ]
                                    },
                                    "description": "ID of the IPv6 internet gateway route"
                                },
                                "public_internet_gateway_route_id": {
                                    "expression": {
                                        "references": [
                                            "aws_route.public_internet_gateway[0].id",
                                            "aws_route.public_internet_gateway[0]",
                                            "aws_route.public_internet_gateway"
                                        ]
                                    },
                                    "description": "ID of the internet gateway route"
                                },
                                "public_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.public[0].arn",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "description": "ARN of the public network ACL"
                                },
                                "public_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "description": "ID of the public network ACL"
                                },
                                "public_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.public"
                                        ]
                                    },
                                    "description": "List of IDs of the public route table association"
                                },
                                "public_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "local.public_route_table_ids"
                                        ]
                                    },
                                    "description": "List of IDs of public route tables"
                                },
                                "public_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "description": "List of ARNs of public subnets"
                                },
                                "public_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "description": "List of IDs of public subnets"
                                },
                                "public_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of public subnets"
                                },
                                "public_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                                },
                                "redshift_network_acl_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.redshift[0].arn",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "description": "ARN of the redshift network ACL"
                                },
                                "redshift_network_acl_id": {
                                    "expression": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "description": "ID of the redshift network ACL"
                                },
                                "redshift_public_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.redshift_public"
                                        ]
                                    },
                                    "description": "List of IDs of the public redshift route table association"
                                },
                                "redshift_route_table_association_ids": {
                                    "expression": {
                                        "references": [
                                            "aws_route_table_association.redshift"
                                        ]
                                    },
                                    "description": "List of IDs of the redshift route table association"
                                },
                                "redshift_route_table_ids": {
                                    "expression": {
                                        "references": [
                                            "local.redshift_route_table_ids",
                                            "local.redshift_route_table_ids",
                                            "var.enable_public_redshift",
                                            "local.public_route_table_ids",
                                            "local.private_route_table_ids"
                                        ]
                                    },
                                    "description": "List of IDs of redshift route tables"
                                },
                                "redshift_subnet_arns": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "description": "List of ARNs of redshift subnets"
                                },
                                "redshift_subnet_group": {
                                    "expression": {
                                        "references": [
                                            "aws_redshift_subnet_group.redshift[0].id",
                                            "aws_redshift_subnet_group.redshift[0]",
                                            "aws_redshift_subnet_group.redshift"
                                        ]
                                    },
                                    "description": "ID of redshift subnet group"
                                },
                                "redshift_subnets": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "description": "List of IDs of redshift subnets"
                                },
                                "redshift_subnets_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "description": "List of cidr_blocks of redshift subnets"
                                },
                                "redshift_subnets_ipv6_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                                },
                                "this_customer_gateway": {
                                    "expression": {
                                        "references": [
                                            "aws_customer_gateway.this"
                                        ]
                                    },
                                    "description": "Map of Customer Gateway attributes"
                                },
                                "vgw_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_vpn_gateway.this[0].arn",
                                            "aws_vpn_gateway.this[0]",
                                            "aws_vpn_gateway.this"
                                        ]
                                    },
                                    "description": "The ARN of the VPN Gateway"
                                },
                                "vgw_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpn_gateway.this[0].id",
                                            "aws_vpn_gateway.this[0]",
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                                            "aws_vpn_gateway_attachment.this[0]",
                                            "aws_vpn_gateway_attachment.this"
                                        ]
                                    },
                                    "description": "The ID of the VPN Gateway"
                                },
                                "vpc_arn": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].arn",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ARN of the VPC"
                                },
                                "vpc_cidr_block": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The CIDR block of the VPC"
                                },
                                "vpc_enable_dns_hostnames": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].enable_dns_hostnames",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "Whether or not the VPC has DNS hostname support"
                                },
                                "vpc_enable_dns_support": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].enable_dns_support",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "Whether or not the VPC has DNS support"
                                },
                                "vpc_flow_log_cloudwatch_iam_role_arn": {
                                    "expression": {
                                        "references": [
                                            "local.flow_log_iam_role_arn"
                                        ]
                                    },
                                    "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                                },
                                "vpc_flow_log_deliver_cross_account_role": {
                                    "expression": {
                                        "references": [
                                            "aws_flow_log.this[0].deliver_cross_account_role",
                                            "aws_flow_log.this[0]",
                                            "aws_flow_log.this"
                                        ]
                                    },
                                    "description": "The ARN of the IAM role used when pushing logs cross account"
                                },
                                "vpc_flow_log_destination_arn": {
                                    "expression": {
                                        "references": [
                                            "local.flow_log_destination_arn"
                                        ]
                                    },
                                    "description": "The ARN of the destination for VPC Flow Logs"
                                },
                                "vpc_flow_log_destination_type": {
                                    "expression": {
                                        "references": [
                                            "var.flow_log_destination_type"
                                        ]
                                    },
                                    "description": "The type of the destination for VPC Flow Logs"
                                },
                                "vpc_flow_log_id": {
                                    "expression": {
                                        "references": [
                                            "aws_flow_log.this[0].id",
                                            "aws_flow_log.this[0]",
                                            "aws_flow_log.this"
                                        ]
                                    },
                                    "description": "The ID of the Flow Log resource"
                                },
                                "vpc_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the VPC"
                                },
                                "vpc_instance_tenancy": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].instance_tenancy",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "Tenancy of instances spin up within VPC"
                                },
                                "vpc_ipv6_association_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].ipv6_association_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The association ID for the IPv6 CIDR block"
                                },
                                "vpc_ipv6_cidr_block": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The IPv6 CIDR block"
                                },
                                "vpc_main_route_table_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].main_route_table_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the main route table associated with this VPC"
                                },
                                "vpc_owner_id": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc.this[0].owner_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "description": "The ID of the AWS account that owns the VPC"
                                },
                                "vpc_secondary_cidr_blocks": {
                                    "expression": {
                                        "references": [
                                            "aws_vpc_ipv4_cidr_block_association.this"
                                        ]
                                    },
                                    "description": "List of secondary CIDR blocks of the VPC"
                                }
                            },
                            "resources": [
                                {
                                    "address": "aws_cloudwatch_log_group.flow_log",
                                    "mode": "managed",
                                    "type": "aws_cloudwatch_log_group",
                                    "name": "flow_log",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "kms_key_id": {
                                            "references": [
                                                "var.flow_log_cloudwatch_log_group_kms_key_id"
                                            ]
                                        },
                                        "log_group_class": {
                                            "references": [
                                                "var.flow_log_cloudwatch_log_group_class"
                                            ]
                                        },
                                        "name": {
                                            "references": [
                                                "var.flow_log_cloudwatch_log_group_name_prefix",
                                                "local.flow_log_cloudwatch_log_group_name_suffix"
                                            ]
                                        },
                                        "retention_in_days": {
                                            "references": [
                                                "var.flow_log_cloudwatch_log_group_retention_in_days"
                                            ]
                                        },
                                        "skip_destroy": {
                                            "references": [
                                                "var.flow_log_cloudwatch_log_group_skip_destroy"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.tags",
                                                "var.vpc_flow_log_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_log_group"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_customer_gateway.this",
                                    "mode": "managed",
                                    "type": "aws_customer_gateway",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "bgp_asn": {
                                            "references": [
                                                "each.value[\"bgp_asn\"]",
                                                "each.value"
                                            ]
                                        },
                                        "device_name": {
                                            "references": [
                                                "each.value"
                                            ]
                                        },
                                        "ip_address": {
                                            "references": [
                                                "each.value[\"ip_address\"]",
                                                "each.value"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "each.key",
                                                "var.tags",
                                                "var.customer_gateway_tags"
                                            ]
                                        },
                                        "type": {
                                            "constant_value": "ipsec.1"
                                        }
                                    },
                                    "schema_version": 0,
                                    "for_each_expression": {
                                        "references": [
                                            "var.customer_gateways"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_db_subnet_group.database",
                                    "mode": "managed",
                                    "type": "aws_db_subnet_group",
                                    "name": "database",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "description": {
                                            "references": [
                                                "var.name"
                                            ]
                                        },
                                        "name": {
                                            "references": [
                                                "var.database_subnet_group_name",
                                                "var.name"
                                            ]
                                        },
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.database"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.database_subnet_group_name",
                                                "var.name",
                                                "var.tags",
                                                "var.database_subnet_group_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_subnets",
                                            "var.create_database_subnet_group"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_default_network_acl.this",
                                    "mode": "managed",
                                    "type": "aws_default_network_acl",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "default_network_acl_id": {
                                            "references": [
                                                "aws_vpc.this[0].default_network_acl_id",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this"
                                            ]
                                        },
                                        "subnet_ids": {
                                            "constant_value": null
                                        },
                                        "tags": {
                                            "references": [
                                                "var.default_network_acl_name",
                                                "var.name",
                                                "var.tags",
                                                "var.default_network_acl_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.manage_default_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_default_route_table.default",
                                    "mode": "managed",
                                    "type": "aws_default_route_table",
                                    "name": "default",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "default_route_table_id": {
                                            "references": [
                                                "aws_vpc.this[0].default_route_table_id",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this"
                                            ]
                                        },
                                        "propagating_vgws": {
                                            "references": [
                                                "var.default_route_table_propagating_vgws"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.default_route_table_name",
                                                "var.name",
                                                "var.tags",
                                                "var.default_route_table_tags"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            },
                                            "update": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.manage_default_route_table"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_default_security_group.this",
                                    "mode": "managed",
                                    "type": "aws_default_security_group",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.default_security_group_name",
                                                "var.name",
                                                "var.tags",
                                                "var.default_security_group_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "aws_vpc.this[0].id",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.manage_default_security_group"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_default_vpc.this",
                                    "mode": "managed",
                                    "type": "aws_default_vpc",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "enable_dns_hostnames": {
                                            "references": [
                                                "var.default_vpc_enable_dns_hostnames"
                                            ]
                                        },
                                        "enable_dns_support": {
                                            "references": [
                                                "var.default_vpc_enable_dns_support"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.default_vpc_name",
                                                "var.tags",
                                                "var.default_vpc_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "var.manage_default_vpc"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_egress_only_internet_gateway.this",
                                    "mode": "managed",
                                    "type": "aws_egress_only_internet_gateway",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.tags",
                                                "var.igw_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.create_egress_only_igw",
                                            "var.enable_ipv6",
                                            "local.max_subnet_length"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_eip.nat",
                                    "mode": "managed",
                                    "type": "aws_eip",
                                    "name": "nat",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "domain": {
                                            "constant_value": "vpc"
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.azs",
                                                "var.single_nat_gateway",
                                                "count.index",
                                                "var.tags",
                                                "var.nat_eip_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_nat_gateway",
                                            "var.reuse_nat_ips",
                                            "local.nat_gateway_count"
                                        ]
                                    },
                                    "depends_on": [
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                {
                                    "address": "aws_elasticache_subnet_group.elasticache",
                                    "mode": "managed",
                                    "type": "aws_elasticache_subnet_group",
                                    "name": "elasticache",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "description": {
                                            "references": [
                                                "var.name"
                                            ]
                                        },
                                        "name": {
                                            "references": [
                                                "var.elasticache_subnet_group_name",
                                                "var.name"
                                            ]
                                        },
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.elasticache"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.elasticache_subnet_group_name",
                                                "var.name",
                                                "var.tags",
                                                "var.elasticache_subnet_group_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_subnets",
                                            "var.create_elasticache_subnet_group"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_flow_log.this",
                                    "mode": "managed",
                                    "type": "aws_flow_log",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "deliver_cross_account_role": {
                                            "references": [
                                                "var.flow_log_deliver_cross_account_role"
                                            ]
                                        },
                                        "iam_role_arn": {
                                            "references": [
                                                "local.flow_log_iam_role_arn"
                                            ]
                                        },
                                        "log_destination": {
                                            "references": [
                                                "local.flow_log_destination_arn"
                                            ]
                                        },
                                        "log_destination_type": {
                                            "references": [
                                                "var.flow_log_destination_type"
                                            ]
                                        },
                                        "log_format": {
                                            "references": [
                                                "var.flow_log_log_format"
                                            ]
                                        },
                                        "max_aggregation_interval": {
                                            "references": [
                                                "var.flow_log_max_aggregation_interval"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.tags",
                                                "var.vpc_flow_log_tags"
                                            ]
                                        },
                                        "traffic_type": {
                                            "references": [
                                                "var.flow_log_traffic_type"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.enable_flow_log"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                                    "mode": "managed",
                                    "type": "aws_iam_policy",
                                    "name": "vpc_flow_log_cloudwatch",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "name_prefix": {
                                            "constant_value": "vpc-flow-log-to-cloudwatch-"
                                        },
                                        "policy": {
                                            "references": [
                                                "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                                "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                                "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.tags",
                                                "var.vpc_flow_log_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_iam_role"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                                    "mode": "managed",
                                    "type": "aws_iam_role",
                                    "name": "vpc_flow_log_cloudwatch",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assume_role_policy": {
                                            "references": [
                                                "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                                "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                                "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                            ]
                                        },
                                        "name_prefix": {
                                            "constant_value": "vpc-flow-log-role-"
                                        },
                                        "permissions_boundary": {
                                            "references": [
                                                "var.vpc_flow_log_permissions_boundary"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.tags",
                                                "var.vpc_flow_log_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_iam_role"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                                    "mode": "managed",
                                    "type": "aws_iam_role_policy_attachment",
                                    "name": "vpc_flow_log_cloudwatch",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "policy_arn": {
                                            "references": [
                                                "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                                "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                                "aws_iam_policy.vpc_flow_log_cloudwatch"
                                            ]
                                        },
                                        "role": {
                                            "references": [
                                                "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                                "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                                "aws_iam_role.vpc_flow_log_cloudwatch"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_iam_role"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_internet_gateway.this",
                                    "mode": "managed",
                                    "type": "aws_internet_gateway",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.tags",
                                                "var.igw_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.create_igw"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_nat_gateway.this",
                                    "mode": "managed",
                                    "type": "aws_nat_gateway",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "allocation_id": {
                                            "references": [
                                                "local.nat_gateway_ips",
                                                "var.single_nat_gateway",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.public",
                                                "var.single_nat_gateway",
                                                "count.index"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.azs",
                                                "var.single_nat_gateway",
                                                "count.index",
                                                "var.tags",
                                                "var.nat_gateway_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_nat_gateway",
                                            "local.nat_gateway_count"
                                        ]
                                    },
                                    "depends_on": [
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                {
                                    "address": "aws_network_acl.database",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "database",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.database"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.database_subnet_suffix",
                                                "var.tags",
                                                "var.database_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.elasticache",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "elasticache",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.elasticache"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.elasticache_subnet_suffix",
                                                "var.tags",
                                                "var.elasticache_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.intra",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "intra",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.intra"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.intra_subnet_suffix",
                                                "var.tags",
                                                "var.intra_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.outpost",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "outpost",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.outpost"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.outpost_subnet_suffix",
                                                "var.tags",
                                                "var.outpost_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_outpost_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.private",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "private",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.private"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.private_subnet_suffix",
                                                "var.tags",
                                                "var.private_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.public",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.public"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.public_subnet_suffix",
                                                "var.tags",
                                                "var.public_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.public_dedicated_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl.redshift",
                                    "mode": "managed",
                                    "type": "aws_network_acl",
                                    "name": "redshift",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.redshift"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.redshift_subnet_suffix",
                                                "var.tags",
                                                "var.redshift_acl_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_network_acl"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.database_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "database_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.database[0].id",
                                                "aws_network_acl.database[0]",
                                                "aws_network_acl.database"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.database_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_network_acl",
                                            "var.database_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.database_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "database_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.database[0].id",
                                                "aws_network_acl.database[0]",
                                                "aws_network_acl.database"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.database_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_network_acl",
                                            "var.database_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.elasticache_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "elasticache_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.elasticache[0].id",
                                                "aws_network_acl.elasticache[0]",
                                                "aws_network_acl.elasticache"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.elasticache_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_network_acl",
                                            "var.elasticache_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.elasticache_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "elasticache_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.elasticache[0].id",
                                                "aws_network_acl.elasticache[0]",
                                                "aws_network_acl.elasticache"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.elasticache_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_network_acl",
                                            "var.elasticache_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.intra_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "intra_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.intra[0].id",
                                                "aws_network_acl.intra[0]",
                                                "aws_network_acl.intra"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.intra_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_network_acl",
                                            "var.intra_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.intra_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "intra_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.intra[0].id",
                                                "aws_network_acl.intra[0]",
                                                "aws_network_acl.intra"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.intra_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_network_acl",
                                            "var.intra_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.outpost_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "outpost_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.outpost[0].id",
                                                "aws_network_acl.outpost[0]",
                                                "aws_network_acl.outpost"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.outpost_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_outpost_network_acl",
                                            "var.outpost_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.outpost_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "outpost_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.outpost[0].id",
                                                "aws_network_acl.outpost[0]",
                                                "aws_network_acl.outpost"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.outpost_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_outpost_network_acl",
                                            "var.outpost_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.private_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "private_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.private[0].id",
                                                "aws_network_acl.private[0]",
                                                "aws_network_acl.private"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.private_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_network_acl",
                                            "var.private_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.private_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "private_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.private[0].id",
                                                "aws_network_acl.private[0]",
                                                "aws_network_acl.private"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.private_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_network_acl",
                                            "var.private_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.public_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "public_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.public[0].id",
                                                "aws_network_acl.public[0]",
                                                "aws_network_acl.public"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.public_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.public_dedicated_network_acl",
                                            "var.public_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.public_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "public_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.public[0].id",
                                                "aws_network_acl.public[0]",
                                                "aws_network_acl.public"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.public_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.public_dedicated_network_acl",
                                            "var.public_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.redshift_inbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "redshift_inbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": false
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.redshift[0].id",
                                                "aws_network_acl.redshift[0]",
                                                "aws_network_acl.redshift"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.redshift_inbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_network_acl",
                                            "var.redshift_inbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_network_acl_rule.redshift_outbound",
                                    "mode": "managed",
                                    "type": "aws_network_acl_rule",
                                    "name": "redshift_outbound",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "egress": {
                                            "constant_value": true
                                        },
                                        "from_port": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_code": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "icmp_type": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "network_acl_id": {
                                            "references": [
                                                "aws_network_acl.redshift[0].id",
                                                "aws_network_acl.redshift[0]",
                                                "aws_network_acl.redshift"
                                            ]
                                        },
                                        "protocol": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_action": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "rule_number": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        },
                                        "to_port": {
                                            "references": [
                                                "var.redshift_outbound_acl_rules",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_network_acl",
                                            "var.redshift_outbound_acl_rules"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_redshift_subnet_group.redshift",
                                    "mode": "managed",
                                    "type": "aws_redshift_subnet_group",
                                    "name": "redshift",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "description": {
                                            "references": [
                                                "var.name"
                                            ]
                                        },
                                        "name": {
                                            "references": [
                                                "var.redshift_subnet_group_name",
                                                "var.name"
                                            ]
                                        },
                                        "subnet_ids": {
                                            "references": [
                                                "aws_subnet.redshift"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.redshift_subnet_group_name",
                                                "var.name",
                                                "var.tags",
                                                "var.redshift_subnet_group_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_subnets",
                                            "var.create_redshift_subnet_group"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.database_dns64_nat_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "database_dns64_nat_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_ipv6_cidr_block": {
                                            "constant_value": "64:ff9b::/96"
                                        },
                                        "nat_gateway_id": {
                                            "references": [
                                                "aws_nat_gateway.this",
                                                "count.index"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.database",
                                                "count.index"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_route_table",
                                            "var.create_database_internet_gateway_route",
                                            "var.create_database_nat_gateway_route",
                                            "var.enable_nat_gateway",
                                            "var.enable_ipv6",
                                            "var.private_subnet_enable_dns64",
                                            "var.single_nat_gateway",
                                            "local.len_database_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.database_internet_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "database_internet_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_cidr_block": {
                                            "constant_value": "0.0.0.0/0"
                                        },
                                        "gateway_id": {
                                            "references": [
                                                "aws_internet_gateway.this[0].id",
                                                "aws_internet_gateway.this[0]",
                                                "aws_internet_gateway.this"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.database[0].id",
                                                "aws_route_table.database[0]",
                                                "aws_route_table.database"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_route_table",
                                            "var.create_igw",
                                            "var.create_database_internet_gateway_route",
                                            "var.create_database_nat_gateway_route"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.database_ipv6_egress",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "database_ipv6_egress",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_ipv6_cidr_block": {
                                            "constant_value": "::/0"
                                        },
                                        "egress_only_gateway_id": {
                                            "references": [
                                                "aws_egress_only_internet_gateway.this[0].id",
                                                "aws_egress_only_internet_gateway.this[0]",
                                                "aws_egress_only_internet_gateway.this"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.database[0].id",
                                                "aws_route_table.database[0]",
                                                "aws_route_table.database"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_route_table",
                                            "var.create_egress_only_igw",
                                            "var.enable_ipv6",
                                            "var.create_database_internet_gateway_route"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.database_nat_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "database_nat_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_cidr_block": {
                                            "constant_value": "0.0.0.0/0"
                                        },
                                        "nat_gateway_id": {
                                            "references": [
                                                "aws_nat_gateway.this",
                                                "count.index"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.database",
                                                "count.index"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_route_table",
                                            "var.create_database_internet_gateway_route",
                                            "var.create_database_nat_gateway_route",
                                            "var.enable_nat_gateway",
                                            "var.single_nat_gateway",
                                            "local.len_database_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.private_dns64_nat_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "private_dns64_nat_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_ipv6_cidr_block": {
                                            "constant_value": "64:ff9b::/96"
                                        },
                                        "nat_gateway_id": {
                                            "references": [
                                                "aws_nat_gateway.this",
                                                "count.index"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "count.index"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_nat_gateway",
                                            "var.enable_ipv6",
                                            "var.private_subnet_enable_dns64",
                                            "local.nat_gateway_count"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.private_ipv6_egress",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "private_ipv6_egress",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_ipv6_cidr_block": {
                                            "constant_value": "::/0"
                                        },
                                        "egress_only_gateway_id": {
                                            "references": [
                                                "aws_egress_only_internet_gateway.this"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.create_egress_only_igw",
                                            "var.enable_ipv6",
                                            "local.len_private_subnets",
                                            "local.nat_gateway_count"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.private_nat_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "private_nat_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_cidr_block": {
                                            "references": [
                                                "var.nat_gateway_destination_cidr_block"
                                            ]
                                        },
                                        "nat_gateway_id": {
                                            "references": [
                                                "aws_nat_gateway.this",
                                                "count.index"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "count.index"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_nat_gateway",
                                            "local.nat_gateway_count"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.public_internet_gateway",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "public_internet_gateway",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_cidr_block": {
                                            "constant_value": "0.0.0.0/0"
                                        },
                                        "gateway_id": {
                                            "references": [
                                                "aws_internet_gateway.this[0].id",
                                                "aws_internet_gateway.this[0]",
                                                "aws_internet_gateway.this"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.public[0].id",
                                                "aws_route_table.public[0]",
                                                "aws_route_table.public"
                                            ]
                                        },
                                        "timeouts": {
                                            "create": {
                                                "constant_value": "5m"
                                            }
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.create_igw"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route.public_internet_gateway_ipv6",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "public_internet_gateway_ipv6",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "destination_ipv6_cidr_block": {
                                            "constant_value": "::/0"
                                        },
                                        "gateway_id": {
                                            "references": [
                                                "aws_internet_gateway.this[0].id",
                                                "aws_internet_gateway.this[0]",
                                                "aws_internet_gateway.this"
                                            ]
                                        },
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.public[0].id",
                                                "aws_route_table.public[0]",
                                                "aws_route_table.public"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.create_igw",
                                            "var.enable_ipv6"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.database",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "database",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.single_nat_gateway",
                                                "var.create_database_internet_gateway_route",
                                                "var.name",
                                                "var.database_subnet_suffix",
                                                "var.name",
                                                "var.database_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.database_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_route_table",
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "local.len_database_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.elasticache",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "elasticache",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.elasticache_subnet_suffix",
                                                "var.tags",
                                                "var.elasticache_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_route_table"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.intra",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "intra",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.create_multiple_intra_route_tables",
                                                "var.name",
                                                "var.intra_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.name",
                                                "var.intra_subnet_suffix",
                                                "var.tags",
                                                "var.intra_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_subnets",
                                            "local.num_intra_route_tables"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.private",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "private",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.single_nat_gateway",
                                                "var.name",
                                                "var.private_subnet_suffix",
                                                "var.name",
                                                "var.private_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.private_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_subnets",
                                            "local.max_subnet_length",
                                            "local.nat_gateway_count"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.public",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.create_multiple_public_route_tables",
                                                "var.name",
                                                "var.public_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.name",
                                                "var.public_subnet_suffix",
                                                "var.tags",
                                                "var.public_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "local.num_public_route_tables"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table.redshift",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "redshift",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.redshift_subnet_suffix",
                                                "var.tags",
                                                "var.redshift_route_table_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_route_table"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.database",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "database",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.database",
                                                "aws_route_table.private",
                                                "var.create_database_subnet_route_table",
                                                "var.single_nat_gateway",
                                                "var.create_database_internet_gateway_route",
                                                "count.index",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.database",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_subnets",
                                            "local.len_database_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.elasticache",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "elasticache",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.elasticache",
                                                "aws_route_table.private",
                                                "var.single_nat_gateway",
                                                "var.create_elasticache_subnet_route_table",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.elasticache",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_subnets",
                                            "local.len_elasticache_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.intra",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "intra",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.intra",
                                                "var.create_multiple_intra_route_tables",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.intra",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_subnets",
                                            "local.len_intra_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.outpost",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "outpost",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "var.single_nat_gateway",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.outpost",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_outpost_subnets",
                                            "local.len_outpost_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.private",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "private",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "var.single_nat_gateway",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.private",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_subnets",
                                            "local.len_private_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.public",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.public",
                                                "var.create_multiple_public_route_tables",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.public",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "local.len_public_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.redshift",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "redshift",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.redshift",
                                                "aws_route_table.private",
                                                "var.single_nat_gateway",
                                                "var.create_redshift_subnet_route_table",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.redshift",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_subnets",
                                            "var.enable_public_redshift",
                                            "local.len_redshift_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_route_table_association.redshift_public",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "redshift_public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.redshift",
                                                "aws_route_table.public",
                                                "var.single_nat_gateway",
                                                "var.create_redshift_subnet_route_table",
                                                "count.index"
                                            ]
                                        },
                                        "subnet_id": {
                                            "references": [
                                                "aws_subnet.redshift",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_subnets",
                                            "var.enable_public_redshift",
                                            "local.len_redshift_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.database",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "database",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.database_subnet_ipv6_native",
                                                "var.database_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.database_subnet_ipv6_native",
                                                "var.database_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.database_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.database_subnet_ipv6_native",
                                                "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.database_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.database_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.database_subnet_ipv6_native"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.database_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.database_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.database_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.database_subnet_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_database_subnets",
                                            "local.len_database_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.elasticache",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "elasticache",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.elasticache_subnet_ipv6_native",
                                                "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.elasticache_subnet_ipv6_native",
                                                "var.elasticache_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.elasticache_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.elasticache_subnet_ipv6_native",
                                                "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.elasticache_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.elasticache_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.elasticache_subnet_ipv6_native"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.elasticache_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.elasticache_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.elasticache_subnet_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_elasticache_subnets",
                                            "local.len_elasticache_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.intra",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "intra",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.intra_subnet_ipv6_native",
                                                "var.intra_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.intra_subnet_ipv6_native",
                                                "var.intra_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.intra_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.intra_subnet_ipv6_native",
                                                "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.intra_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.intra_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.intra_subnet_ipv6_native"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.intra_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.intra_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.intra_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.intra_subnet_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_intra_subnets",
                                            "local.len_intra_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.outpost",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "outpost",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.outpost_subnet_ipv6_native",
                                                "var.outpost_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.outpost_az"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.outpost_subnet_ipv6_native",
                                                "var.outpost_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "customer_owned_ipv4_pool": {
                                            "references": [
                                                "var.customer_owned_ipv4_pool"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.outpost_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.outpost_subnet_ipv6_native",
                                                "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.outpost_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.outpost_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.outpost_subnet_ipv6_native"
                                            ]
                                        },
                                        "map_customer_owned_ip_on_launch": {
                                            "references": [
                                                "var.map_customer_owned_ip_on_launch"
                                            ]
                                        },
                                        "outpost_arn": {
                                            "references": [
                                                "var.outpost_arn"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.outpost_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.outpost_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.outpost_subnet_suffix",
                                                "var.outpost_az",
                                                "var.tags",
                                                "var.outpost_subnet_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_outpost_subnets",
                                            "local.len_outpost_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.private",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "private",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.private_subnet_ipv6_native",
                                                "var.private_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.private_subnet_ipv6_native",
                                                "var.private_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.private_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.private_subnet_ipv6_native",
                                                "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.private_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.private_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.private_subnet_ipv6_native"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.private_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.private_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.private_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.private_subnet_tags",
                                                "var.private_subnet_tags_per_az",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_private_subnets",
                                            "local.len_private_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.public",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.public_subnet_ipv6_native",
                                                "var.public_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.public_subnet_ipv6_native",
                                                "var.public_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.public_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.public_subnet_ipv6_native",
                                                "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.public_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.public_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.public_subnet_ipv6_native"
                                            ]
                                        },
                                        "map_public_ip_on_launch": {
                                            "references": [
                                                "var.map_public_ip_on_launch"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.public_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.public_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.public_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.public_subnet_tags",
                                                "var.public_subnet_tags_per_az",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_public_subnets",
                                            "var.one_nat_gateway_per_az",
                                            "local.len_public_subnets",
                                            "var.azs",
                                            "local.len_public_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_subnet.redshift",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "redshift",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_ipv6_address_on_creation": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.redshift_subnet_ipv6_native",
                                                "var.redshift_subnet_assign_ipv6_address_on_creation"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "availability_zone_id": {
                                            "references": [
                                                "var.azs",
                                                "count.index",
                                                "var.azs",
                                                "count.index"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.redshift_subnet_ipv6_native",
                                                "var.redshift_subnets",
                                                "count.index"
                                            ]
                                        },
                                        "enable_dns64": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.redshift_subnet_enable_dns64"
                                            ]
                                        },
                                        "enable_resource_name_dns_a_record_on_launch": {
                                            "references": [
                                                "var.redshift_subnet_ipv6_native",
                                                "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                                            ]
                                        },
                                        "enable_resource_name_dns_aaaa_record_on_launch": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.redshift_subnet_ipv6_prefixes",
                                                "aws_vpc.this[0].ipv6_cidr_block",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this",
                                                "var.redshift_subnet_ipv6_prefixes",
                                                "count.index"
                                            ]
                                        },
                                        "ipv6_native": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.redshift_subnet_ipv6_native"
                                            ]
                                        },
                                        "private_dns_hostname_type_on_launch": {
                                            "references": [
                                                "var.redshift_subnet_private_dns_hostname_type_on_launch"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.redshift_subnet_names",
                                                "count.index",
                                                "var.name",
                                                "var.redshift_subnet_suffix",
                                                "var.azs",
                                                "count.index",
                                                "var.tags",
                                                "var.redshift_subnet_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_redshift_subnets",
                                            "local.len_redshift_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpc.this",
                                    "mode": "managed",
                                    "type": "aws_vpc",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "assign_generated_ipv6_cidr_block": {
                                            "references": [
                                                "var.enable_ipv6",
                                                "var.use_ipam_pool"
                                            ]
                                        },
                                        "cidr_block": {
                                            "references": [
                                                "var.use_ipam_pool",
                                                "var.cidr"
                                            ]
                                        },
                                        "enable_dns_hostnames": {
                                            "references": [
                                                "var.enable_dns_hostnames"
                                            ]
                                        },
                                        "enable_dns_support": {
                                            "references": [
                                                "var.enable_dns_support"
                                            ]
                                        },
                                        "enable_network_address_usage_metrics": {
                                            "references": [
                                                "var.enable_network_address_usage_metrics"
                                            ]
                                        },
                                        "instance_tenancy": {
                                            "references": [
                                                "var.instance_tenancy"
                                            ]
                                        },
                                        "ipv4_ipam_pool_id": {
                                            "references": [
                                                "var.ipv4_ipam_pool_id"
                                            ]
                                        },
                                        "ipv4_netmask_length": {
                                            "references": [
                                                "var.ipv4_netmask_length"
                                            ]
                                        },
                                        "ipv6_cidr_block": {
                                            "references": [
                                                "var.ipv6_cidr"
                                            ]
                                        },
                                        "ipv6_cidr_block_network_border_group": {
                                            "references": [
                                                "var.ipv6_cidr_block_network_border_group"
                                            ]
                                        },
                                        "ipv6_ipam_pool_id": {
                                            "references": [
                                                "var.ipv6_ipam_pool_id"
                                            ]
                                        },
                                        "ipv6_netmask_length": {
                                            "references": [
                                                "var.ipv6_netmask_length"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.tags",
                                                "var.vpc_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 1,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpc_dhcp_options.this",
                                    "mode": "managed",
                                    "type": "aws_vpc_dhcp_options",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "domain_name": {
                                            "references": [
                                                "var.dhcp_options_domain_name"
                                            ]
                                        },
                                        "domain_name_servers": {
                                            "references": [
                                                "var.dhcp_options_domain_name_servers"
                                            ]
                                        },
                                        "netbios_name_servers": {
                                            "references": [
                                                "var.dhcp_options_netbios_name_servers"
                                            ]
                                        },
                                        "netbios_node_type": {
                                            "references": [
                                                "var.dhcp_options_netbios_node_type"
                                            ]
                                        },
                                        "ntp_servers": {
                                            "references": [
                                                "var.dhcp_options_ntp_servers"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.tags",
                                                "var.dhcp_options_tags"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_dhcp_options"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpc_dhcp_options_association.this",
                                    "mode": "managed",
                                    "type": "aws_vpc_dhcp_options_association",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "dhcp_options_id": {
                                            "references": [
                                                "aws_vpc_dhcp_options.this[0].id",
                                                "aws_vpc_dhcp_options.this[0]",
                                                "aws_vpc_dhcp_options.this"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_dhcp_options"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpc_ipv4_cidr_block_association.this",
                                    "mode": "managed",
                                    "type": "aws_vpc_ipv4_cidr_block_association",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "cidr_block": {
                                            "references": [
                                                "var.secondary_cidr_blocks",
                                                "count.index"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "aws_vpc.this[0].id",
                                                "aws_vpc.this[0]",
                                                "aws_vpc.this"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.secondary_cidr_blocks",
                                            "var.secondary_cidr_blocks"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpn_gateway.this",
                                    "mode": "managed",
                                    "type": "aws_vpn_gateway",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "amazon_side_asn": {
                                            "references": [
                                                "var.amazon_side_asn"
                                            ]
                                        },
                                        "availability_zone": {
                                            "references": [
                                                "var.vpn_gateway_az"
                                            ]
                                        },
                                        "tags": {
                                            "references": [
                                                "var.name",
                                                "var.tags",
                                                "var.vpn_gateway_tags"
                                            ]
                                        },
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.enable_vpn_gateway"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpn_gateway_attachment.this",
                                    "mode": "managed",
                                    "type": "aws_vpn_gateway_attachment",
                                    "name": "this",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "vpc_id": {
                                            "references": [
                                                "local.vpc_id"
                                            ]
                                        },
                                        "vpn_gateway_id": {
                                            "references": [
                                                "var.vpn_gateway_id"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "var.vpn_gateway_id"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpn_gateway_route_propagation.intra",
                                    "mode": "managed",
                                    "type": "aws_vpn_gateway_route_propagation",
                                    "name": "intra",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.intra",
                                                "count.index"
                                            ]
                                        },
                                        "vpn_gateway_id": {
                                            "references": [
                                                "aws_vpn_gateway.this",
                                                "aws_vpn_gateway_attachment.this",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.propagate_intra_route_tables_vgw",
                                            "var.enable_vpn_gateway",
                                            "var.vpn_gateway_id",
                                            "local.len_intra_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpn_gateway_route_propagation.private",
                                    "mode": "managed",
                                    "type": "aws_vpn_gateway_route_propagation",
                                    "name": "private",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.private",
                                                "count.index"
                                            ]
                                        },
                                        "vpn_gateway_id": {
                                            "references": [
                                                "aws_vpn_gateway.this",
                                                "aws_vpn_gateway_attachment.this",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.propagate_private_route_tables_vgw",
                                            "var.enable_vpn_gateway",
                                            "var.vpn_gateway_id",
                                            "local.len_private_subnets"
                                        ]
                                    }
                                },
                                {
                                    "address": "aws_vpn_gateway_route_propagation.public",
                                    "mode": "managed",
                                    "type": "aws_vpn_gateway_route_propagation",
                                    "name": "public",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "route_table_id": {
                                            "references": [
                                                "aws_route_table.public",
                                                "count.index"
                                            ]
                                        },
                                        "vpn_gateway_id": {
                                            "references": [
                                                "aws_vpn_gateway.this",
                                                "aws_vpn_gateway_attachment.this",
                                                "count.index"
                                            ]
                                        }
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_vpc",
                                            "var.propagate_public_route_tables_vgw",
                                            "var.enable_vpn_gateway",
                                            "var.vpn_gateway_id"
                                        ]
                                    }
                                },
                                {
                                    "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                                    "mode": "data",
                                    "type": "aws_iam_policy_document",
                                    "name": "flow_log_cloudwatch_assume_role",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "statement": [
                                            {
                                                "actions": {
                                                    "constant_value": [
                                                        "sts:AssumeRole"
                                                    ]
                                                },
                                                "effect": {
                                                    "constant_value": "Allow"
                                                },
                                                "principals": [
                                                    {
                                                        "identifiers": {
                                                            "constant_value": [
                                                                "vpc-flow-logs.amazonaws.com"
                                                            ]
                                                        },
                                                        "type": {
                                                            "constant_value": "Service"
                                                        }
                                                    }
                                                ],
                                                "sid": {
                                                    "constant_value": "AWSVPCFlowLogsAssumeRole"
                                                }
                                            }
                                        ]
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_iam_role"
                                        ]
                                    }
                                },
                                {
                                    "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                                    "mode": "data",
                                    "type": "aws_iam_policy_document",
                                    "name": "vpc_flow_log_cloudwatch",
                                    "provider_config_key": "aws",
                                    "expressions": {
                                        "statement": [
                                            {
                                                "actions": {
                                                    "constant_value": [
                                                        "logs:CreateLogStream",
                                                        "logs:PutLogEvents",
                                                        "logs:DescribeLogGroups",
                                                        "logs:DescribeLogStreams"
                                                    ]
                                                },
                                                "effect": {
                                                    "constant_value": "Allow"
                                                },
                                                "resources": {
                                                    "constant_value": [
                                                        "*"
                                                    ]
                                                },
                                                "sid": {
                                                    "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                                }
                                            }
                                        ]
                                    },
                                    "schema_version": 0,
                                    "count_expression": {
                                        "references": [
                                            "local.create_flow_log_cloudwatch_iam_role"
                                        ]
                                    }
                                }
                            ],
                            "variables": {
                                "amazon_side_asn": {
                                    "default": "64512",
                                    "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
                                },
                                "azs": {
                                    "default": [],
                                    "description": "A list of availability zones names or ids in the region"
                                },
                                "cidr": {
                                    "default": "10.0.0.0/16",
                                    "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`"
                                },
                                "create_database_internet_gateway_route": {
                                    "default": false,
                                    "description": "Controls if an internet gateway route for public database access should be created"
                                },
                                "create_database_nat_gateway_route": {
                                    "default": false,
                                    "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                                },
                                "create_database_subnet_group": {
                                    "default": true,
                                    "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                                },
                                "create_database_subnet_route_table": {
                                    "default": false,
                                    "description": "Controls if separate route table for database should be created"
                                },
                                "create_egress_only_igw": {
                                    "default": true,
                                    "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
                                },
                                "create_elasticache_subnet_group": {
                                    "default": true,
                                    "description": "Controls if elasticache subnet group should be created"
                                },
                                "create_elasticache_subnet_route_table": {
                                    "default": false,
                                    "description": "Controls if separate route table for elasticache should be created"
                                },
                                "create_flow_log_cloudwatch_iam_role": {
                                    "default": false,
                                    "description": "Whether to create IAM role for VPC Flow Logs"
                                },
                                "create_flow_log_cloudwatch_log_group": {
                                    "default": false,
                                    "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                                },
                                "create_igw": {
                                    "default": true,
                                    "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
                                },
                                "create_multiple_intra_route_tables": {
                                    "default": false,
                                    "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`"
                                },
                                "create_multiple_public_route_tables": {
                                    "default": false,
                                    "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`"
                                },
                                "create_redshift_subnet_group": {
                                    "default": true,
                                    "description": "Controls if redshift subnet group should be created"
                                },
                                "create_redshift_subnet_route_table": {
                                    "default": false,
                                    "description": "Controls if separate route table for redshift should be created"
                                },
                                "create_vpc": {
                                    "default": true,
                                    "description": "Controls if VPC should be created (it affects almost all resources)"
                                },
                                "customer_gateway_tags": {
                                    "default": {},
                                    "description": "Additional tags for the Customer Gateway"
                                },
                                "customer_gateways": {
                                    "default": {},
                                    "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                                },
                                "customer_owned_ipv4_pool": {
                                    "default": null,
                                    "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
                                },
                                "database_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the database subnets network ACL"
                                },
                                "database_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                                },
                                "database_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Database subnets inbound network ACL rules"
                                },
                                "database_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Database subnets outbound network ACL rules"
                                },
                                "database_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the database route tables"
                                },
                                "database_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "database_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "database_subnet_group_name": {
                                    "default": null,
                                    "description": "Name of database subnet group"
                                },
                                "database_subnet_group_tags": {
                                    "default": {},
                                    "description": "Additional tags for the database subnet group"
                                },
                                "database_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "database_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "database_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
                                },
                                "database_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "database_subnet_suffix": {
                                    "default": "db",
                                    "description": "Suffix to append to database subnets name"
                                },
                                "database_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the database subnets"
                                },
                                "database_subnets": {
                                    "default": [],
                                    "description": "A list of database subnets inside the VPC"
                                },
                                "default_network_acl_egress": {
                                    "default": [
                                        {
                                            "action": "allow",
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_no": "100",
                                            "to_port": "0"
                                        },
                                        {
                                            "action": "allow",
                                            "from_port": "0",
                                            "ipv6_cidr_block": "::/0",
                                            "protocol": "-1",
                                            "rule_no": "101",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "List of maps of egress rules to set on the Default Network ACL"
                                },
                                "default_network_acl_ingress": {
                                    "default": [
                                        {
                                            "action": "allow",
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_no": "100",
                                            "to_port": "0"
                                        },
                                        {
                                            "action": "allow",
                                            "from_port": "0",
                                            "ipv6_cidr_block": "::/0",
                                            "protocol": "-1",
                                            "rule_no": "101",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "List of maps of ingress rules to set on the Default Network ACL"
                                },
                                "default_network_acl_name": {
                                    "default": null,
                                    "description": "Name to be used on the Default Network ACL"
                                },
                                "default_network_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the Default Network ACL"
                                },
                                "default_route_table_name": {
                                    "default": null,
                                    "description": "Name to be used on the default route table"
                                },
                                "default_route_table_propagating_vgws": {
                                    "default": [],
                                    "description": "List of virtual gateways for propagation"
                                },
                                "default_route_table_routes": {
                                    "default": [],
                                    "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                                },
                                "default_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the default route table"
                                },
                                "default_security_group_egress": {
                                    "default": [],
                                    "description": "List of maps of egress rules to set on the default security group"
                                },
                                "default_security_group_ingress": {
                                    "default": [],
                                    "description": "List of maps of ingress rules to set on the default security group"
                                },
                                "default_security_group_name": {
                                    "default": null,
                                    "description": "Name to be used on the default security group"
                                },
                                "default_security_group_tags": {
                                    "default": {},
                                    "description": "Additional tags for the default security group"
                                },
                                "default_vpc_enable_dns_hostnames": {
                                    "default": true,
                                    "description": "Should be true to enable DNS hostnames in the Default VPC"
                                },
                                "default_vpc_enable_dns_support": {
                                    "default": true,
                                    "description": "Should be true to enable DNS support in the Default VPC"
                                },
                                "default_vpc_name": {
                                    "default": null,
                                    "description": "Name to be used on the Default VPC"
                                },
                                "default_vpc_tags": {
                                    "default": {},
                                    "description": "Additional tags for the Default VPC"
                                },
                                "dhcp_options_domain_name": {
                                    "default": "",
                                    "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                                },
                                "dhcp_options_domain_name_servers": {
                                    "default": [
                                        "AmazonProvidedDNS"
                                    ],
                                    "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                                },
                                "dhcp_options_netbios_name_servers": {
                                    "default": [],
                                    "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                                },
                                "dhcp_options_netbios_node_type": {
                                    "default": "",
                                    "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                                },
                                "dhcp_options_ntp_servers": {
                                    "default": [],
                                    "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                                },
                                "dhcp_options_tags": {
                                    "default": {},
                                    "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                                },
                                "elasticache_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the elasticache subnets network ACL"
                                },
                                "elasticache_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                                },
                                "elasticache_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Elasticache subnets inbound network ACL rules"
                                },
                                "elasticache_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Elasticache subnets outbound network ACL rules"
                                },
                                "elasticache_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the elasticache route tables"
                                },
                                "elasticache_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "elasticache_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "elasticache_subnet_group_name": {
                                    "default": null,
                                    "description": "Name of elasticache subnet group"
                                },
                                "elasticache_subnet_group_tags": {
                                    "default": {},
                                    "description": "Additional tags for the elasticache subnet group"
                                },
                                "elasticache_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "elasticache_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "elasticache_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
                                },
                                "elasticache_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "elasticache_subnet_suffix": {
                                    "default": "elasticache",
                                    "description": "Suffix to append to elasticache subnets name"
                                },
                                "elasticache_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the elasticache subnets"
                                },
                                "elasticache_subnets": {
                                    "default": [],
                                    "description": "A list of elasticache subnets inside the VPC"
                                },
                                "enable_dhcp_options": {
                                    "default": false,
                                    "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                                },
                                "enable_dns_hostnames": {
                                    "default": true,
                                    "description": "Should be true to enable DNS hostnames in the VPC"
                                },
                                "enable_dns_support": {
                                    "default": true,
                                    "description": "Should be true to enable DNS support in the VPC"
                                },
                                "enable_flow_log": {
                                    "default": false,
                                    "description": "Whether or not to enable VPC Flow Logs"
                                },
                                "enable_ipv6": {
                                    "default": false,
                                    "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
                                },
                                "enable_nat_gateway": {
                                    "default": false,
                                    "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                                },
                                "enable_network_address_usage_metrics": {
                                    "default": null,
                                    "description": "Determines whether network address usage metrics are enabled for the VPC"
                                },
                                "enable_public_redshift": {
                                    "default": false,
                                    "description": "Controls if redshift should have public routing table"
                                },
                                "enable_vpn_gateway": {
                                    "default": false,
                                    "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                                },
                                "external_nat_ip_ids": {
                                    "default": [],
                                    "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                                },
                                "external_nat_ips": {
                                    "default": [],
                                    "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                                },
                                "flow_log_cloudwatch_iam_role_arn": {
                                    "default": "",
                                    "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
                                },
                                "flow_log_cloudwatch_log_group_class": {
                                    "default": null,
                                    "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS"
                                },
                                "flow_log_cloudwatch_log_group_kms_key_id": {
                                    "default": null,
                                    "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
                                },
                                "flow_log_cloudwatch_log_group_name_prefix": {
                                    "default": "/aws/vpc-flow-log/",
                                    "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
                                },
                                "flow_log_cloudwatch_log_group_name_suffix": {
                                    "default": "",
                                    "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
                                },
                                "flow_log_cloudwatch_log_group_retention_in_days": {
                                    "default": null,
                                    "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
                                },
                                "flow_log_cloudwatch_log_group_skip_destroy": {
                                    "default": false,
                                    "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
                                },
                                "flow_log_deliver_cross_account_role": {
                                    "default": null,
                                    "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
                                },
                                "flow_log_destination_arn": {
                                    "default": "",
                                    "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
                                },
                                "flow_log_destination_type": {
                                    "default": "cloud-watch-logs",
                                    "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
                                },
                                "flow_log_file_format": {
                                    "default": null,
                                    "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
                                },
                                "flow_log_hive_compatible_partitions": {
                                    "default": false,
                                    "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
                                },
                                "flow_log_log_format": {
                                    "default": null,
                                    "description": "The fields to include in the flow log record, in the order in which they should appear"
                                },
                                "flow_log_max_aggregation_interval": {
                                    "default": 600,
                                    "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
                                },
                                "flow_log_per_hour_partition": {
                                    "default": false,
                                    "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
                                },
                                "flow_log_traffic_type": {
                                    "default": "ALL",
                                    "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
                                },
                                "igw_tags": {
                                    "default": {},
                                    "description": "Additional tags for the internet gateway"
                                },
                                "instance_tenancy": {
                                    "default": "default",
                                    "description": "A tenancy option for instances launched into the VPC"
                                },
                                "intra_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the intra subnets network ACL"
                                },
                                "intra_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                                },
                                "intra_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Intra subnets inbound network ACLs"
                                },
                                "intra_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Intra subnets outbound network ACLs"
                                },
                                "intra_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the intra route tables"
                                },
                                "intra_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "intra_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "intra_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "intra_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "intra_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
                                },
                                "intra_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "intra_subnet_suffix": {
                                    "default": "intra",
                                    "description": "Suffix to append to intra subnets name"
                                },
                                "intra_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the intra subnets"
                                },
                                "intra_subnets": {
                                    "default": [],
                                    "description": "A list of intra subnets inside the VPC"
                                },
                                "ipv4_ipam_pool_id": {
                                    "default": null,
                                    "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
                                },
                                "ipv4_netmask_length": {
                                    "default": null,
                                    "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
                                },
                                "ipv6_cidr": {
                                    "default": null,
                                    "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
                                },
                                "ipv6_cidr_block_network_border_group": {
                                    "default": null,
                                    "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
                                },
                                "ipv6_ipam_pool_id": {
                                    "default": null,
                                    "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
                                },
                                "ipv6_netmask_length": {
                                    "default": null,
                                    "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
                                },
                                "manage_default_network_acl": {
                                    "default": true,
                                    "description": "Should be true to adopt and manage Default Network ACL"
                                },
                                "manage_default_route_table": {
                                    "default": true,
                                    "description": "Should be true to manage default route table"
                                },
                                "manage_default_security_group": {
                                    "default": true,
                                    "description": "Should be true to adopt and manage default security group"
                                },
                                "manage_default_vpc": {
                                    "default": false,
                                    "description": "Should be true to adopt and manage Default VPC"
                                },
                                "map_customer_owned_ip_on_launch": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
                                },
                                "map_public_ip_on_launch": {
                                    "default": false,
                                    "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
                                },
                                "name": {
                                    "default": "",
                                    "description": "Name to be used on all the resources as identifier"
                                },
                                "nat_eip_tags": {
                                    "default": {},
                                    "description": "Additional tags for the NAT EIP"
                                },
                                "nat_gateway_destination_cidr_block": {
                                    "default": "0.0.0.0/0",
                                    "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
                                },
                                "nat_gateway_tags": {
                                    "default": {},
                                    "description": "Additional tags for the NAT gateways"
                                },
                                "one_nat_gateway_per_az": {
                                    "default": false,
                                    "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
                                },
                                "outpost_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the outpost subnets network ACL"
                                },
                                "outpost_arn": {
                                    "default": null,
                                    "description": "ARN of Outpost you want to create a subnet in"
                                },
                                "outpost_az": {
                                    "default": null,
                                    "description": "AZ where Outpost is anchored"
                                },
                                "outpost_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                                },
                                "outpost_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Outpost subnets inbound network ACLs"
                                },
                                "outpost_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Outpost subnets outbound network ACLs"
                                },
                                "outpost_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "outpost_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "outpost_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "outpost_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "outpost_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
                                },
                                "outpost_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "outpost_subnet_suffix": {
                                    "default": "outpost",
                                    "description": "Suffix to append to outpost subnets name"
                                },
                                "outpost_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the outpost subnets"
                                },
                                "outpost_subnets": {
                                    "default": [],
                                    "description": "A list of outpost subnets inside the VPC"
                                },
                                "private_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the private subnets network ACL"
                                },
                                "private_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                                },
                                "private_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Private subnets inbound network ACLs"
                                },
                                "private_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Private subnets outbound network ACLs"
                                },
                                "private_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the private route tables"
                                },
                                "private_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "private_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "private_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "private_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "private_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
                                },
                                "private_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "private_subnet_suffix": {
                                    "default": "private",
                                    "description": "Suffix to append to private subnets name"
                                },
                                "private_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the private subnets"
                                },
                                "private_subnet_tags_per_az": {
                                    "default": {},
                                    "description": "Additional tags for the private subnets where the primary key is the AZ"
                                },
                                "private_subnets": {
                                    "default": [],
                                    "description": "A list of private subnets inside the VPC"
                                },
                                "propagate_intra_route_tables_vgw": {
                                    "default": false,
                                    "description": "Should be true if you want route table propagation"
                                },
                                "propagate_private_route_tables_vgw": {
                                    "default": false,
                                    "description": "Should be true if you want route table propagation"
                                },
                                "propagate_public_route_tables_vgw": {
                                    "default": false,
                                    "description": "Should be true if you want route table propagation"
                                },
                                "public_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the public subnets network ACL"
                                },
                                "public_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                                },
                                "public_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Public subnets inbound network ACLs"
                                },
                                "public_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Public subnets outbound network ACLs"
                                },
                                "public_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the public route tables"
                                },
                                "public_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "public_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "public_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "public_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "public_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
                                },
                                "public_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "public_subnet_suffix": {
                                    "default": "public",
                                    "description": "Suffix to append to public subnets name"
                                },
                                "public_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the public subnets"
                                },
                                "public_subnet_tags_per_az": {
                                    "default": {},
                                    "description": "Additional tags for the public subnets where the primary key is the AZ"
                                },
                                "public_subnets": {
                                    "default": [],
                                    "description": "A list of public subnets inside the VPC"
                                },
                                "putin_khuylo": {
                                    "default": true,
                                    "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                                },
                                "redshift_acl_tags": {
                                    "default": {},
                                    "description": "Additional tags for the redshift subnets network ACL"
                                },
                                "redshift_dedicated_network_acl": {
                                    "default": false,
                                    "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                                },
                                "redshift_inbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Redshift subnets inbound network ACL rules"
                                },
                                "redshift_outbound_acl_rules": {
                                    "default": [
                                        {
                                            "cidr_block": "0.0.0.0/0",
                                            "from_port": "0",
                                            "protocol": "-1",
                                            "rule_action": "allow",
                                            "rule_number": "100",
                                            "to_port": "0"
                                        }
                                    ],
                                    "description": "Redshift subnets outbound network ACL rules"
                                },
                                "redshift_route_table_tags": {
                                    "default": {},
                                    "description": "Additional tags for the redshift route tables"
                                },
                                "redshift_subnet_assign_ipv6_address_on_creation": {
                                    "default": false,
                                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                },
                                "redshift_subnet_enable_dns64": {
                                    "default": true,
                                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                },
                                "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                                    "default": false,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                },
                                "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                    "default": true,
                                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                },
                                "redshift_subnet_group_name": {
                                    "default": null,
                                    "description": "Name of redshift subnet group"
                                },
                                "redshift_subnet_group_tags": {
                                    "default": {},
                                    "description": "Additional tags for the redshift subnet group"
                                },
                                "redshift_subnet_ipv6_native": {
                                    "default": false,
                                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                },
                                "redshift_subnet_ipv6_prefixes": {
                                    "default": [],
                                    "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                },
                                "redshift_subnet_names": {
                                    "default": [],
                                    "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
                                },
                                "redshift_subnet_private_dns_hostname_type_on_launch": {
                                    "default": null,
                                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                },
                                "redshift_subnet_suffix": {
                                    "default": "redshift",
                                    "description": "Suffix to append to redshift subnets name"
                                },
                                "redshift_subnet_tags": {
                                    "default": {},
                                    "description": "Additional tags for the redshift subnets"
                                },
                                "redshift_subnets": {
                                    "default": [],
                                    "description": "A list of redshift subnets inside the VPC"
                                },
                                "reuse_nat_ips": {
                                    "default": false,
                                    "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                                },
                                "secondary_cidr_blocks": {
                                    "default": [],
                                    "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                                },
                                "single_nat_gateway": {
                                    "default": false,
                                    "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                                },
                                "tags": {
                                    "default": {},
                                    "description": "A map of tags to add to all resources"
                                },
                                "use_ipam_pool": {
                                    "default": false,
                                    "description": "Determines whether IPAM pool is used for CIDR allocation"
                                },
                                "vpc_flow_log_permissions_boundary": {
                                    "default": null,
                                    "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                                },
                                "vpc_flow_log_tags": {
                                    "default": {},
                                    "description": "Additional tags for the VPC Flow Logs"
                                },
                                "vpc_tags": {
                                    "default": {},
                                    "description": "Additional tags for the VPC"
                                },
                                "vpn_gateway_az": {
                                    "default": null,
                                    "description": "The Availability Zone for the VPN Gateway"
                                },
                                "vpn_gateway_id": {
                                    "default": "",
                                    "description": "ID of VPN Gateway to attach to the VPC"
                                },
                                "vpn_gateway_tags": {
                                    "default": {},
                                    "description": "Additional tags for the VPN gateway"
                                }
                            }
                        },
                        "version_constraint": "5.8.0"
                    }
                },
                "variables": {
                    "azs": {
                        "default": 2
                    },
                    "database_subnet_names": {
                        "default": []
                    },
                    "database_subnets": {
                        "default": null
                    },
                    "elasticache_subnet_names": {
                        "default": []
                    },
                    "elasticache_subnets": {
                        "default": null
                    },
                    "enable_nat_gateway": {
                        "default": true
                    },
                    "intra_subnet_names": {
                        "default": []
                    },
                    "intra_subnets": {
                        "default": null
                    },
                    "one_nat_gateway_per_az": {
                        "default": true
                    },
                    "prefix": {},
                    "private_subnet_names": {
                        "default": []
                    },
                    "private_subnets": {
                        "default": null
                    },
                    "public_subnet_names": {
                        "default": []
                    },
                    "public_subnets": {
                        "default": null
                    },
                    "vpc_cidr": {
                        "default": "10.156.0.0/16"
                    }
                }
            }
        },
        "relevant_attributes": [
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "ipv6_cidr_block"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table.elasticache",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_subnet.private",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_subnet.elasticache",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "ipv6_association_id"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "default_security_group_id"
                ]
            },
            {
                "resource": "module.vpc.aws_internet_gateway.this[0]",
                "attribute": [
                    "arn"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "default_route_table_id"
                ]
            },
            {
                "resource": "module.vpc.aws_subnet.public",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route_table.database",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "owner_id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table.intra",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route.database_nat_gateway",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route.private_ipv6_egress",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_subnet.database",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_nat_gateway.this",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "enable_dns_hostnames"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "arn"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "main_route_table_id"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "enable_dns_support"
                ]
            },
            {
                "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
                "attribute": [
                    "arn"
                ]
            },
            {
                "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
                "attribute": [
                    "arn"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table.private",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_customer_gateway.this",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_db_subnet_group.database[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table_association.intra",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route_table.redshift",
                "attribute": []
            },
            {
                "resource": "aws_security_group.pipeline_security_group",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table_association.redshift",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route_table_association.database",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_subnet.redshift",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_route_table_association.public",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_egress_only_internet_gateway.this",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "default_network_acl_id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table.public[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table_association.private",
                "attribute": []
            },
            {
                "resource": "data.aws_availability_zones.available",
                "attribute": [
                    "names"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table.public",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "instance_tenancy"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table_association.elasticache",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
                "attribute": [
                    "name"
                ]
            },
            {
                "resource": "module.vpc.aws_route.private_nat_gateway",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_internet_gateway.this[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_route_table_association.redshift_public",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_db_subnet_group.database[0]",
                "attribute": [
                    "name"
                ]
            },
            {
                "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
                "attribute": [
                    "vpc_id"
                ]
            },
            {
                "resource": "module.vpc.aws_route.public_internet_gateway[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
                "attribute": [
                    "id"
                ]
            },
            {
                "resource": "module.vpc.aws_subnet.intra",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_vpc.this[0]",
                "attribute": [
                    "cidr_block"
                ]
            },
            {
                "resource": "module.vpc.aws_subnet.outpost",
                "attribute": []
            },
            {
                "resource": "module.vpc.aws_eip.nat",
                "attribute": []
            }
        ],
        "timestamp": "2024-08-18T17:06:35Z",
        "errored": false
    },
    "tf_resources_created": [
        {
            "address": "aws_security_group.pipeline_security_group",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "pipeline_security_group",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "fdfd-default Security group used by pipelines that run terraform",
                    "name": "fdfd-default-pipeline",
                    "revoke_rules_on_delete": false,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "egress": [],
                    "id": true,
                    "ingress": [],
                    "name_prefix": true,
                    "owner_id": true,
                    "vpc_id": true
                },
                "after_unknown": {
                    "arn": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_security_group_rule.pipeline_security_group",
            "mode": "managed",
            "type": "aws_security_group_rule",
            "name": "pipeline_security_group",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "cidr_blocks": [
                        false
                    ],
                    "description": null,
                    "from_port": 0,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": null,
                    "protocol": "-1",
                    "self": false,
                    "timeouts": null,
                    "to_port": 0,
                    "type": "egress",
                    "id": true,
                    "security_group_id": true,
                    "security_group_rule_id": true,
                    "source_security_group_id": true
                },
                "after_unknown": {
                    "cidr_blocks": [
                        false
                    ],
                    "id": true,
                    "security_group_id": true,
                    "security_group_rule_id": true,
                    "source_security_group_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "cidr_blocks": [
                        false
                    ]
                }
            }
        },
        {
            "address": "aws_ssm_parameter.database_route_table_ids[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "database_route_table_ids",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/database_route_table_ids",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.database_subnet_cidrs[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "database_subnet_cidrs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/database_subnet_cidrs",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.database_subnet_group[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "database_subnet_group",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/database_subnet_group",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "String",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.database_subnet_names",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "database_subnet_names",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/database_subnet_names",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.database_subnets[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "database_subnets",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/database_subnets",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.elasticache_route_table_ids[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "elasticache_route_table_ids",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/elasticache_route_table_ids",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.elasticache_subnet_cidrs[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "elasticache_subnet_cidrs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/elasticache_subnet_cidrs",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.elasticache_subnet_group[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "elasticache_subnet_group",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/elasticache_subnet_group",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "String",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.elasticache_subnet_names",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "elasticache_subnet_names",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/elasticache_subnet_names",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.elasticache_subnets[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "elasticache_subnets",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/elasticache_subnets",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.intra_route_table_ids[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "intra_route_table_ids",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/intra_route_table_ids",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.intra_subnet_cidrs[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "intra_subnet_cidrs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/intra_subnet_cidrs",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.intra_subnet_names",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "intra_subnet_names",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/intra_subnet_names",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.intra_subnets[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "intra_subnets",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/intra_subnets",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.pipeline_security_group",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "pipeline_security_group",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/pipeline_security_group",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "String",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.private_route_table_ids[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "private_route_table_ids",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/private_route_table_ids",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.private_subnet_cidrs",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "private_subnet_cidrs",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/private_subnet_cidrs",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.private_subnet_names",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "private_subnet_names",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/private_subnet_names",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.private_subnets",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "private_subnets",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/private_subnets",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.public_route_table_ids[0]",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "public_route_table_ids",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/public_route_table_ids",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.public_subnet_cidrs",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "public_subnet_cidrs",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/public_subnet_cidrs",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.public_subnet_names",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "public_subnet_names",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/public_subnet_names",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "value": true,
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.public_subnets",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "public_subnets",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/public_subnets",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "StringList",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.vpc_id",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "vpc_id",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/entigo-infralib/fdfd-default/vpc_id",
                    "overwrite": null,
                    "tags": {},
                    "tags_all": {},
                    "type": "String",
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags": {},
                    "tags_all": {},
                    "tier": true,
                    "value": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "module.vpc.aws_db_subnet_group.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_db_subnet_group",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Database subnet group for fdfd-default",
                    "name": "fdfd-default",
                    "tags": {},
                    "tags_all": {},
                    "arn": true,
                    "id": true,
                    "name_prefix": true,
                    "subnet_ids": [],
                    "supported_network_types": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name_prefix": true,
                    "subnet_ids": true,
                    "supported_network_types": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "subnet_ids": [],
                    "supported_network_types": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_default_network_acl.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_network_acl",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "egress": [
                        {},
                        {}
                    ],
                    "ingress": [
                        {},
                        {}
                    ],
                    "subnet_ids": null,
                    "tags": {},
                    "tags_all": {},
                    "arn": true,
                    "default_network_acl_id": true,
                    "id": true,
                    "owner_id": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "egress": [
                        {},
                        {}
                    ],
                    "id": true,
                    "ingress": [
                        {},
                        {}
                    ],
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {},
                        {}
                    ],
                    "ingress": [
                        {},
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_default_route_table.default[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_route_table",
            "name": "default",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "propagating_vgws": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "arn": true,
                    "default_route_table_id": true,
                    "id": true,
                    "owner_id": true,
                    "route": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "default_route_table_id": true,
                    "id": true,
                    "owner_id": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "route": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_default_security_group.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_security_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "revoke_rules_on_delete": false,
                    "tags": {},
                    "tags_all": {},
                    "arn": true,
                    "description": true,
                    "egress": [],
                    "id": true,
                    "ingress": [],
                    "name": true,
                    "name_prefix": true,
                    "owner_id": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "description": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name": true,
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "vpc": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "vpc": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_elasticache_subnet_group",
            "name": "elasticache",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "ElastiCache subnet group for fdfd-default",
                    "name": "fdfd-default",
                    "tags": {},
                    "tags_all": {},
                    "arn": true,
                    "id": true,
                    "subnet_ids": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "subnet_ids": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "subnet_ids": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_internet_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_internet_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": [],
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": [],
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {},
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {},
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.public_internet_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "public_internet_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {},
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null,
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.intra[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "intra",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": [],
                    "route": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": [],
                    "route": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": [],
                    "route": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": [],
                    "route": [],
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.database[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "database",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.elasticache[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "elasticache",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.elasticache[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "elasticache",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.intra[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "intra",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.intra[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "intra",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null,
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_subnet.database[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "database",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.156.128.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.database[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "database",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.156.144.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.elasticache[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "elasticache",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.156.192.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.elasticache[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "elasticache",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.156.200.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.intra[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "intra",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.156.32.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.intra[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "intra",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.156.40.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.156.64.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.156.80.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.156.0.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.156.8.0/21",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": null,
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "vpc_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_vpc.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_vpc",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_generated_ipv6_cidr_block": null,
                    "cidr_block": "10.156.0.0/16",
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {},
                    "tags_all": {},
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_network_address_usage_metrics": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "module": "vpc"
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_network_address_usage_metrics": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "tfgraph": {
        "name": "%3",
        "directed": true,
        "strict": false,
        "compound": "true",
        "newrank": "true",
        "_subgraph_cnt": 1,
        "objects": [
            {
                "name": "root",
                "compound": "true",
                "newrank": "true",
                "_gvid": 0,
                "nodes": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220,
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239,
                    240,
                    241,
                    242,
                    243,
                    244,
                    245,
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260,
                    261,
                    262,
                    263,
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307,
                    308,
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325,
                    326,
                    327,
                    328,
                    329,
                    330,
                    331,
                    332,
                    333,
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369,
                    370,
                    371,
                    372,
                    373,
                    374,
                    375,
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389,
                    390,
                    391,
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477,
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526
                ],
                "edges": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    5,
                    6,
                    8,
                    9,
                    10,
                    11,
                    14,
                    12,
                    13,
                    15,
                    16,
                    17,
                    20,
                    18,
                    19,
                    21,
                    22,
                    23,
                    24,
                    27,
                    25,
                    26,
                    28,
                    29,
                    30,
                    33,
                    31,
                    32,
                    34,
                    35,
                    36,
                    417,
                    418,
                    421,
                    419,
                    420,
                    424,
                    422,
                    423,
                    401,
                    427,
                    425,
                    426,
                    430,
                    428,
                    429,
                    432,
                    431,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453,
                    454,
                    455,
                    456,
                    457,
                    476,
                    477,
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    459,
                    485,
                    461,
                    486,
                    462,
                    460,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    463,
                    506,
                    465,
                    507,
                    466,
                    464,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    467,
                    514,
                    469,
                    468,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    470,
                    532,
                    472,
                    471,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    473,
                    539,
                    475,
                    474,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    458,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    46,
                    47,
                    48,
                    49,
                    45,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    74,
                    75,
                    76,
                    77,
                    78,
                    73,
                    72,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    103,
                    102,
                    104,
                    106,
                    107,
                    105,
                    108,
                    109,
                    112,
                    110,
                    113,
                    111,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    195,
                    194,
                    196,
                    197,
                    198,
                    199,
                    200,
                    202,
                    201,
                    203,
                    204,
                    207,
                    208,
                    205,
                    206,
                    209,
                    210,
                    213,
                    212,
                    211,
                    214,
                    215,
                    217,
                    219,
                    216,
                    218,
                    220,
                    221,
                    223,
                    222,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239,
                    240,
                    241,
                    242,
                    243,
                    244,
                    245,
                    246,
                    248,
                    247,
                    252,
                    249,
                    250,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    251,
                    260,
                    264,
                    261,
                    262,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    263,
                    272,
                    275,
                    273,
                    274,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    276,
                    284,
                    286,
                    285,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298,
                    299,
                    303,
                    300,
                    302,
                    305,
                    301,
                    306,
                    307,
                    308,
                    309,
                    310,
                    304,
                    311,
                    312,
                    314,
                    313,
                    315,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325,
                    316,
                    326,
                    327,
                    331,
                    328,
                    329,
                    332,
                    333,
                    334,
                    335,
                    336,
                    337,
                    338,
                    330,
                    339,
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    341,
                    342,
                    356,
                    357,
                    340,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    359,
                    360,
                    358,
                    369,
                    370,
                    371,
                    372,
                    373,
                    374,
                    375,
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389,
                    390,
                    391,
                    393,
                    392,
                    395,
                    394,
                    746,
                    747,
                    786,
                    787,
                    819,
                    820,
                    749,
                    750,
                    796,
                    797,
                    830,
                    831,
                    930,
                    931,
                    932,
                    667,
                    669,
                    668,
                    752,
                    753,
                    800,
                    801,
                    755,
                    756,
                    850,
                    851,
                    758,
                    759,
                    806,
                    807,
                    740,
                    741,
                    763,
                    764,
                    814,
                    815,
                    887,
                    888,
                    897,
                    898,
                    941,
                    942,
                    670,
                    671,
                    728,
                    729,
                    730,
                    731,
                    935,
                    936,
                    939,
                    940,
                    947,
                    948,
                    950,
                    951,
                    953,
                    954,
                    955,
                    956,
                    959,
                    960,
                    708,
                    709,
                    710,
                    711,
                    712,
                    716,
                    717,
                    719,
                    718,
                    743,
                    744,
                    802,
                    803,
                    810,
                    811,
                    989,
                    990,
                    991,
                    713,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    397,
                    398,
                    578,
                    400,
                    579,
                    402,
                    399,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    403,
                    404,
                    599,
                    406,
                    600,
                    407,
                    405,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606,
                    408,
                    607,
                    410,
                    409,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613,
                    614,
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    411,
                    626,
                    413,
                    412,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    414,
                    633,
                    416,
                    415,
                    634,
                    635,
                    636,
                    637,
                    638,
                    640,
                    641,
                    642,
                    639,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    396,
                    661,
                    662,
                    663,
                    664,
                    665,
                    666,
                    922,
                    788,
                    789,
                    790,
                    900,
                    899,
                    791,
                    783,
                    684,
                    685,
                    934,
                    714,
                    724,
                    725,
                    938,
                    943,
                    945,
                    742,
                    987,
                    988,
                    780,
                    958,
                    961,
                    678,
                    679,
                    852,
                    748,
                    933,
                    766,
                    767,
                    792,
                    821,
                    822,
                    823,
                    824,
                    686,
                    687,
                    825,
                    967,
                    827,
                    826,
                    828,
                    793,
                    829,
                    968,
                    969,
                    688,
                    689,
                    690,
                    691,
                    693,
                    694,
                    695,
                    696,
                    698,
                    699,
                    700,
                    701,
                    703,
                    704,
                    705,
                    706,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    751,
                    937,
                    768,
                    769,
                    798,
                    832,
                    833,
                    834,
                    835,
                    726,
                    727,
                    836,
                    970,
                    838,
                    837,
                    839,
                    799,
                    840,
                    971,
                    972,
                    920,
                    901,
                    902,
                    963,
                    903,
                    721,
                    720,
                    904,
                    818,
                    923,
                    986,
                    992,
                    966,
                    672,
                    673,
                    674,
                    964,
                    675,
                    676,
                    732,
                    965,
                    944,
                    733,
                    734,
                    735,
                    736,
                    737,
                    738,
                    715,
                    905,
                    754,
                    946,
                    770,
                    771,
                    804,
                    841,
                    842,
                    843,
                    844,
                    845,
                    973,
                    847,
                    846,
                    848,
                    805,
                    849,
                    974,
                    975,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    692,
                    697,
                    702,
                    707,
                    853,
                    874,
                    680,
                    681,
                    722,
                    785,
                    745,
                    876,
                    875,
                    757,
                    854,
                    855,
                    949,
                    772,
                    773,
                    856,
                    857,
                    858,
                    859,
                    860,
                    976,
                    861,
                    862,
                    863,
                    864,
                    977,
                    760,
                    952,
                    774,
                    775,
                    808,
                    865,
                    784,
                    866,
                    867,
                    868,
                    978,
                    870,
                    869,
                    871,
                    809,
                    872,
                    873,
                    979,
                    980,
                    927,
                    928,
                    929,
                    761,
                    762,
                    776,
                    777,
                    812,
                    877,
                    878,
                    879,
                    880,
                    881,
                    981,
                    883,
                    882,
                    884,
                    813,
                    885,
                    886,
                    982,
                    983,
                    962,
                    765,
                    957,
                    778,
                    779,
                    816,
                    889,
                    890,
                    891,
                    892,
                    781,
                    782,
                    893,
                    984,
                    894,
                    895,
                    817,
                    896,
                    985,
                    723,
                    921,
                    795,
                    794,
                    683,
                    682,
                    912,
                    739,
                    677,
                    913,
                    924,
                    926,
                    925,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024,
                    1025,
                    1026,
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041,
                    1042,
                    1043,
                    1044,
                    1045,
                    1046,
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098
                ]
            },
            {
                "_gvid": 1,
                "name": "[root] aws_security_group.pipeline_security_group (expand)",
                "label": "aws_security_group.pipeline_security_group",
                "shape": "box"
            },
            {
                "_gvid": 2,
                "name": "[root] aws_security_group_rule.pipeline_security_group (expand)",
                "label": "aws_security_group_rule.pipeline_security_group",
                "shape": "box"
            },
            {
                "_gvid": 3,
                "name": "[root] aws_ssm_parameter.database_route_table_ids (expand)",
                "label": "aws_ssm_parameter.database_route_table_ids",
                "shape": "box"
            },
            {
                "_gvid": 4,
                "name": "[root] aws_ssm_parameter.database_subnet_cidrs (expand)",
                "label": "aws_ssm_parameter.database_subnet_cidrs",
                "shape": "box"
            },
            {
                "_gvid": 5,
                "name": "[root] aws_ssm_parameter.database_subnet_group (expand)",
                "label": "aws_ssm_parameter.database_subnet_group",
                "shape": "box"
            },
            {
                "_gvid": 6,
                "name": "[root] aws_ssm_parameter.database_subnet_names (expand)",
                "label": "aws_ssm_parameter.database_subnet_names",
                "shape": "box"
            },
            {
                "_gvid": 7,
                "name": "[root] aws_ssm_parameter.database_subnets (expand)",
                "label": "aws_ssm_parameter.database_subnets",
                "shape": "box"
            },
            {
                "_gvid": 8,
                "name": "[root] aws_ssm_parameter.elasticache_route_table_ids (expand)",
                "label": "aws_ssm_parameter.elasticache_route_table_ids",
                "shape": "box"
            },
            {
                "_gvid": 9,
                "name": "[root] aws_ssm_parameter.elasticache_subnet_cidrs (expand)",
                "label": "aws_ssm_parameter.elasticache_subnet_cidrs",
                "shape": "box"
            },
            {
                "_gvid": 10,
                "name": "[root] aws_ssm_parameter.elasticache_subnet_group (expand)",
                "label": "aws_ssm_parameter.elasticache_subnet_group",
                "shape": "box"
            },
            {
                "_gvid": 11,
                "name": "[root] aws_ssm_parameter.elasticache_subnet_names (expand)",
                "label": "aws_ssm_parameter.elasticache_subnet_names",
                "shape": "box"
            },
            {
                "_gvid": 12,
                "name": "[root] aws_ssm_parameter.elasticache_subnets (expand)",
                "label": "aws_ssm_parameter.elasticache_subnets",
                "shape": "box"
            },
            {
                "_gvid": 13,
                "name": "[root] aws_ssm_parameter.intra_route_table_ids (expand)",
                "label": "aws_ssm_parameter.intra_route_table_ids",
                "shape": "box"
            },
            {
                "_gvid": 14,
                "name": "[root] aws_ssm_parameter.intra_subnet_cidrs (expand)",
                "label": "aws_ssm_parameter.intra_subnet_cidrs",
                "shape": "box"
            },
            {
                "_gvid": 15,
                "name": "[root] aws_ssm_parameter.intra_subnet_names (expand)",
                "label": "aws_ssm_parameter.intra_subnet_names",
                "shape": "box"
            },
            {
                "_gvid": 16,
                "name": "[root] aws_ssm_parameter.intra_subnets (expand)",
                "label": "aws_ssm_parameter.intra_subnets",
                "shape": "box"
            },
            {
                "_gvid": 17,
                "name": "[root] aws_ssm_parameter.pipeline_security_group (expand)",
                "label": "aws_ssm_parameter.pipeline_security_group",
                "shape": "box"
            },
            {
                "_gvid": 18,
                "name": "[root] aws_ssm_parameter.private_route_table_ids (expand)",
                "label": "aws_ssm_parameter.private_route_table_ids",
                "shape": "box"
            },
            {
                "_gvid": 19,
                "name": "[root] aws_ssm_parameter.private_subnet_cidrs (expand)",
                "label": "aws_ssm_parameter.private_subnet_cidrs",
                "shape": "box"
            },
            {
                "_gvid": 20,
                "name": "[root] aws_ssm_parameter.private_subnet_names (expand)",
                "label": "aws_ssm_parameter.private_subnet_names",
                "shape": "box"
            },
            {
                "_gvid": 21,
                "name": "[root] aws_ssm_parameter.private_subnets (expand)",
                "label": "aws_ssm_parameter.private_subnets",
                "shape": "box"
            },
            {
                "_gvid": 22,
                "name": "[root] aws_ssm_parameter.public_route_table_ids (expand)",
                "label": "aws_ssm_parameter.public_route_table_ids",
                "shape": "box"
            },
            {
                "_gvid": 23,
                "name": "[root] aws_ssm_parameter.public_subnet_cidrs (expand)",
                "label": "aws_ssm_parameter.public_subnet_cidrs",
                "shape": "box"
            },
            {
                "_gvid": 24,
                "name": "[root] aws_ssm_parameter.public_subnet_names (expand)",
                "label": "aws_ssm_parameter.public_subnet_names",
                "shape": "box"
            },
            {
                "_gvid": 25,
                "name": "[root] aws_ssm_parameter.public_subnets (expand)",
                "label": "aws_ssm_parameter.public_subnets",
                "shape": "box"
            },
            {
                "_gvid": 26,
                "name": "[root] aws_ssm_parameter.vpc_id (expand)",
                "label": "aws_ssm_parameter.vpc_id",
                "shape": "box"
            },
            {
                "_gvid": 27,
                "name": "[root] data.aws_availability_zones.available (expand)",
                "label": "data.aws_availability_zones.available",
                "shape": "box"
            },
            {
                "_gvid": 28,
                "name": "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)",
                "label": "module.vpc.aws_cloudwatch_log_group.flow_log",
                "shape": "box"
            },
            {
                "_gvid": 29,
                "name": "[root] module.vpc.aws_customer_gateway.this (expand)",
                "label": "module.vpc.aws_customer_gateway.this",
                "shape": "box"
            },
            {
                "_gvid": 30,
                "name": "[root] module.vpc.aws_db_subnet_group.database (expand)",
                "label": "module.vpc.aws_db_subnet_group.database",
                "shape": "box"
            },
            {
                "_gvid": 31,
                "name": "[root] module.vpc.aws_default_network_acl.this (expand)",
                "label": "module.vpc.aws_default_network_acl.this",
                "shape": "box"
            },
            {
                "_gvid": 32,
                "name": "[root] module.vpc.aws_default_route_table.default (expand)",
                "label": "module.vpc.aws_default_route_table.default",
                "shape": "box"
            },
            {
                "_gvid": 33,
                "name": "[root] module.vpc.aws_default_security_group.this (expand)",
                "label": "module.vpc.aws_default_security_group.this",
                "shape": "box"
            },
            {
                "_gvid": 34,
                "name": "[root] module.vpc.aws_default_vpc.this (expand)",
                "label": "module.vpc.aws_default_vpc.this",
                "shape": "box"
            },
            {
                "_gvid": 35,
                "name": "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)",
                "label": "module.vpc.aws_egress_only_internet_gateway.this",
                "shape": "box"
            },
            {
                "_gvid": 36,
                "name": "[root] module.vpc.aws_eip.nat (expand)",
                "label": "module.vpc.aws_eip.nat",
                "shape": "box"
            },
            {
                "_gvid": 37,
                "name": "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)",
                "label": "module.vpc.aws_elasticache_subnet_group.elasticache",
                "shape": "box"
            },
            {
                "_gvid": 38,
                "name": "[root] module.vpc.aws_flow_log.this (expand)",
                "label": "module.vpc.aws_flow_log.this",
                "shape": "box"
            },
            {
                "_gvid": 39,
                "name": "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)",
                "label": "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
                "shape": "box"
            },
            {
                "_gvid": 40,
                "name": "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)",
                "label": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
                "shape": "box"
            },
            {
                "_gvid": 41,
                "name": "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)",
                "label": "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                "shape": "box"
            },
            {
                "_gvid": 42,
                "name": "[root] module.vpc.aws_internet_gateway.this (expand)",
                "label": "module.vpc.aws_internet_gateway.this",
                "shape": "box"
            },
            {
                "_gvid": 43,
                "name": "[root] module.vpc.aws_nat_gateway.this (expand)",
                "label": "module.vpc.aws_nat_gateway.this",
                "shape": "box"
            },
            {
                "_gvid": 44,
                "name": "[root] module.vpc.aws_network_acl.database (expand)",
                "label": "module.vpc.aws_network_acl.database",
                "shape": "box"
            },
            {
                "_gvid": 45,
                "name": "[root] module.vpc.aws_network_acl.elasticache (expand)",
                "label": "module.vpc.aws_network_acl.elasticache",
                "shape": "box"
            },
            {
                "_gvid": 46,
                "name": "[root] module.vpc.aws_network_acl.intra (expand)",
                "label": "module.vpc.aws_network_acl.intra",
                "shape": "box"
            },
            {
                "_gvid": 47,
                "name": "[root] module.vpc.aws_network_acl.outpost (expand)",
                "label": "module.vpc.aws_network_acl.outpost",
                "shape": "box"
            },
            {
                "_gvid": 48,
                "name": "[root] module.vpc.aws_network_acl.private (expand)",
                "label": "module.vpc.aws_network_acl.private",
                "shape": "box"
            },
            {
                "_gvid": 49,
                "name": "[root] module.vpc.aws_network_acl.public (expand)",
                "label": "module.vpc.aws_network_acl.public",
                "shape": "box"
            },
            {
                "_gvid": 50,
                "name": "[root] module.vpc.aws_network_acl.redshift (expand)",
                "label": "module.vpc.aws_network_acl.redshift",
                "shape": "box"
            },
            {
                "_gvid": 51,
                "name": "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.database_inbound",
                "shape": "box"
            },
            {
                "_gvid": 52,
                "name": "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.database_outbound",
                "shape": "box"
            },
            {
                "_gvid": 53,
                "name": "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.elasticache_inbound",
                "shape": "box"
            },
            {
                "_gvid": 54,
                "name": "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.elasticache_outbound",
                "shape": "box"
            },
            {
                "_gvid": 55,
                "name": "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.intra_inbound",
                "shape": "box"
            },
            {
                "_gvid": 56,
                "name": "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.intra_outbound",
                "shape": "box"
            },
            {
                "_gvid": 57,
                "name": "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.outpost_inbound",
                "shape": "box"
            },
            {
                "_gvid": 58,
                "name": "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.outpost_outbound",
                "shape": "box"
            },
            {
                "_gvid": 59,
                "name": "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.private_inbound",
                "shape": "box"
            },
            {
                "_gvid": 60,
                "name": "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.private_outbound",
                "shape": "box"
            },
            {
                "_gvid": 61,
                "name": "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.public_inbound",
                "shape": "box"
            },
            {
                "_gvid": 62,
                "name": "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.public_outbound",
                "shape": "box"
            },
            {
                "_gvid": 63,
                "name": "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.redshift_inbound",
                "shape": "box"
            },
            {
                "_gvid": 64,
                "name": "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)",
                "label": "module.vpc.aws_network_acl_rule.redshift_outbound",
                "shape": "box"
            },
            {
                "_gvid": 65,
                "name": "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)",
                "label": "module.vpc.aws_redshift_subnet_group.redshift",
                "shape": "box"
            },
            {
                "_gvid": 66,
                "name": "[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)",
                "label": "module.vpc.aws_route.database_dns64_nat_gateway",
                "shape": "box"
            },
            {
                "_gvid": 67,
                "name": "[root] module.vpc.aws_route.database_internet_gateway (expand)",
                "label": "module.vpc.aws_route.database_internet_gateway",
                "shape": "box"
            },
            {
                "_gvid": 68,
                "name": "[root] module.vpc.aws_route.database_ipv6_egress (expand)",
                "label": "module.vpc.aws_route.database_ipv6_egress",
                "shape": "box"
            },
            {
                "_gvid": 69,
                "name": "[root] module.vpc.aws_route.database_nat_gateway (expand)",
                "label": "module.vpc.aws_route.database_nat_gateway",
                "shape": "box"
            },
            {
                "_gvid": 70,
                "name": "[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)",
                "label": "module.vpc.aws_route.private_dns64_nat_gateway",
                "shape": "box"
            },
            {
                "_gvid": 71,
                "name": "[root] module.vpc.aws_route.private_ipv6_egress (expand)",
                "label": "module.vpc.aws_route.private_ipv6_egress",
                "shape": "box"
            },
            {
                "_gvid": 72,
                "name": "[root] module.vpc.aws_route.private_nat_gateway (expand)",
                "label": "module.vpc.aws_route.private_nat_gateway",
                "shape": "box"
            },
            {
                "_gvid": 73,
                "name": "[root] module.vpc.aws_route.public_internet_gateway (expand)",
                "label": "module.vpc.aws_route.public_internet_gateway",
                "shape": "box"
            },
            {
                "_gvid": 74,
                "name": "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)",
                "label": "module.vpc.aws_route.public_internet_gateway_ipv6",
                "shape": "box"
            },
            {
                "_gvid": 75,
                "name": "[root] module.vpc.aws_route_table.database (expand)",
                "label": "module.vpc.aws_route_table.database",
                "shape": "box"
            },
            {
                "_gvid": 76,
                "name": "[root] module.vpc.aws_route_table.elasticache (expand)",
                "label": "module.vpc.aws_route_table.elasticache",
                "shape": "box"
            },
            {
                "_gvid": 77,
                "name": "[root] module.vpc.aws_route_table.intra (expand)",
                "label": "module.vpc.aws_route_table.intra",
                "shape": "box"
            },
            {
                "_gvid": 78,
                "name": "[root] module.vpc.aws_route_table.private (expand)",
                "label": "module.vpc.aws_route_table.private",
                "shape": "box"
            },
            {
                "_gvid": 79,
                "name": "[root] module.vpc.aws_route_table.public (expand)",
                "label": "module.vpc.aws_route_table.public",
                "shape": "box"
            },
            {
                "_gvid": 80,
                "name": "[root] module.vpc.aws_route_table.redshift (expand)",
                "label": "module.vpc.aws_route_table.redshift",
                "shape": "box"
            },
            {
                "_gvid": 81,
                "name": "[root] module.vpc.aws_route_table_association.database (expand)",
                "label": "module.vpc.aws_route_table_association.database",
                "shape": "box"
            },
            {
                "_gvid": 82,
                "name": "[root] module.vpc.aws_route_table_association.elasticache (expand)",
                "label": "module.vpc.aws_route_table_association.elasticache",
                "shape": "box"
            },
            {
                "_gvid": 83,
                "name": "[root] module.vpc.aws_route_table_association.intra (expand)",
                "label": "module.vpc.aws_route_table_association.intra",
                "shape": "box"
            },
            {
                "_gvid": 84,
                "name": "[root] module.vpc.aws_route_table_association.outpost (expand)",
                "label": "module.vpc.aws_route_table_association.outpost",
                "shape": "box"
            },
            {
                "_gvid": 85,
                "name": "[root] module.vpc.aws_route_table_association.private (expand)",
                "label": "module.vpc.aws_route_table_association.private",
                "shape": "box"
            },
            {
                "_gvid": 86,
                "name": "[root] module.vpc.aws_route_table_association.public (expand)",
                "label": "module.vpc.aws_route_table_association.public",
                "shape": "box"
            },
            {
                "_gvid": 87,
                "name": "[root] module.vpc.aws_route_table_association.redshift (expand)",
                "label": "module.vpc.aws_route_table_association.redshift",
                "shape": "box"
            },
            {
                "_gvid": 88,
                "name": "[root] module.vpc.aws_route_table_association.redshift_public (expand)",
                "label": "module.vpc.aws_route_table_association.redshift_public",
                "shape": "box"
            },
            {
                "_gvid": 89,
                "name": "[root] module.vpc.aws_subnet.database (expand)",
                "label": "module.vpc.aws_subnet.database",
                "shape": "box"
            },
            {
                "_gvid": 90,
                "name": "[root] module.vpc.aws_subnet.elasticache (expand)",
                "label": "module.vpc.aws_subnet.elasticache",
                "shape": "box"
            },
            {
                "_gvid": 91,
                "name": "[root] module.vpc.aws_subnet.intra (expand)",
                "label": "module.vpc.aws_subnet.intra",
                "shape": "box"
            },
            {
                "_gvid": 92,
                "name": "[root] module.vpc.aws_subnet.outpost (expand)",
                "label": "module.vpc.aws_subnet.outpost",
                "shape": "box"
            },
            {
                "_gvid": 93,
                "name": "[root] module.vpc.aws_subnet.private (expand)",
                "label": "module.vpc.aws_subnet.private",
                "shape": "box"
            },
            {
                "_gvid": 94,
                "name": "[root] module.vpc.aws_subnet.public (expand)",
                "label": "module.vpc.aws_subnet.public",
                "shape": "box"
            },
            {
                "_gvid": 95,
                "name": "[root] module.vpc.aws_subnet.redshift (expand)",
                "label": "module.vpc.aws_subnet.redshift",
                "shape": "box"
            },
            {
                "_gvid": 96,
                "name": "[root] module.vpc.aws_vpc.this (expand)",
                "label": "module.vpc.aws_vpc.this",
                "shape": "box"
            },
            {
                "_gvid": 97,
                "name": "[root] module.vpc.aws_vpc_dhcp_options.this (expand)",
                "label": "module.vpc.aws_vpc_dhcp_options.this",
                "shape": "box"
            },
            {
                "_gvid": 98,
                "name": "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)",
                "label": "module.vpc.aws_vpc_dhcp_options_association.this",
                "shape": "box"
            },
            {
                "_gvid": 99,
                "name": "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)",
                "label": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                "shape": "box"
            },
            {
                "_gvid": 100,
                "name": "[root] module.vpc.aws_vpn_gateway.this (expand)",
                "label": "module.vpc.aws_vpn_gateway.this",
                "shape": "box"
            },
            {
                "_gvid": 101,
                "name": "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)",
                "label": "module.vpc.aws_vpn_gateway_attachment.this",
                "shape": "box"
            },
            {
                "_gvid": 102,
                "name": "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)",
                "label": "module.vpc.aws_vpn_gateway_route_propagation.intra",
                "shape": "box"
            },
            {
                "_gvid": 103,
                "name": "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)",
                "label": "module.vpc.aws_vpn_gateway_route_propagation.private",
                "shape": "box"
            },
            {
                "_gvid": 104,
                "name": "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)",
                "label": "module.vpc.aws_vpn_gateway_route_propagation.public",
                "shape": "box"
            },
            {
                "_gvid": 105,
                "name": "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)",
                "label": "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                "shape": "box"
            },
            {
                "_gvid": 106,
                "name": "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)",
                "label": "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                "shape": "box"
            },
            {
                "_gvid": 107,
                "name": "[root] provider[\"registry.terraform.io/hashicorp/aws\"]",
                "label": "provider[\"registry.terraform.io/hashicorp/aws\"]",
                "shape": "diamond"
            },
            {
                "_gvid": 108,
                "name": "[root] var.azs",
                "label": "var.azs",
                "shape": "note"
            },
            {
                "_gvid": 109,
                "name": "[root] var.database_subnet_names",
                "label": "var.database_subnet_names",
                "shape": "note"
            },
            {
                "_gvid": 110,
                "name": "[root] var.database_subnets",
                "label": "var.database_subnets",
                "shape": "note"
            },
            {
                "_gvid": 111,
                "name": "[root] var.elasticache_subnet_names",
                "label": "var.elasticache_subnet_names",
                "shape": "note"
            },
            {
                "_gvid": 112,
                "name": "[root] var.elasticache_subnets",
                "label": "var.elasticache_subnets",
                "shape": "note"
            },
            {
                "_gvid": 113,
                "name": "[root] var.enable_nat_gateway",
                "label": "var.enable_nat_gateway",
                "shape": "note"
            },
            {
                "_gvid": 114,
                "name": "[root] var.intra_subnet_names",
                "label": "var.intra_subnet_names",
                "shape": "note"
            },
            {
                "_gvid": 115,
                "name": "[root] var.intra_subnets",
                "label": "var.intra_subnets",
                "shape": "note"
            },
            {
                "_gvid": 116,
                "name": "[root] var.one_nat_gateway_per_az",
                "label": "var.one_nat_gateway_per_az",
                "shape": "note"
            },
            {
                "_gvid": 117,
                "name": "[root] var.prefix",
                "label": "var.prefix",
                "shape": "note"
            },
            {
                "_gvid": 118,
                "name": "[root] var.private_subnet_names",
                "label": "var.private_subnet_names",
                "shape": "note"
            },
            {
                "_gvid": 119,
                "name": "[root] var.private_subnets",
                "label": "var.private_subnets",
                "shape": "note"
            },
            {
                "_gvid": 120,
                "name": "[root] var.public_subnet_names",
                "label": "var.public_subnet_names",
                "shape": "note"
            },
            {
                "_gvid": 121,
                "name": "[root] var.public_subnets",
                "label": "var.public_subnets",
                "shape": "note"
            },
            {
                "_gvid": 122,
                "name": "[root] var.vpc_cidr",
                "label": "var.vpc_cidr",
                "shape": "note"
            },
            {
                "_gvid": 123,
                "name": "[root] module.vpc.output.vpc_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 124,
                "name": "[root] module.vpc.output.database_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 125,
                "name": "[root] module.vpc.output.database_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 126,
                "name": "[root] module.vpc.output.database_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 127,
                "name": "[root] local.hname (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 128,
                "name": "[root] module.vpc.output.database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 129,
                "name": "[root] module.vpc.output.elasticache_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 130,
                "name": "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 131,
                "name": "[root] module.vpc.output.elasticache_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 132,
                "name": "[root] module.vpc.output.elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 133,
                "name": "[root] module.vpc.output.intra_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 134,
                "name": "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 135,
                "name": "[root] module.vpc.output.intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 136,
                "name": "[root] module.vpc.output.private_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 137,
                "name": "[root] module.vpc.output.private_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 138,
                "name": "[root] module.vpc.output.private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 139,
                "name": "[root] module.vpc.output.public_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 140,
                "name": "[root] module.vpc.output.public_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 141,
                "name": "[root] module.vpc.output.public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 142,
                "name": "[root] local.azs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 143,
                "name": "[root] local.database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 144,
                "name": "[root] local.elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 145,
                "name": "[root] local.intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 146,
                "name": "[root] local.private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 147,
                "name": "[root] local.public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 148,
                "name": "[root] module.vpc (close)",
                "label": "\\N"
            },
            {
                "_gvid": 149,
                "name": "[root] module.vpc.output.azs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 150,
                "name": "[root] module.vpc.output.cgw_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 151,
                "name": "[root] module.vpc.output.cgw_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 152,
                "name": "[root] module.vpc.output.database_internet_gateway_route_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 153,
                "name": "[root] module.vpc.output.database_ipv6_egress_route_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 154,
                "name": "[root] module.vpc.output.database_nat_gateway_route_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 155,
                "name": "[root] module.vpc.output.database_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 156,
                "name": "[root] module.vpc.output.database_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 157,
                "name": "[root] module.vpc.output.database_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 158,
                "name": "[root] module.vpc.output.database_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 159,
                "name": "[root] module.vpc.output.database_subnet_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 160,
                "name": "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 161,
                "name": "[root] module.vpc.output.default_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 162,
                "name": "[root] module.vpc.output.default_route_table_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 163,
                "name": "[root] module.vpc.output.default_security_group_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 164,
                "name": "[root] module.vpc.output.default_vpc_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 165,
                "name": "[root] module.vpc.output.default_vpc_cidr_block (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 166,
                "name": "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 167,
                "name": "[root] module.vpc.output.default_vpc_default_route_table_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 168,
                "name": "[root] module.vpc.output.default_vpc_default_security_group_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 169,
                "name": "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 170,
                "name": "[root] module.vpc.output.default_vpc_enable_dns_support (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 171,
                "name": "[root] module.vpc.output.default_vpc_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 172,
                "name": "[root] module.vpc.output.default_vpc_instance_tenancy (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 173,
                "name": "[root] module.vpc.output.default_vpc_main_route_table_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 174,
                "name": "[root] module.vpc.output.dhcp_options_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 175,
                "name": "[root] module.vpc.output.egress_only_internet_gateway_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 176,
                "name": "[root] module.vpc.output.elasticache_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 177,
                "name": "[root] module.vpc.output.elasticache_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 178,
                "name": "[root] module.vpc.output.elasticache_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 179,
                "name": "[root] module.vpc.output.elasticache_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 180,
                "name": "[root] module.vpc.output.elasticache_subnet_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 181,
                "name": "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 182,
                "name": "[root] module.vpc.output.igw_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 183,
                "name": "[root] module.vpc.output.igw_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 184,
                "name": "[root] module.vpc.output.intra_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 185,
                "name": "[root] module.vpc.output.intra_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 186,
                "name": "[root] module.vpc.output.intra_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 187,
                "name": "[root] module.vpc.output.intra_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 188,
                "name": "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 189,
                "name": "[root] module.vpc.output.name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 190,
                "name": "[root] module.vpc.output.nat_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 191,
                "name": "[root] module.vpc.output.nat_public_ips (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 192,
                "name": "[root] module.vpc.output.natgw_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 193,
                "name": "[root] module.vpc.output.natgw_interface_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 194,
                "name": "[root] module.vpc.output.outpost_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 195,
                "name": "[root] module.vpc.output.outpost_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 196,
                "name": "[root] module.vpc.output.outpost_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 197,
                "name": "[root] module.vpc.output.outpost_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 198,
                "name": "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 199,
                "name": "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 200,
                "name": "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 201,
                "name": "[root] module.vpc.output.private_nat_gateway_route_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 202,
                "name": "[root] module.vpc.output.private_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 203,
                "name": "[root] module.vpc.output.private_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 204,
                "name": "[root] module.vpc.output.private_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 205,
                "name": "[root] module.vpc.output.private_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 206,
                "name": "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 207,
                "name": "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 208,
                "name": "[root] module.vpc.output.public_internet_gateway_route_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 209,
                "name": "[root] module.vpc.output.public_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 210,
                "name": "[root] module.vpc.output.public_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 211,
                "name": "[root] module.vpc.output.public_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 212,
                "name": "[root] module.vpc.output.public_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 213,
                "name": "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 214,
                "name": "[root] module.vpc.output.redshift_network_acl_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 215,
                "name": "[root] module.vpc.output.redshift_network_acl_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 216,
                "name": "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 217,
                "name": "[root] module.vpc.output.redshift_route_table_association_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 218,
                "name": "[root] module.vpc.output.redshift_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 219,
                "name": "[root] module.vpc.output.redshift_subnet_arns (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 220,
                "name": "[root] module.vpc.output.redshift_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 221,
                "name": "[root] module.vpc.output.redshift_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 222,
                "name": "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 223,
                "name": "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 224,
                "name": "[root] module.vpc.output.this_customer_gateway (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 225,
                "name": "[root] module.vpc.output.vgw_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 226,
                "name": "[root] module.vpc.output.vgw_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 227,
                "name": "[root] module.vpc.output.vpc_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 228,
                "name": "[root] module.vpc.output.vpc_cidr_block (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 229,
                "name": "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 230,
                "name": "[root] module.vpc.output.vpc_enable_dns_support (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 231,
                "name": "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 232,
                "name": "[root] module.vpc.output.vpc_flow_log_deliver_cross_account_role (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 233,
                "name": "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 234,
                "name": "[root] module.vpc.output.vpc_flow_log_destination_type (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 235,
                "name": "[root] module.vpc.output.vpc_flow_log_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 236,
                "name": "[root] module.vpc.output.vpc_instance_tenancy (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 237,
                "name": "[root] module.vpc.output.vpc_ipv6_association_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 238,
                "name": "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 239,
                "name": "[root] module.vpc.output.vpc_main_route_table_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 240,
                "name": "[root] module.vpc.output.vpc_owner_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 241,
                "name": "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 242,
                "name": "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 243,
                "name": "[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 244,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_class (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 245,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 246,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 247,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 248,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_skip_destroy (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 249,
                "name": "[root] module.vpc.var.vpc_flow_log_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 250,
                "name": "[root] module.vpc.var.customer_gateway_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 251,
                "name": "[root] module.vpc.var.customer_gateways (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 252,
                "name": "[root] module.vpc.var.name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 253,
                "name": "[root] module.vpc.var.tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 254,
                "name": "[root] module.vpc.var.create_database_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 255,
                "name": "[root] module.vpc.var.database_subnet_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 256,
                "name": "[root] module.vpc.var.database_subnet_group_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 257,
                "name": "[root] module.vpc.var.default_network_acl_egress (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 258,
                "name": "[root] module.vpc.var.default_network_acl_ingress (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 259,
                "name": "[root] module.vpc.var.default_network_acl_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 260,
                "name": "[root] module.vpc.var.default_network_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 261,
                "name": "[root] module.vpc.var.manage_default_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 262,
                "name": "[root] module.vpc.var.default_route_table_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 263,
                "name": "[root] module.vpc.var.default_route_table_propagating_vgws (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 264,
                "name": "[root] module.vpc.var.default_route_table_routes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 265,
                "name": "[root] module.vpc.var.default_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 266,
                "name": "[root] module.vpc.var.manage_default_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 267,
                "name": "[root] module.vpc.var.default_security_group_egress (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 268,
                "name": "[root] module.vpc.var.default_security_group_ingress (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 269,
                "name": "[root] module.vpc.var.default_security_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 270,
                "name": "[root] module.vpc.var.default_security_group_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 271,
                "name": "[root] module.vpc.var.manage_default_security_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 272,
                "name": "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 273,
                "name": "[root] module.vpc.var.default_vpc_enable_dns_support (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 274,
                "name": "[root] module.vpc.var.default_vpc_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 275,
                "name": "[root] module.vpc.var.default_vpc_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 276,
                "name": "[root] module.vpc.var.manage_default_vpc (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 277,
                "name": "[root] module.vpc.local.max_subnet_length (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 278,
                "name": "[root] module.vpc.local.vpc_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 279,
                "name": "[root] module.vpc.var.create_egress_only_igw (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 280,
                "name": "[root] module.vpc.var.igw_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 281,
                "name": "[root] module.vpc.local.nat_gateway_count (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 282,
                "name": "[root] module.vpc.var.enable_nat_gateway (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 283,
                "name": "[root] module.vpc.var.nat_eip_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 284,
                "name": "[root] module.vpc.var.reuse_nat_ips (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 285,
                "name": "[root] module.vpc.var.create_elasticache_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 286,
                "name": "[root] module.vpc.var.elasticache_subnet_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 287,
                "name": "[root] module.vpc.var.elasticache_subnet_group_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 288,
                "name": "[root] module.vpc.local.flow_log_destination_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 289,
                "name": "[root] module.vpc.local.flow_log_iam_role_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 290,
                "name": "[root] module.vpc.var.flow_log_deliver_cross_account_role (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 291,
                "name": "[root] module.vpc.var.flow_log_file_format (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 292,
                "name": "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 293,
                "name": "[root] module.vpc.var.flow_log_log_format (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 294,
                "name": "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 295,
                "name": "[root] module.vpc.var.flow_log_per_hour_partition (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 296,
                "name": "[root] module.vpc.var.flow_log_traffic_type (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 297,
                "name": "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 298,
                "name": "[root] module.vpc.local.create_public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 299,
                "name": "[root] module.vpc.var.create_igw (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 300,
                "name": "[root] module.vpc.local.nat_gateway_ips (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 301,
                "name": "[root] module.vpc.var.nat_gateway_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 302,
                "name": "[root] module.vpc.local.create_database_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 303,
                "name": "[root] module.vpc.var.database_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 304,
                "name": "[root] module.vpc.local.create_elasticache_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 305,
                "name": "[root] module.vpc.var.elasticache_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 306,
                "name": "[root] module.vpc.local.create_intra_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 307,
                "name": "[root] module.vpc.var.intra_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 308,
                "name": "[root] module.vpc.local.create_outpost_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 309,
                "name": "[root] module.vpc.var.outpost_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 310,
                "name": "[root] module.vpc.local.create_private_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 311,
                "name": "[root] module.vpc.var.private_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 312,
                "name": "[root] module.vpc.var.public_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 313,
                "name": "[root] module.vpc.var.public_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 314,
                "name": "[root] module.vpc.local.create_redshift_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 315,
                "name": "[root] module.vpc.var.redshift_acl_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 316,
                "name": "[root] module.vpc.var.database_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 317,
                "name": "[root] module.vpc.var.database_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 318,
                "name": "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 319,
                "name": "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 320,
                "name": "[root] module.vpc.var.intra_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 321,
                "name": "[root] module.vpc.var.intra_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 322,
                "name": "[root] module.vpc.var.outpost_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 323,
                "name": "[root] module.vpc.var.outpost_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 324,
                "name": "[root] module.vpc.var.private_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 325,
                "name": "[root] module.vpc.var.private_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 326,
                "name": "[root] module.vpc.var.public_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 327,
                "name": "[root] module.vpc.var.public_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 328,
                "name": "[root] module.vpc.var.redshift_inbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 329,
                "name": "[root] module.vpc.var.redshift_outbound_acl_rules (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 330,
                "name": "[root] module.vpc.var.create_redshift_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 331,
                "name": "[root] module.vpc.var.redshift_subnet_group_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 332,
                "name": "[root] module.vpc.var.redshift_subnet_group_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 333,
                "name": "[root] module.vpc.var.create_database_nat_gateway_route (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 334,
                "name": "[root] module.vpc.var.private_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 335,
                "name": "[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 336,
                "name": "[root] module.vpc.local.create_database_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 337,
                "name": "[root] module.vpc.var.azs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 338,
                "name": "[root] module.vpc.var.create_database_internet_gateway_route (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 339,
                "name": "[root] module.vpc.var.database_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 340,
                "name": "[root] module.vpc.var.database_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 341,
                "name": "[root] module.vpc.var.single_nat_gateway (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 342,
                "name": "[root] module.vpc.local.create_elasticache_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 343,
                "name": "[root] module.vpc.var.elasticache_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 344,
                "name": "[root] module.vpc.var.elasticache_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 345,
                "name": "[root] module.vpc.local.create_intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 346,
                "name": "[root] module.vpc.local.num_intra_route_tables (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 347,
                "name": "[root] module.vpc.var.intra_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 348,
                "name": "[root] module.vpc.var.intra_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 349,
                "name": "[root] module.vpc.local.create_private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 350,
                "name": "[root] module.vpc.var.private_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 351,
                "name": "[root] module.vpc.var.private_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 352,
                "name": "[root] module.vpc.local.num_public_route_tables (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 353,
                "name": "[root] module.vpc.var.public_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 354,
                "name": "[root] module.vpc.var.public_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 355,
                "name": "[root] module.vpc.local.create_redshift_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 356,
                "name": "[root] module.vpc.var.redshift_route_table_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 357,
                "name": "[root] module.vpc.var.redshift_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 358,
                "name": "[root] module.vpc.var.enable_public_redshift (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 359,
                "name": "[root] module.vpc.local.create_database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 360,
                "name": "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 361,
                "name": "[root] module.vpc.var.database_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 362,
                "name": "[root] module.vpc.var.database_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 363,
                "name": "[root] module.vpc.var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 364,
                "name": "[root] module.vpc.var.database_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 365,
                "name": "[root] module.vpc.var.database_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 366,
                "name": "[root] module.vpc.var.database_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 367,
                "name": "[root] module.vpc.var.database_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 368,
                "name": "[root] module.vpc.local.create_elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 369,
                "name": "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 370,
                "name": "[root] module.vpc.var.elasticache_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 371,
                "name": "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 372,
                "name": "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 373,
                "name": "[root] module.vpc.var.elasticache_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 374,
                "name": "[root] module.vpc.var.elasticache_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 375,
                "name": "[root] module.vpc.var.elasticache_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 376,
                "name": "[root] module.vpc.var.elasticache_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 377,
                "name": "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 378,
                "name": "[root] module.vpc.var.intra_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 379,
                "name": "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 380,
                "name": "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 381,
                "name": "[root] module.vpc.var.intra_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 382,
                "name": "[root] module.vpc.var.intra_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 383,
                "name": "[root] module.vpc.var.intra_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 384,
                "name": "[root] module.vpc.var.intra_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 385,
                "name": "[root] module.vpc.local.create_outpost_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 386,
                "name": "[root] module.vpc.var.customer_owned_ipv4_pool (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 387,
                "name": "[root] module.vpc.var.map_customer_owned_ip_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 388,
                "name": "[root] module.vpc.var.outpost_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 389,
                "name": "[root] module.vpc.var.outpost_az (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 390,
                "name": "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 391,
                "name": "[root] module.vpc.var.outpost_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 392,
                "name": "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 393,
                "name": "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 394,
                "name": "[root] module.vpc.var.outpost_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 395,
                "name": "[root] module.vpc.var.outpost_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 396,
                "name": "[root] module.vpc.var.outpost_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 397,
                "name": "[root] module.vpc.var.outpost_subnet_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 398,
                "name": "[root] module.vpc.var.outpost_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 399,
                "name": "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 400,
                "name": "[root] module.vpc.var.private_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 401,
                "name": "[root] module.vpc.var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 402,
                "name": "[root] module.vpc.var.private_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 403,
                "name": "[root] module.vpc.var.private_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 404,
                "name": "[root] module.vpc.var.private_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 405,
                "name": "[root] module.vpc.var.private_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 406,
                "name": "[root] module.vpc.var.private_subnet_tags_per_az (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 407,
                "name": "[root] module.vpc.var.map_public_ip_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 408,
                "name": "[root] module.vpc.var.one_nat_gateway_per_az (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 409,
                "name": "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 410,
                "name": "[root] module.vpc.var.public_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 411,
                "name": "[root] module.vpc.var.public_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 412,
                "name": "[root] module.vpc.var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 413,
                "name": "[root] module.vpc.var.public_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 414,
                "name": "[root] module.vpc.var.public_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 415,
                "name": "[root] module.vpc.var.public_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 416,
                "name": "[root] module.vpc.var.public_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 417,
                "name": "[root] module.vpc.var.public_subnet_tags_per_az (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 418,
                "name": "[root] module.vpc.local.create_redshift_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 419,
                "name": "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 420,
                "name": "[root] module.vpc.var.redshift_subnet_enable_dns64 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 421,
                "name": "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_a_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 422,
                "name": "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 423,
                "name": "[root] module.vpc.var.redshift_subnet_ipv6_native (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 424,
                "name": "[root] module.vpc.var.redshift_subnet_names (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 425,
                "name": "[root] module.vpc.var.redshift_subnet_private_dns_hostname_type_on_launch (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 426,
                "name": "[root] module.vpc.var.redshift_subnet_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 427,
                "name": "[root] module.vpc.local.create_vpc (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 428,
                "name": "[root] module.vpc.var.cidr (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 429,
                "name": "[root] module.vpc.var.enable_dns_hostnames (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 430,
                "name": "[root] module.vpc.var.enable_dns_support (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 431,
                "name": "[root] module.vpc.var.enable_ipv6 (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 432,
                "name": "[root] module.vpc.var.enable_network_address_usage_metrics (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 433,
                "name": "[root] module.vpc.var.instance_tenancy (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 434,
                "name": "[root] module.vpc.var.ipv4_ipam_pool_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 435,
                "name": "[root] module.vpc.var.ipv4_netmask_length (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 436,
                "name": "[root] module.vpc.var.ipv6_cidr (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 437,
                "name": "[root] module.vpc.var.ipv6_cidr_block_network_border_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 438,
                "name": "[root] module.vpc.var.ipv6_ipam_pool_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 439,
                "name": "[root] module.vpc.var.ipv6_netmask_length (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 440,
                "name": "[root] module.vpc.var.use_ipam_pool (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 441,
                "name": "[root] module.vpc.var.vpc_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 442,
                "name": "[root] module.vpc.var.dhcp_options_domain_name (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 443,
                "name": "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 444,
                "name": "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 445,
                "name": "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 446,
                "name": "[root] module.vpc.var.dhcp_options_ntp_servers (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 447,
                "name": "[root] module.vpc.var.dhcp_options_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 448,
                "name": "[root] module.vpc.var.enable_dhcp_options (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 449,
                "name": "[root] module.vpc.var.secondary_cidr_blocks (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 450,
                "name": "[root] module.vpc.var.amazon_side_asn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 451,
                "name": "[root] module.vpc.var.enable_vpn_gateway (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 452,
                "name": "[root] module.vpc.var.vpn_gateway_az (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 453,
                "name": "[root] module.vpc.var.vpn_gateway_tags (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 454,
                "name": "[root] module.vpc.var.vpn_gateway_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 455,
                "name": "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 456,
                "name": "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 457,
                "name": "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 458,
                "name": "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 459,
                "name": "[root] module.vpc.var.database_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 460,
                "name": "[root] module.vpc.var.create_database_subnet_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 461,
                "name": "[root] module.vpc.local.len_database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 462,
                "name": "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 463,
                "name": "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 464,
                "name": "[root] module.vpc.local.len_elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 465,
                "name": "[root] module.vpc.local.enable_flow_log (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 466,
                "name": "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 467,
                "name": "[root] module.vpc.var.flow_log_destination_type (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 468,
                "name": "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 469,
                "name": "[root] module.vpc.var.intra_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 470,
                "name": "[root] module.vpc.local.len_intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 471,
                "name": "[root] module.vpc.var.outpost_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 472,
                "name": "[root] module.vpc.local.len_outpost_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 473,
                "name": "[root] module.vpc.var.private_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 474,
                "name": "[root] module.vpc.local.len_private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 475,
                "name": "[root] module.vpc.local.len_public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 476,
                "name": "[root] module.vpc.var.redshift_dedicated_network_acl (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 477,
                "name": "[root] module.vpc.var.create_redshift_subnet_route_table (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 478,
                "name": "[root] module.vpc.local.len_redshift_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 479,
                "name": "[root] module.vpc.var.create_vpc (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 480,
                "name": "[root] module.vpc.var.putin_khuylo (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 481,
                "name": "[root] module.vpc.var.enable_flow_log (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 482,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 483,
                "name": "[root] module.vpc.var.flow_log_destination_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 484,
                "name": "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 485,
                "name": "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 486,
                "name": "[root] module.vpc.var.database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 487,
                "name": "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 488,
                "name": "[root] module.vpc.var.elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 489,
                "name": "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 490,
                "name": "[root] module.vpc.var.intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 491,
                "name": "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 492,
                "name": "[root] module.vpc.var.outpost_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 493,
                "name": "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 494,
                "name": "[root] module.vpc.var.private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 495,
                "name": "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 496,
                "name": "[root] module.vpc.var.public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 497,
                "name": "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 498,
                "name": "[root] module.vpc.var.redshift_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 499,
                "name": "[root] module.vpc.var.external_nat_ip_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 500,
                "name": "[root] module.vpc.var.create_multiple_intra_route_tables (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 501,
                "name": "[root] module.vpc.var.create_multiple_public_route_tables (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 502,
                "name": "[root] module.vpc.local.private_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 503,
                "name": "[root] module.vpc.local.public_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 504,
                "name": "[root] module.vpc.local.redshift_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 505,
                "name": "[root] module.vpc.var.external_nat_ips (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 506,
                "name": "[root] module.vpc (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 507,
                "name": "[root] output.database_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 508,
                "name": "[root] output.database_subnet_cidrs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 509,
                "name": "[root] output.database_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 510,
                "name": "[root] output.database_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 511,
                "name": "[root] output.elasticache_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 512,
                "name": "[root] output.elasticache_subnet_cidrs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 513,
                "name": "[root] output.elasticache_subnet_group (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 514,
                "name": "[root] output.elasticache_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 515,
                "name": "[root] output.intra_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 516,
                "name": "[root] output.intra_subnet_cidrs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 517,
                "name": "[root] output.intra_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 518,
                "name": "[root] output.private_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 519,
                "name": "[root] output.private_subnet_cidrs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 520,
                "name": "[root] output.private_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 521,
                "name": "[root] output.public_route_table_ids (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 522,
                "name": "[root] output.public_subnet_cidrs (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 523,
                "name": "[root] output.public_subnets (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 524,
                "name": "[root] output.vpc_id (expand)",
                "label": "\\N"
            },
            {
                "_gvid": 525,
                "name": "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)",
                "label": "\\N"
            },
            {
                "_gvid": 526,
                "name": "[root] root",
                "label": "\\N"
            }
        ],
        "edges": [
            {
                "_gvid": 0,
                "tail": 1,
                "head": 123
            },
            {
                "_gvid": 1,
                "tail": 2,
                "head": 1
            },
            {
                "_gvid": 2,
                "tail": 3,
                "head": 124
            },
            {
                "_gvid": 3,
                "tail": 4,
                "head": 125
            },
            {
                "_gvid": 4,
                "tail": 5,
                "head": 126
            },
            {
                "_gvid": 7,
                "tail": 6,
                "head": 127
            },
            {
                "_gvid": 5,
                "tail": 6,
                "head": 107
            },
            {
                "_gvid": 6,
                "tail": 6,
                "head": 109
            },
            {
                "_gvid": 8,
                "tail": 7,
                "head": 128
            },
            {
                "_gvid": 9,
                "tail": 8,
                "head": 129
            },
            {
                "_gvid": 10,
                "tail": 9,
                "head": 130
            },
            {
                "_gvid": 11,
                "tail": 10,
                "head": 131
            },
            {
                "_gvid": 14,
                "tail": 11,
                "head": 127
            },
            {
                "_gvid": 12,
                "tail": 11,
                "head": 107
            },
            {
                "_gvid": 13,
                "tail": 11,
                "head": 111
            },
            {
                "_gvid": 15,
                "tail": 12,
                "head": 132
            },
            {
                "_gvid": 16,
                "tail": 13,
                "head": 133
            },
            {
                "_gvid": 17,
                "tail": 14,
                "head": 134
            },
            {
                "_gvid": 20,
                "tail": 15,
                "head": 127
            },
            {
                "_gvid": 18,
                "tail": 15,
                "head": 107
            },
            {
                "_gvid": 19,
                "tail": 15,
                "head": 114
            },
            {
                "_gvid": 21,
                "tail": 16,
                "head": 135
            },
            {
                "_gvid": 22,
                "tail": 17,
                "head": 1
            },
            {
                "_gvid": 23,
                "tail": 18,
                "head": 136
            },
            {
                "_gvid": 24,
                "tail": 19,
                "head": 137
            },
            {
                "_gvid": 27,
                "tail": 20,
                "head": 127
            },
            {
                "_gvid": 25,
                "tail": 20,
                "head": 107
            },
            {
                "_gvid": 26,
                "tail": 20,
                "head": 118
            },
            {
                "_gvid": 28,
                "tail": 21,
                "head": 138
            },
            {
                "_gvid": 29,
                "tail": 22,
                "head": 139
            },
            {
                "_gvid": 30,
                "tail": 23,
                "head": 140
            },
            {
                "_gvid": 33,
                "tail": 24,
                "head": 127
            },
            {
                "_gvid": 31,
                "tail": 24,
                "head": 107
            },
            {
                "_gvid": 32,
                "tail": 24,
                "head": 120
            },
            {
                "_gvid": 34,
                "tail": 25,
                "head": 141
            },
            {
                "_gvid": 35,
                "tail": 26,
                "head": 123
            },
            {
                "_gvid": 36,
                "tail": 27,
                "head": 107
            },
            {
                "_gvid": 417,
                "tail": 142,
                "head": 108
            },
            {
                "_gvid": 418,
                "tail": 142,
                "head": 121
            },
            {
                "_gvid": 421,
                "tail": 143,
                "head": 142
            },
            {
                "_gvid": 419,
                "tail": 143,
                "head": 110
            },
            {
                "_gvid": 420,
                "tail": 143,
                "head": 122
            },
            {
                "_gvid": 424,
                "tail": 144,
                "head": 142
            },
            {
                "_gvid": 422,
                "tail": 144,
                "head": 112
            },
            {
                "_gvid": 423,
                "tail": 144,
                "head": 122
            },
            {
                "_gvid": 401,
                "tail": 127,
                "head": 117
            },
            {
                "_gvid": 427,
                "tail": 145,
                "head": 142
            },
            {
                "_gvid": 425,
                "tail": 145,
                "head": 115
            },
            {
                "_gvid": 426,
                "tail": 145,
                "head": 122
            },
            {
                "_gvid": 430,
                "tail": 146,
                "head": 142
            },
            {
                "_gvid": 428,
                "tail": 146,
                "head": 119
            },
            {
                "_gvid": 429,
                "tail": 146,
                "head": 122
            },
            {
                "_gvid": 432,
                "tail": 147,
                "head": 142
            },
            {
                "_gvid": 431,
                "tail": 147,
                "head": 122
            },
            {
                "_gvid": 433,
                "tail": 148,
                "head": 31
            },
            {
                "_gvid": 434,
                "tail": 148,
                "head": 32
            },
            {
                "_gvid": 435,
                "tail": 148,
                "head": 33
            },
            {
                "_gvid": 436,
                "tail": 148,
                "head": 41
            },
            {
                "_gvid": 437,
                "tail": 148,
                "head": 51
            },
            {
                "_gvid": 438,
                "tail": 148,
                "head": 52
            },
            {
                "_gvid": 439,
                "tail": 148,
                "head": 53
            },
            {
                "_gvid": 440,
                "tail": 148,
                "head": 54
            },
            {
                "_gvid": 441,
                "tail": 148,
                "head": 55
            },
            {
                "_gvid": 442,
                "tail": 148,
                "head": 56
            },
            {
                "_gvid": 443,
                "tail": 148,
                "head": 57
            },
            {
                "_gvid": 444,
                "tail": 148,
                "head": 58
            },
            {
                "_gvid": 445,
                "tail": 148,
                "head": 59
            },
            {
                "_gvid": 446,
                "tail": 148,
                "head": 60
            },
            {
                "_gvid": 447,
                "tail": 148,
                "head": 61
            },
            {
                "_gvid": 448,
                "tail": 148,
                "head": 62
            },
            {
                "_gvid": 449,
                "tail": 148,
                "head": 63
            },
            {
                "_gvid": 450,
                "tail": 148,
                "head": 64
            },
            {
                "_gvid": 451,
                "tail": 148,
                "head": 66
            },
            {
                "_gvid": 452,
                "tail": 148,
                "head": 70
            },
            {
                "_gvid": 453,
                "tail": 148,
                "head": 84
            },
            {
                "_gvid": 454,
                "tail": 148,
                "head": 98
            },
            {
                "_gvid": 455,
                "tail": 148,
                "head": 102
            },
            {
                "_gvid": 456,
                "tail": 148,
                "head": 103
            },
            {
                "_gvid": 457,
                "tail": 148,
                "head": 104
            },
            {
                "_gvid": 476,
                "tail": 148,
                "head": 149
            },
            {
                "_gvid": 477,
                "tail": 148,
                "head": 150
            },
            {
                "_gvid": 478,
                "tail": 148,
                "head": 151
            },
            {
                "_gvid": 479,
                "tail": 148,
                "head": 152
            },
            {
                "_gvid": 480,
                "tail": 148,
                "head": 153
            },
            {
                "_gvid": 481,
                "tail": 148,
                "head": 154
            },
            {
                "_gvid": 482,
                "tail": 148,
                "head": 155
            },
            {
                "_gvid": 483,
                "tail": 148,
                "head": 156
            },
            {
                "_gvid": 484,
                "tail": 148,
                "head": 157
            },
            {
                "_gvid": 459,
                "tail": 148,
                "head": 124
            },
            {
                "_gvid": 485,
                "tail": 148,
                "head": 158
            },
            {
                "_gvid": 461,
                "tail": 148,
                "head": 126
            },
            {
                "_gvid": 486,
                "tail": 148,
                "head": 159
            },
            {
                "_gvid": 462,
                "tail": 148,
                "head": 128
            },
            {
                "_gvid": 460,
                "tail": 148,
                "head": 125
            },
            {
                "_gvid": 487,
                "tail": 148,
                "head": 160
            },
            {
                "_gvid": 488,
                "tail": 148,
                "head": 161
            },
            {
                "_gvid": 489,
                "tail": 148,
                "head": 162
            },
            {
                "_gvid": 490,
                "tail": 148,
                "head": 163
            },
            {
                "_gvid": 491,
                "tail": 148,
                "head": 164
            },
            {
                "_gvid": 492,
                "tail": 148,
                "head": 165
            },
            {
                "_gvid": 493,
                "tail": 148,
                "head": 166
            },
            {
                "_gvid": 494,
                "tail": 148,
                "head": 167
            },
            {
                "_gvid": 495,
                "tail": 148,
                "head": 168
            },
            {
                "_gvid": 496,
                "tail": 148,
                "head": 169
            },
            {
                "_gvid": 497,
                "tail": 148,
                "head": 170
            },
            {
                "_gvid": 498,
                "tail": 148,
                "head": 171
            },
            {
                "_gvid": 499,
                "tail": 148,
                "head": 172
            },
            {
                "_gvid": 500,
                "tail": 148,
                "head": 173
            },
            {
                "_gvid": 501,
                "tail": 148,
                "head": 174
            },
            {
                "_gvid": 502,
                "tail": 148,
                "head": 175
            },
            {
                "_gvid": 503,
                "tail": 148,
                "head": 176
            },
            {
                "_gvid": 504,
                "tail": 148,
                "head": 177
            },
            {
                "_gvid": 505,
                "tail": 148,
                "head": 178
            },
            {
                "_gvid": 463,
                "tail": 148,
                "head": 129
            },
            {
                "_gvid": 506,
                "tail": 148,
                "head": 179
            },
            {
                "_gvid": 465,
                "tail": 148,
                "head": 131
            },
            {
                "_gvid": 507,
                "tail": 148,
                "head": 180
            },
            {
                "_gvid": 466,
                "tail": 148,
                "head": 132
            },
            {
                "_gvid": 464,
                "tail": 148,
                "head": 130
            },
            {
                "_gvid": 508,
                "tail": 148,
                "head": 181
            },
            {
                "_gvid": 509,
                "tail": 148,
                "head": 182
            },
            {
                "_gvid": 510,
                "tail": 148,
                "head": 183
            },
            {
                "_gvid": 511,
                "tail": 148,
                "head": 184
            },
            {
                "_gvid": 512,
                "tail": 148,
                "head": 185
            },
            {
                "_gvid": 513,
                "tail": 148,
                "head": 186
            },
            {
                "_gvid": 467,
                "tail": 148,
                "head": 133
            },
            {
                "_gvid": 514,
                "tail": 148,
                "head": 187
            },
            {
                "_gvid": 469,
                "tail": 148,
                "head": 135
            },
            {
                "_gvid": 468,
                "tail": 148,
                "head": 134
            },
            {
                "_gvid": 515,
                "tail": 148,
                "head": 188
            },
            {
                "_gvid": 516,
                "tail": 148,
                "head": 189
            },
            {
                "_gvid": 517,
                "tail": 148,
                "head": 190
            },
            {
                "_gvid": 518,
                "tail": 148,
                "head": 191
            },
            {
                "_gvid": 519,
                "tail": 148,
                "head": 192
            },
            {
                "_gvid": 520,
                "tail": 148,
                "head": 193
            },
            {
                "_gvid": 521,
                "tail": 148,
                "head": 194
            },
            {
                "_gvid": 522,
                "tail": 148,
                "head": 195
            },
            {
                "_gvid": 523,
                "tail": 148,
                "head": 196
            },
            {
                "_gvid": 524,
                "tail": 148,
                "head": 197
            },
            {
                "_gvid": 525,
                "tail": 148,
                "head": 198
            },
            {
                "_gvid": 526,
                "tail": 148,
                "head": 199
            },
            {
                "_gvid": 527,
                "tail": 148,
                "head": 200
            },
            {
                "_gvid": 528,
                "tail": 148,
                "head": 201
            },
            {
                "_gvid": 529,
                "tail": 148,
                "head": 202
            },
            {
                "_gvid": 530,
                "tail": 148,
                "head": 203
            },
            {
                "_gvid": 531,
                "tail": 148,
                "head": 204
            },
            {
                "_gvid": 470,
                "tail": 148,
                "head": 136
            },
            {
                "_gvid": 532,
                "tail": 148,
                "head": 205
            },
            {
                "_gvid": 472,
                "tail": 148,
                "head": 138
            },
            {
                "_gvid": 471,
                "tail": 148,
                "head": 137
            },
            {
                "_gvid": 533,
                "tail": 148,
                "head": 206
            },
            {
                "_gvid": 534,
                "tail": 148,
                "head": 207
            },
            {
                "_gvid": 535,
                "tail": 148,
                "head": 208
            },
            {
                "_gvid": 536,
                "tail": 148,
                "head": 209
            },
            {
                "_gvid": 537,
                "tail": 148,
                "head": 210
            },
            {
                "_gvid": 538,
                "tail": 148,
                "head": 211
            },
            {
                "_gvid": 473,
                "tail": 148,
                "head": 139
            },
            {
                "_gvid": 539,
                "tail": 148,
                "head": 212
            },
            {
                "_gvid": 475,
                "tail": 148,
                "head": 141
            },
            {
                "_gvid": 474,
                "tail": 148,
                "head": 140
            },
            {
                "_gvid": 540,
                "tail": 148,
                "head": 213
            },
            {
                "_gvid": 541,
                "tail": 148,
                "head": 214
            },
            {
                "_gvid": 542,
                "tail": 148,
                "head": 215
            },
            {
                "_gvid": 543,
                "tail": 148,
                "head": 216
            },
            {
                "_gvid": 544,
                "tail": 148,
                "head": 217
            },
            {
                "_gvid": 545,
                "tail": 148,
                "head": 218
            },
            {
                "_gvid": 546,
                "tail": 148,
                "head": 219
            },
            {
                "_gvid": 547,
                "tail": 148,
                "head": 220
            },
            {
                "_gvid": 548,
                "tail": 148,
                "head": 221
            },
            {
                "_gvid": 549,
                "tail": 148,
                "head": 222
            },
            {
                "_gvid": 550,
                "tail": 148,
                "head": 223
            },
            {
                "_gvid": 551,
                "tail": 148,
                "head": 224
            },
            {
                "_gvid": 552,
                "tail": 148,
                "head": 225
            },
            {
                "_gvid": 553,
                "tail": 148,
                "head": 226
            },
            {
                "_gvid": 554,
                "tail": 148,
                "head": 227
            },
            {
                "_gvid": 555,
                "tail": 148,
                "head": 228
            },
            {
                "_gvid": 556,
                "tail": 148,
                "head": 229
            },
            {
                "_gvid": 557,
                "tail": 148,
                "head": 230
            },
            {
                "_gvid": 558,
                "tail": 148,
                "head": 231
            },
            {
                "_gvid": 559,
                "tail": 148,
                "head": 232
            },
            {
                "_gvid": 560,
                "tail": 148,
                "head": 233
            },
            {
                "_gvid": 561,
                "tail": 148,
                "head": 234
            },
            {
                "_gvid": 562,
                "tail": 148,
                "head": 235
            },
            {
                "_gvid": 458,
                "tail": 148,
                "head": 123
            },
            {
                "_gvid": 563,
                "tail": 148,
                "head": 236
            },
            {
                "_gvid": 564,
                "tail": 148,
                "head": 237
            },
            {
                "_gvid": 565,
                "tail": 148,
                "head": 238
            },
            {
                "_gvid": 566,
                "tail": 148,
                "head": 239
            },
            {
                "_gvid": 567,
                "tail": 148,
                "head": 240
            },
            {
                "_gvid": 568,
                "tail": 148,
                "head": 241
            },
            {
                "_gvid": 37,
                "tail": 28,
                "head": 242
            },
            {
                "_gvid": 38,
                "tail": 28,
                "head": 243
            },
            {
                "_gvid": 39,
                "tail": 28,
                "head": 244
            },
            {
                "_gvid": 40,
                "tail": 28,
                "head": 245
            },
            {
                "_gvid": 41,
                "tail": 28,
                "head": 246
            },
            {
                "_gvid": 42,
                "tail": 28,
                "head": 247
            },
            {
                "_gvid": 43,
                "tail": 28,
                "head": 248
            },
            {
                "_gvid": 44,
                "tail": 28,
                "head": 249
            },
            {
                "_gvid": 46,
                "tail": 29,
                "head": 250
            },
            {
                "_gvid": 47,
                "tail": 29,
                "head": 251
            },
            {
                "_gvid": 48,
                "tail": 29,
                "head": 252
            },
            {
                "_gvid": 49,
                "tail": 29,
                "head": 253
            },
            {
                "_gvid": 45,
                "tail": 29,
                "head": 107
            },
            {
                "_gvid": 50,
                "tail": 30,
                "head": 89
            },
            {
                "_gvid": 51,
                "tail": 30,
                "head": 254
            },
            {
                "_gvid": 52,
                "tail": 30,
                "head": 255
            },
            {
                "_gvid": 53,
                "tail": 30,
                "head": 256
            },
            {
                "_gvid": 54,
                "tail": 31,
                "head": 96
            },
            {
                "_gvid": 55,
                "tail": 31,
                "head": 257
            },
            {
                "_gvid": 56,
                "tail": 31,
                "head": 258
            },
            {
                "_gvid": 57,
                "tail": 31,
                "head": 259
            },
            {
                "_gvid": 58,
                "tail": 31,
                "head": 260
            },
            {
                "_gvid": 59,
                "tail": 31,
                "head": 261
            },
            {
                "_gvid": 60,
                "tail": 32,
                "head": 96
            },
            {
                "_gvid": 61,
                "tail": 32,
                "head": 262
            },
            {
                "_gvid": 62,
                "tail": 32,
                "head": 263
            },
            {
                "_gvid": 63,
                "tail": 32,
                "head": 264
            },
            {
                "_gvid": 64,
                "tail": 32,
                "head": 265
            },
            {
                "_gvid": 65,
                "tail": 32,
                "head": 266
            },
            {
                "_gvid": 66,
                "tail": 33,
                "head": 96
            },
            {
                "_gvid": 67,
                "tail": 33,
                "head": 267
            },
            {
                "_gvid": 68,
                "tail": 33,
                "head": 268
            },
            {
                "_gvid": 69,
                "tail": 33,
                "head": 269
            },
            {
                "_gvid": 70,
                "tail": 33,
                "head": 270
            },
            {
                "_gvid": 71,
                "tail": 33,
                "head": 271
            },
            {
                "_gvid": 74,
                "tail": 34,
                "head": 272
            },
            {
                "_gvid": 75,
                "tail": 34,
                "head": 273
            },
            {
                "_gvid": 76,
                "tail": 34,
                "head": 274
            },
            {
                "_gvid": 77,
                "tail": 34,
                "head": 275
            },
            {
                "_gvid": 78,
                "tail": 34,
                "head": 276
            },
            {
                "_gvid": 73,
                "tail": 34,
                "head": 253
            },
            {
                "_gvid": 72,
                "tail": 34,
                "head": 107
            },
            {
                "_gvid": 79,
                "tail": 35,
                "head": 277
            },
            {
                "_gvid": 80,
                "tail": 35,
                "head": 278
            },
            {
                "_gvid": 81,
                "tail": 35,
                "head": 279
            },
            {
                "_gvid": 82,
                "tail": 35,
                "head": 280
            },
            {
                "_gvid": 83,
                "tail": 36,
                "head": 42
            },
            {
                "_gvid": 84,
                "tail": 36,
                "head": 281
            },
            {
                "_gvid": 85,
                "tail": 36,
                "head": 282
            },
            {
                "_gvid": 86,
                "tail": 36,
                "head": 283
            },
            {
                "_gvid": 87,
                "tail": 36,
                "head": 284
            },
            {
                "_gvid": 88,
                "tail": 37,
                "head": 90
            },
            {
                "_gvid": 89,
                "tail": 37,
                "head": 285
            },
            {
                "_gvid": 90,
                "tail": 37,
                "head": 286
            },
            {
                "_gvid": 91,
                "tail": 37,
                "head": 287
            },
            {
                "_gvid": 92,
                "tail": 38,
                "head": 288
            },
            {
                "_gvid": 93,
                "tail": 38,
                "head": 289
            },
            {
                "_gvid": 94,
                "tail": 38,
                "head": 290
            },
            {
                "_gvid": 95,
                "tail": 38,
                "head": 291
            },
            {
                "_gvid": 96,
                "tail": 38,
                "head": 292
            },
            {
                "_gvid": 97,
                "tail": 38,
                "head": 293
            },
            {
                "_gvid": 98,
                "tail": 38,
                "head": 294
            },
            {
                "_gvid": 99,
                "tail": 38,
                "head": 295
            },
            {
                "_gvid": 100,
                "tail": 38,
                "head": 296
            },
            {
                "_gvid": 101,
                "tail": 39,
                "head": 106
            },
            {
                "_gvid": 103,
                "tail": 39,
                "head": 253
            },
            {
                "_gvid": 102,
                "tail": 39,
                "head": 249
            },
            {
                "_gvid": 104,
                "tail": 40,
                "head": 105
            },
            {
                "_gvid": 106,
                "tail": 40,
                "head": 253
            },
            {
                "_gvid": 107,
                "tail": 40,
                "head": 297
            },
            {
                "_gvid": 105,
                "tail": 40,
                "head": 249
            },
            {
                "_gvid": 108,
                "tail": 41,
                "head": 39
            },
            {
                "_gvid": 109,
                "tail": 41,
                "head": 40
            },
            {
                "_gvid": 112,
                "tail": 42,
                "head": 298
            },
            {
                "_gvid": 110,
                "tail": 42,
                "head": 278
            },
            {
                "_gvid": 113,
                "tail": 42,
                "head": 299
            },
            {
                "_gvid": 111,
                "tail": 42,
                "head": 280
            },
            {
                "_gvid": 114,
                "tail": 43,
                "head": 94
            },
            {
                "_gvid": 115,
                "tail": 43,
                "head": 300
            },
            {
                "_gvid": 116,
                "tail": 43,
                "head": 301
            },
            {
                "_gvid": 117,
                "tail": 44,
                "head": 89
            },
            {
                "_gvid": 118,
                "tail": 44,
                "head": 302
            },
            {
                "_gvid": 119,
                "tail": 44,
                "head": 303
            },
            {
                "_gvid": 120,
                "tail": 45,
                "head": 90
            },
            {
                "_gvid": 121,
                "tail": 45,
                "head": 304
            },
            {
                "_gvid": 122,
                "tail": 45,
                "head": 305
            },
            {
                "_gvid": 123,
                "tail": 46,
                "head": 91
            },
            {
                "_gvid": 124,
                "tail": 46,
                "head": 306
            },
            {
                "_gvid": 125,
                "tail": 46,
                "head": 307
            },
            {
                "_gvid": 126,
                "tail": 47,
                "head": 92
            },
            {
                "_gvid": 127,
                "tail": 47,
                "head": 308
            },
            {
                "_gvid": 128,
                "tail": 47,
                "head": 309
            },
            {
                "_gvid": 129,
                "tail": 48,
                "head": 93
            },
            {
                "_gvid": 130,
                "tail": 48,
                "head": 310
            },
            {
                "_gvid": 131,
                "tail": 48,
                "head": 311
            },
            {
                "_gvid": 132,
                "tail": 49,
                "head": 94
            },
            {
                "_gvid": 133,
                "tail": 49,
                "head": 312
            },
            {
                "_gvid": 134,
                "tail": 49,
                "head": 313
            },
            {
                "_gvid": 135,
                "tail": 50,
                "head": 95
            },
            {
                "_gvid": 136,
                "tail": 50,
                "head": 314
            },
            {
                "_gvid": 137,
                "tail": 50,
                "head": 315
            },
            {
                "_gvid": 138,
                "tail": 51,
                "head": 44
            },
            {
                "_gvid": 139,
                "tail": 51,
                "head": 316
            },
            {
                "_gvid": 140,
                "tail": 52,
                "head": 44
            },
            {
                "_gvid": 141,
                "tail": 52,
                "head": 317
            },
            {
                "_gvid": 142,
                "tail": 53,
                "head": 45
            },
            {
                "_gvid": 143,
                "tail": 53,
                "head": 318
            },
            {
                "_gvid": 144,
                "tail": 54,
                "head": 45
            },
            {
                "_gvid": 145,
                "tail": 54,
                "head": 319
            },
            {
                "_gvid": 146,
                "tail": 55,
                "head": 46
            },
            {
                "_gvid": 147,
                "tail": 55,
                "head": 320
            },
            {
                "_gvid": 148,
                "tail": 56,
                "head": 46
            },
            {
                "_gvid": 149,
                "tail": 56,
                "head": 321
            },
            {
                "_gvid": 150,
                "tail": 57,
                "head": 47
            },
            {
                "_gvid": 151,
                "tail": 57,
                "head": 322
            },
            {
                "_gvid": 152,
                "tail": 58,
                "head": 47
            },
            {
                "_gvid": 153,
                "tail": 58,
                "head": 323
            },
            {
                "_gvid": 154,
                "tail": 59,
                "head": 48
            },
            {
                "_gvid": 155,
                "tail": 59,
                "head": 324
            },
            {
                "_gvid": 156,
                "tail": 60,
                "head": 48
            },
            {
                "_gvid": 157,
                "tail": 60,
                "head": 325
            },
            {
                "_gvid": 158,
                "tail": 61,
                "head": 49
            },
            {
                "_gvid": 159,
                "tail": 61,
                "head": 326
            },
            {
                "_gvid": 160,
                "tail": 62,
                "head": 49
            },
            {
                "_gvid": 161,
                "tail": 62,
                "head": 327
            },
            {
                "_gvid": 162,
                "tail": 63,
                "head": 50
            },
            {
                "_gvid": 163,
                "tail": 63,
                "head": 328
            },
            {
                "_gvid": 164,
                "tail": 64,
                "head": 50
            },
            {
                "_gvid": 165,
                "tail": 64,
                "head": 329
            },
            {
                "_gvid": 166,
                "tail": 65,
                "head": 95
            },
            {
                "_gvid": 167,
                "tail": 65,
                "head": 330
            },
            {
                "_gvid": 168,
                "tail": 65,
                "head": 331
            },
            {
                "_gvid": 169,
                "tail": 65,
                "head": 332
            },
            {
                "_gvid": 170,
                "tail": 66,
                "head": 43
            },
            {
                "_gvid": 171,
                "tail": 66,
                "head": 75
            },
            {
                "_gvid": 172,
                "tail": 66,
                "head": 333
            },
            {
                "_gvid": 173,
                "tail": 66,
                "head": 334
            },
            {
                "_gvid": 174,
                "tail": 67,
                "head": 42
            },
            {
                "_gvid": 175,
                "tail": 67,
                "head": 75
            },
            {
                "_gvid": 176,
                "tail": 67,
                "head": 333
            },
            {
                "_gvid": 177,
                "tail": 68,
                "head": 35
            },
            {
                "_gvid": 178,
                "tail": 68,
                "head": 75
            },
            {
                "_gvid": 179,
                "tail": 69,
                "head": 43
            },
            {
                "_gvid": 180,
                "tail": 69,
                "head": 75
            },
            {
                "_gvid": 181,
                "tail": 69,
                "head": 333
            },
            {
                "_gvid": 182,
                "tail": 70,
                "head": 43
            },
            {
                "_gvid": 183,
                "tail": 70,
                "head": 78
            },
            {
                "_gvid": 184,
                "tail": 70,
                "head": 334
            },
            {
                "_gvid": 185,
                "tail": 71,
                "head": 35
            },
            {
                "_gvid": 186,
                "tail": 71,
                "head": 78
            },
            {
                "_gvid": 187,
                "tail": 72,
                "head": 43
            },
            {
                "_gvid": 188,
                "tail": 72,
                "head": 78
            },
            {
                "_gvid": 189,
                "tail": 72,
                "head": 335
            },
            {
                "_gvid": 190,
                "tail": 73,
                "head": 42
            },
            {
                "_gvid": 191,
                "tail": 73,
                "head": 79
            },
            {
                "_gvid": 192,
                "tail": 74,
                "head": 42
            },
            {
                "_gvid": 193,
                "tail": 74,
                "head": 79
            },
            {
                "_gvid": 195,
                "tail": 75,
                "head": 336
            },
            {
                "_gvid": 194,
                "tail": 75,
                "head": 278
            },
            {
                "_gvid": 196,
                "tail": 75,
                "head": 337
            },
            {
                "_gvid": 197,
                "tail": 75,
                "head": 338
            },
            {
                "_gvid": 198,
                "tail": 75,
                "head": 339
            },
            {
                "_gvid": 199,
                "tail": 75,
                "head": 340
            },
            {
                "_gvid": 200,
                "tail": 75,
                "head": 341
            },
            {
                "_gvid": 202,
                "tail": 76,
                "head": 342
            },
            {
                "_gvid": 201,
                "tail": 76,
                "head": 278
            },
            {
                "_gvid": 203,
                "tail": 76,
                "head": 343
            },
            {
                "_gvid": 204,
                "tail": 76,
                "head": 344
            },
            {
                "_gvid": 207,
                "tail": 77,
                "head": 345
            },
            {
                "_gvid": 208,
                "tail": 77,
                "head": 346
            },
            {
                "_gvid": 205,
                "tail": 77,
                "head": 278
            },
            {
                "_gvid": 206,
                "tail": 77,
                "head": 337
            },
            {
                "_gvid": 209,
                "tail": 77,
                "head": 347
            },
            {
                "_gvid": 210,
                "tail": 77,
                "head": 348
            },
            {
                "_gvid": 213,
                "tail": 78,
                "head": 349
            },
            {
                "_gvid": 212,
                "tail": 78,
                "head": 281
            },
            {
                "_gvid": 211,
                "tail": 78,
                "head": 278
            },
            {
                "_gvid": 214,
                "tail": 78,
                "head": 350
            },
            {
                "_gvid": 215,
                "tail": 78,
                "head": 351
            },
            {
                "_gvid": 217,
                "tail": 79,
                "head": 298
            },
            {
                "_gvid": 219,
                "tail": 79,
                "head": 352
            },
            {
                "_gvid": 216,
                "tail": 79,
                "head": 278
            },
            {
                "_gvid": 218,
                "tail": 79,
                "head": 337
            },
            {
                "_gvid": 220,
                "tail": 79,
                "head": 353
            },
            {
                "_gvid": 221,
                "tail": 79,
                "head": 354
            },
            {
                "_gvid": 223,
                "tail": 80,
                "head": 355
            },
            {
                "_gvid": 222,
                "tail": 80,
                "head": 278
            },
            {
                "_gvid": 224,
                "tail": 80,
                "head": 356
            },
            {
                "_gvid": 225,
                "tail": 80,
                "head": 357
            },
            {
                "_gvid": 226,
                "tail": 81,
                "head": 75
            },
            {
                "_gvid": 227,
                "tail": 81,
                "head": 78
            },
            {
                "_gvid": 228,
                "tail": 81,
                "head": 89
            },
            {
                "_gvid": 229,
                "tail": 82,
                "head": 76
            },
            {
                "_gvid": 230,
                "tail": 82,
                "head": 78
            },
            {
                "_gvid": 231,
                "tail": 82,
                "head": 90
            },
            {
                "_gvid": 232,
                "tail": 83,
                "head": 77
            },
            {
                "_gvid": 233,
                "tail": 83,
                "head": 91
            },
            {
                "_gvid": 234,
                "tail": 84,
                "head": 78
            },
            {
                "_gvid": 235,
                "tail": 84,
                "head": 92
            },
            {
                "_gvid": 236,
                "tail": 85,
                "head": 78
            },
            {
                "_gvid": 237,
                "tail": 85,
                "head": 93
            },
            {
                "_gvid": 238,
                "tail": 86,
                "head": 79
            },
            {
                "_gvid": 239,
                "tail": 86,
                "head": 94
            },
            {
                "_gvid": 240,
                "tail": 87,
                "head": 78
            },
            {
                "_gvid": 241,
                "tail": 87,
                "head": 80
            },
            {
                "_gvid": 242,
                "tail": 87,
                "head": 95
            },
            {
                "_gvid": 243,
                "tail": 87,
                "head": 358
            },
            {
                "_gvid": 244,
                "tail": 88,
                "head": 79
            },
            {
                "_gvid": 245,
                "tail": 88,
                "head": 80
            },
            {
                "_gvid": 246,
                "tail": 88,
                "head": 95
            },
            {
                "_gvid": 248,
                "tail": 88,
                "head": 358
            },
            {
                "_gvid": 247,
                "tail": 88,
                "head": 341
            },
            {
                "_gvid": 252,
                "tail": 89,
                "head": 359
            },
            {
                "_gvid": 249,
                "tail": 89,
                "head": 278
            },
            {
                "_gvid": 250,
                "tail": 89,
                "head": 337
            },
            {
                "_gvid": 253,
                "tail": 89,
                "head": 360
            },
            {
                "_gvid": 254,
                "tail": 89,
                "head": 361
            },
            {
                "_gvid": 255,
                "tail": 89,
                "head": 362
            },
            {
                "_gvid": 256,
                "tail": 89,
                "head": 363
            },
            {
                "_gvid": 257,
                "tail": 89,
                "head": 364
            },
            {
                "_gvid": 258,
                "tail": 89,
                "head": 365
            },
            {
                "_gvid": 259,
                "tail": 89,
                "head": 366
            },
            {
                "_gvid": 251,
                "tail": 89,
                "head": 340
            },
            {
                "_gvid": 260,
                "tail": 89,
                "head": 367
            },
            {
                "_gvid": 264,
                "tail": 90,
                "head": 368
            },
            {
                "_gvid": 261,
                "tail": 90,
                "head": 278
            },
            {
                "_gvid": 262,
                "tail": 90,
                "head": 337
            },
            {
                "_gvid": 265,
                "tail": 90,
                "head": 369
            },
            {
                "_gvid": 266,
                "tail": 90,
                "head": 370
            },
            {
                "_gvid": 267,
                "tail": 90,
                "head": 371
            },
            {
                "_gvid": 268,
                "tail": 90,
                "head": 372
            },
            {
                "_gvid": 269,
                "tail": 90,
                "head": 373
            },
            {
                "_gvid": 270,
                "tail": 90,
                "head": 374
            },
            {
                "_gvid": 271,
                "tail": 90,
                "head": 375
            },
            {
                "_gvid": 263,
                "tail": 90,
                "head": 344
            },
            {
                "_gvid": 272,
                "tail": 90,
                "head": 376
            },
            {
                "_gvid": 275,
                "tail": 91,
                "head": 345
            },
            {
                "_gvid": 273,
                "tail": 91,
                "head": 278
            },
            {
                "_gvid": 274,
                "tail": 91,
                "head": 337
            },
            {
                "_gvid": 277,
                "tail": 91,
                "head": 377
            },
            {
                "_gvid": 278,
                "tail": 91,
                "head": 378
            },
            {
                "_gvid": 279,
                "tail": 91,
                "head": 379
            },
            {
                "_gvid": 280,
                "tail": 91,
                "head": 380
            },
            {
                "_gvid": 281,
                "tail": 91,
                "head": 381
            },
            {
                "_gvid": 282,
                "tail": 91,
                "head": 382
            },
            {
                "_gvid": 283,
                "tail": 91,
                "head": 383
            },
            {
                "_gvid": 276,
                "tail": 91,
                "head": 348
            },
            {
                "_gvid": 284,
                "tail": 91,
                "head": 384
            },
            {
                "_gvid": 286,
                "tail": 92,
                "head": 385
            },
            {
                "_gvid": 285,
                "tail": 92,
                "head": 278
            },
            {
                "_gvid": 287,
                "tail": 92,
                "head": 386
            },
            {
                "_gvid": 288,
                "tail": 92,
                "head": 387
            },
            {
                "_gvid": 289,
                "tail": 92,
                "head": 388
            },
            {
                "_gvid": 290,
                "tail": 92,
                "head": 389
            },
            {
                "_gvid": 291,
                "tail": 92,
                "head": 390
            },
            {
                "_gvid": 292,
                "tail": 92,
                "head": 391
            },
            {
                "_gvid": 293,
                "tail": 92,
                "head": 392
            },
            {
                "_gvid": 294,
                "tail": 92,
                "head": 393
            },
            {
                "_gvid": 295,
                "tail": 92,
                "head": 394
            },
            {
                "_gvid": 296,
                "tail": 92,
                "head": 395
            },
            {
                "_gvid": 297,
                "tail": 92,
                "head": 396
            },
            {
                "_gvid": 298,
                "tail": 92,
                "head": 397
            },
            {
                "_gvid": 299,
                "tail": 92,
                "head": 398
            },
            {
                "_gvid": 303,
                "tail": 93,
                "head": 349
            },
            {
                "_gvid": 300,
                "tail": 93,
                "head": 278
            },
            {
                "_gvid": 302,
                "tail": 93,
                "head": 337
            },
            {
                "_gvid": 305,
                "tail": 93,
                "head": 399
            },
            {
                "_gvid": 301,
                "tail": 93,
                "head": 334
            },
            {
                "_gvid": 306,
                "tail": 93,
                "head": 400
            },
            {
                "_gvid": 307,
                "tail": 93,
                "head": 401
            },
            {
                "_gvid": 308,
                "tail": 93,
                "head": 402
            },
            {
                "_gvid": 309,
                "tail": 93,
                "head": 403
            },
            {
                "_gvid": 310,
                "tail": 93,
                "head": 404
            },
            {
                "_gvid": 304,
                "tail": 93,
                "head": 351
            },
            {
                "_gvid": 311,
                "tail": 93,
                "head": 405
            },
            {
                "_gvid": 312,
                "tail": 93,
                "head": 406
            },
            {
                "_gvid": 314,
                "tail": 94,
                "head": 298
            },
            {
                "_gvid": 313,
                "tail": 94,
                "head": 278
            },
            {
                "_gvid": 315,
                "tail": 94,
                "head": 337
            },
            {
                "_gvid": 317,
                "tail": 94,
                "head": 407
            },
            {
                "_gvid": 318,
                "tail": 94,
                "head": 408
            },
            {
                "_gvid": 319,
                "tail": 94,
                "head": 409
            },
            {
                "_gvid": 320,
                "tail": 94,
                "head": 410
            },
            {
                "_gvid": 321,
                "tail": 94,
                "head": 411
            },
            {
                "_gvid": 322,
                "tail": 94,
                "head": 412
            },
            {
                "_gvid": 323,
                "tail": 94,
                "head": 413
            },
            {
                "_gvid": 324,
                "tail": 94,
                "head": 414
            },
            {
                "_gvid": 325,
                "tail": 94,
                "head": 415
            },
            {
                "_gvid": 316,
                "tail": 94,
                "head": 354
            },
            {
                "_gvid": 326,
                "tail": 94,
                "head": 416
            },
            {
                "_gvid": 327,
                "tail": 94,
                "head": 417
            },
            {
                "_gvid": 331,
                "tail": 95,
                "head": 418
            },
            {
                "_gvid": 328,
                "tail": 95,
                "head": 278
            },
            {
                "_gvid": 329,
                "tail": 95,
                "head": 337
            },
            {
                "_gvid": 332,
                "tail": 95,
                "head": 419
            },
            {
                "_gvid": 333,
                "tail": 95,
                "head": 420
            },
            {
                "_gvid": 334,
                "tail": 95,
                "head": 421
            },
            {
                "_gvid": 335,
                "tail": 95,
                "head": 422
            },
            {
                "_gvid": 336,
                "tail": 95,
                "head": 423
            },
            {
                "_gvid": 337,
                "tail": 95,
                "head": 424
            },
            {
                "_gvid": 338,
                "tail": 95,
                "head": 425
            },
            {
                "_gvid": 330,
                "tail": 95,
                "head": 357
            },
            {
                "_gvid": 339,
                "tail": 95,
                "head": 426
            },
            {
                "_gvid": 343,
                "tail": 96,
                "head": 427
            },
            {
                "_gvid": 344,
                "tail": 96,
                "head": 428
            },
            {
                "_gvid": 345,
                "tail": 96,
                "head": 429
            },
            {
                "_gvid": 346,
                "tail": 96,
                "head": 430
            },
            {
                "_gvid": 347,
                "tail": 96,
                "head": 431
            },
            {
                "_gvid": 348,
                "tail": 96,
                "head": 432
            },
            {
                "_gvid": 349,
                "tail": 96,
                "head": 433
            },
            {
                "_gvid": 350,
                "tail": 96,
                "head": 434
            },
            {
                "_gvid": 351,
                "tail": 96,
                "head": 435
            },
            {
                "_gvid": 352,
                "tail": 96,
                "head": 436
            },
            {
                "_gvid": 353,
                "tail": 96,
                "head": 437
            },
            {
                "_gvid": 354,
                "tail": 96,
                "head": 438
            },
            {
                "_gvid": 355,
                "tail": 96,
                "head": 439
            },
            {
                "_gvid": 341,
                "tail": 96,
                "head": 252
            },
            {
                "_gvid": 342,
                "tail": 96,
                "head": 253
            },
            {
                "_gvid": 356,
                "tail": 96,
                "head": 440
            },
            {
                "_gvid": 357,
                "tail": 96,
                "head": 441
            },
            {
                "_gvid": 340,
                "tail": 96,
                "head": 107
            },
            {
                "_gvid": 361,
                "tail": 97,
                "head": 427
            },
            {
                "_gvid": 362,
                "tail": 97,
                "head": 442
            },
            {
                "_gvid": 363,
                "tail": 97,
                "head": 443
            },
            {
                "_gvid": 364,
                "tail": 97,
                "head": 444
            },
            {
                "_gvid": 365,
                "tail": 97,
                "head": 445
            },
            {
                "_gvid": 366,
                "tail": 97,
                "head": 446
            },
            {
                "_gvid": 367,
                "tail": 97,
                "head": 447
            },
            {
                "_gvid": 368,
                "tail": 97,
                "head": 448
            },
            {
                "_gvid": 359,
                "tail": 97,
                "head": 252
            },
            {
                "_gvid": 360,
                "tail": 97,
                "head": 253
            },
            {
                "_gvid": 358,
                "tail": 97,
                "head": 107
            },
            {
                "_gvid": 369,
                "tail": 98,
                "head": 97
            },
            {
                "_gvid": 370,
                "tail": 98,
                "head": 278
            },
            {
                "_gvid": 371,
                "tail": 99,
                "head": 96
            },
            {
                "_gvid": 372,
                "tail": 99,
                "head": 449
            },
            {
                "_gvid": 373,
                "tail": 100,
                "head": 278
            },
            {
                "_gvid": 374,
                "tail": 100,
                "head": 450
            },
            {
                "_gvid": 375,
                "tail": 100,
                "head": 451
            },
            {
                "_gvid": 376,
                "tail": 100,
                "head": 452
            },
            {
                "_gvid": 377,
                "tail": 100,
                "head": 453
            },
            {
                "_gvid": 378,
                "tail": 101,
                "head": 278
            },
            {
                "_gvid": 379,
                "tail": 101,
                "head": 454
            },
            {
                "_gvid": 380,
                "tail": 102,
                "head": 77
            },
            {
                "_gvid": 381,
                "tail": 102,
                "head": 100
            },
            {
                "_gvid": 382,
                "tail": 102,
                "head": 101
            },
            {
                "_gvid": 383,
                "tail": 102,
                "head": 455
            },
            {
                "_gvid": 384,
                "tail": 103,
                "head": 78
            },
            {
                "_gvid": 385,
                "tail": 103,
                "head": 100
            },
            {
                "_gvid": 386,
                "tail": 103,
                "head": 101
            },
            {
                "_gvid": 387,
                "tail": 103,
                "head": 456
            },
            {
                "_gvid": 388,
                "tail": 104,
                "head": 79
            },
            {
                "_gvid": 389,
                "tail": 104,
                "head": 100
            },
            {
                "_gvid": 390,
                "tail": 104,
                "head": 101
            },
            {
                "_gvid": 391,
                "tail": 104,
                "head": 457
            },
            {
                "_gvid": 393,
                "tail": 105,
                "head": 458
            },
            {
                "_gvid": 392,
                "tail": 105,
                "head": 107
            },
            {
                "_gvid": 395,
                "tail": 106,
                "head": 458
            },
            {
                "_gvid": 394,
                "tail": 106,
                "head": 107
            },
            {
                "_gvid": 746,
                "tail": 302,
                "head": 359
            },
            {
                "_gvid": 747,
                "tail": 302,
                "head": 459
            },
            {
                "_gvid": 786,
                "tail": 336,
                "head": 359
            },
            {
                "_gvid": 787,
                "tail": 336,
                "head": 460
            },
            {
                "_gvid": 819,
                "tail": 359,
                "head": 427
            },
            {
                "_gvid": 820,
                "tail": 359,
                "head": 461
            },
            {
                "_gvid": 749,
                "tail": 304,
                "head": 368
            },
            {
                "_gvid": 750,
                "tail": 304,
                "head": 462
            },
            {
                "_gvid": 796,
                "tail": 342,
                "head": 368
            },
            {
                "_gvid": 797,
                "tail": 342,
                "head": 463
            },
            {
                "_gvid": 830,
                "tail": 368,
                "head": 427
            },
            {
                "_gvid": 831,
                "tail": 368,
                "head": 464
            },
            {
                "_gvid": 930,
                "tail": 458,
                "head": 465
            },
            {
                "_gvid": 931,
                "tail": 458,
                "head": 466
            },
            {
                "_gvid": 932,
                "tail": 458,
                "head": 467
            },
            {
                "_gvid": 667,
                "tail": 242,
                "head": 465
            },
            {
                "_gvid": 669,
                "tail": 242,
                "head": 468
            },
            {
                "_gvid": 668,
                "tail": 242,
                "head": 467
            },
            {
                "_gvid": 752,
                "tail": 306,
                "head": 345
            },
            {
                "_gvid": 753,
                "tail": 306,
                "head": 469
            },
            {
                "_gvid": 800,
                "tail": 345,
                "head": 427
            },
            {
                "_gvid": 801,
                "tail": 345,
                "head": 470
            },
            {
                "_gvid": 755,
                "tail": 308,
                "head": 385
            },
            {
                "_gvid": 756,
                "tail": 308,
                "head": 471
            },
            {
                "_gvid": 850,
                "tail": 385,
                "head": 427
            },
            {
                "_gvid": 851,
                "tail": 385,
                "head": 472
            },
            {
                "_gvid": 758,
                "tail": 310,
                "head": 349
            },
            {
                "_gvid": 759,
                "tail": 310,
                "head": 473
            },
            {
                "_gvid": 806,
                "tail": 349,
                "head": 427
            },
            {
                "_gvid": 807,
                "tail": 349,
                "head": 474
            },
            {
                "_gvid": 740,
                "tail": 298,
                "head": 427
            },
            {
                "_gvid": 741,
                "tail": 298,
                "head": 475
            },
            {
                "_gvid": 763,
                "tail": 314,
                "head": 418
            },
            {
                "_gvid": 764,
                "tail": 314,
                "head": 476
            },
            {
                "_gvid": 814,
                "tail": 355,
                "head": 418
            },
            {
                "_gvid": 815,
                "tail": 355,
                "head": 477
            },
            {
                "_gvid": 887,
                "tail": 418,
                "head": 427
            },
            {
                "_gvid": 888,
                "tail": 418,
                "head": 478
            },
            {
                "_gvid": 897,
                "tail": 427,
                "head": 479
            },
            {
                "_gvid": 898,
                "tail": 427,
                "head": 480
            },
            {
                "_gvid": 941,
                "tail": 465,
                "head": 479
            },
            {
                "_gvid": 942,
                "tail": 465,
                "head": 481
            },
            {
                "_gvid": 670,
                "tail": 243,
                "head": 278
            },
            {
                "_gvid": 671,
                "tail": 243,
                "head": 482
            },
            {
                "_gvid": 728,
                "tail": 288,
                "head": 28
            },
            {
                "_gvid": 729,
                "tail": 288,
                "head": 483
            },
            {
                "_gvid": 730,
                "tail": 289,
                "head": 40
            },
            {
                "_gvid": 731,
                "tail": 289,
                "head": 484
            },
            {
                "_gvid": 935,
                "tail": 461,
                "head": 485
            },
            {
                "_gvid": 936,
                "tail": 461,
                "head": 486
            },
            {
                "_gvid": 939,
                "tail": 464,
                "head": 487
            },
            {
                "_gvid": 940,
                "tail": 464,
                "head": 488
            },
            {
                "_gvid": 947,
                "tail": 470,
                "head": 489
            },
            {
                "_gvid": 948,
                "tail": 470,
                "head": 490
            },
            {
                "_gvid": 950,
                "tail": 472,
                "head": 491
            },
            {
                "_gvid": 951,
                "tail": 472,
                "head": 492
            },
            {
                "_gvid": 953,
                "tail": 474,
                "head": 493
            },
            {
                "_gvid": 954,
                "tail": 474,
                "head": 494
            },
            {
                "_gvid": 955,
                "tail": 475,
                "head": 495
            },
            {
                "_gvid": 956,
                "tail": 475,
                "head": 496
            },
            {
                "_gvid": 959,
                "tail": 478,
                "head": 497
            },
            {
                "_gvid": 960,
                "tail": 478,
                "head": 498
            },
            {
                "_gvid": 708,
                "tail": 277,
                "head": 461
            },
            {
                "_gvid": 709,
                "tail": 277,
                "head": 464
            },
            {
                "_gvid": 710,
                "tail": 277,
                "head": 474
            },
            {
                "_gvid": 711,
                "tail": 277,
                "head": 475
            },
            {
                "_gvid": 712,
                "tail": 277,
                "head": 478
            },
            {
                "_gvid": 716,
                "tail": 281,
                "head": 277
            },
            {
                "_gvid": 717,
                "tail": 281,
                "head": 337
            },
            {
                "_gvid": 719,
                "tail": 281,
                "head": 408
            },
            {
                "_gvid": 718,
                "tail": 281,
                "head": 341
            },
            {
                "_gvid": 743,
                "tail": 300,
                "head": 36
            },
            {
                "_gvid": 744,
                "tail": 300,
                "head": 499
            },
            {
                "_gvid": 802,
                "tail": 346,
                "head": 470
            },
            {
                "_gvid": 803,
                "tail": 346,
                "head": 500
            },
            {
                "_gvid": 810,
                "tail": 352,
                "head": 475
            },
            {
                "_gvid": 811,
                "tail": 352,
                "head": 501
            },
            {
                "_gvid": 989,
                "tail": 502,
                "head": 78
            },
            {
                "_gvid": 990,
                "tail": 503,
                "head": 79
            },
            {
                "_gvid": 991,
                "tail": 504,
                "head": 80
            },
            {
                "_gvid": 713,
                "tail": 278,
                "head": 99
            },
            {
                "_gvid": 569,
                "tail": 149,
                "head": 337
            },
            {
                "_gvid": 570,
                "tail": 150,
                "head": 29
            },
            {
                "_gvid": 571,
                "tail": 151,
                "head": 29
            },
            {
                "_gvid": 572,
                "tail": 152,
                "head": 67
            },
            {
                "_gvid": 573,
                "tail": 153,
                "head": 68
            },
            {
                "_gvid": 574,
                "tail": 154,
                "head": 69
            },
            {
                "_gvid": 575,
                "tail": 155,
                "head": 44
            },
            {
                "_gvid": 576,
                "tail": 156,
                "head": 44
            },
            {
                "_gvid": 577,
                "tail": 157,
                "head": 81
            },
            {
                "_gvid": 397,
                "tail": 124,
                "head": 75
            },
            {
                "_gvid": 398,
                "tail": 124,
                "head": 78
            },
            {
                "_gvid": 578,
                "tail": 158,
                "head": 89
            },
            {
                "_gvid": 400,
                "tail": 126,
                "head": 30
            },
            {
                "_gvid": 579,
                "tail": 159,
                "head": 30
            },
            {
                "_gvid": 402,
                "tail": 128,
                "head": 89
            },
            {
                "_gvid": 399,
                "tail": 125,
                "head": 89
            },
            {
                "_gvid": 580,
                "tail": 160,
                "head": 89
            },
            {
                "_gvid": 581,
                "tail": 161,
                "head": 96
            },
            {
                "_gvid": 582,
                "tail": 162,
                "head": 96
            },
            {
                "_gvid": 583,
                "tail": 163,
                "head": 96
            },
            {
                "_gvid": 584,
                "tail": 164,
                "head": 34
            },
            {
                "_gvid": 585,
                "tail": 165,
                "head": 34
            },
            {
                "_gvid": 586,
                "tail": 166,
                "head": 34
            },
            {
                "_gvid": 587,
                "tail": 167,
                "head": 34
            },
            {
                "_gvid": 588,
                "tail": 168,
                "head": 34
            },
            {
                "_gvid": 589,
                "tail": 169,
                "head": 34
            },
            {
                "_gvid": 590,
                "tail": 170,
                "head": 34
            },
            {
                "_gvid": 591,
                "tail": 171,
                "head": 34
            },
            {
                "_gvid": 592,
                "tail": 172,
                "head": 34
            },
            {
                "_gvid": 593,
                "tail": 173,
                "head": 34
            },
            {
                "_gvid": 594,
                "tail": 174,
                "head": 97
            },
            {
                "_gvid": 595,
                "tail": 175,
                "head": 35
            },
            {
                "_gvid": 596,
                "tail": 176,
                "head": 45
            },
            {
                "_gvid": 597,
                "tail": 177,
                "head": 45
            },
            {
                "_gvid": 598,
                "tail": 178,
                "head": 82
            },
            {
                "_gvid": 403,
                "tail": 129,
                "head": 76
            },
            {
                "_gvid": 404,
                "tail": 129,
                "head": 502
            },
            {
                "_gvid": 599,
                "tail": 179,
                "head": 90
            },
            {
                "_gvid": 406,
                "tail": 131,
                "head": 37
            },
            {
                "_gvid": 600,
                "tail": 180,
                "head": 37
            },
            {
                "_gvid": 407,
                "tail": 132,
                "head": 90
            },
            {
                "_gvid": 405,
                "tail": 130,
                "head": 90
            },
            {
                "_gvid": 601,
                "tail": 181,
                "head": 90
            },
            {
                "_gvid": 602,
                "tail": 182,
                "head": 42
            },
            {
                "_gvid": 603,
                "tail": 183,
                "head": 42
            },
            {
                "_gvid": 604,
                "tail": 184,
                "head": 46
            },
            {
                "_gvid": 605,
                "tail": 185,
                "head": 46
            },
            {
                "_gvid": 606,
                "tail": 186,
                "head": 83
            },
            {
                "_gvid": 408,
                "tail": 133,
                "head": 77
            },
            {
                "_gvid": 607,
                "tail": 187,
                "head": 91
            },
            {
                "_gvid": 410,
                "tail": 135,
                "head": 91
            },
            {
                "_gvid": 409,
                "tail": 134,
                "head": 91
            },
            {
                "_gvid": 608,
                "tail": 188,
                "head": 91
            },
            {
                "_gvid": 609,
                "tail": 189,
                "head": 252
            },
            {
                "_gvid": 610,
                "tail": 190,
                "head": 36
            },
            {
                "_gvid": 611,
                "tail": 191,
                "head": 36
            },
            {
                "_gvid": 612,
                "tail": 191,
                "head": 505
            },
            {
                "_gvid": 613,
                "tail": 192,
                "head": 43
            },
            {
                "_gvid": 614,
                "tail": 193,
                "head": 43
            },
            {
                "_gvid": 615,
                "tail": 194,
                "head": 47
            },
            {
                "_gvid": 616,
                "tail": 195,
                "head": 47
            },
            {
                "_gvid": 617,
                "tail": 196,
                "head": 92
            },
            {
                "_gvid": 618,
                "tail": 197,
                "head": 92
            },
            {
                "_gvid": 619,
                "tail": 198,
                "head": 92
            },
            {
                "_gvid": 620,
                "tail": 199,
                "head": 92
            },
            {
                "_gvid": 621,
                "tail": 200,
                "head": 71
            },
            {
                "_gvid": 622,
                "tail": 201,
                "head": 72
            },
            {
                "_gvid": 623,
                "tail": 202,
                "head": 48
            },
            {
                "_gvid": 624,
                "tail": 203,
                "head": 48
            },
            {
                "_gvid": 625,
                "tail": 204,
                "head": 85
            },
            {
                "_gvid": 411,
                "tail": 136,
                "head": 502
            },
            {
                "_gvid": 626,
                "tail": 205,
                "head": 93
            },
            {
                "_gvid": 413,
                "tail": 138,
                "head": 93
            },
            {
                "_gvid": 412,
                "tail": 137,
                "head": 93
            },
            {
                "_gvid": 627,
                "tail": 206,
                "head": 93
            },
            {
                "_gvid": 628,
                "tail": 207,
                "head": 74
            },
            {
                "_gvid": 629,
                "tail": 208,
                "head": 73
            },
            {
                "_gvid": 630,
                "tail": 209,
                "head": 49
            },
            {
                "_gvid": 631,
                "tail": 210,
                "head": 49
            },
            {
                "_gvid": 632,
                "tail": 211,
                "head": 86
            },
            {
                "_gvid": 414,
                "tail": 139,
                "head": 503
            },
            {
                "_gvid": 633,
                "tail": 212,
                "head": 94
            },
            {
                "_gvid": 416,
                "tail": 141,
                "head": 94
            },
            {
                "_gvid": 415,
                "tail": 140,
                "head": 94
            },
            {
                "_gvid": 634,
                "tail": 213,
                "head": 94
            },
            {
                "_gvid": 635,
                "tail": 214,
                "head": 50
            },
            {
                "_gvid": 636,
                "tail": 215,
                "head": 50
            },
            {
                "_gvid": 637,
                "tail": 216,
                "head": 88
            },
            {
                "_gvid": 638,
                "tail": 217,
                "head": 87
            },
            {
                "_gvid": 640,
                "tail": 218,
                "head": 502
            },
            {
                "_gvid": 641,
                "tail": 218,
                "head": 503
            },
            {
                "_gvid": 642,
                "tail": 218,
                "head": 504
            },
            {
                "_gvid": 639,
                "tail": 218,
                "head": 358
            },
            {
                "_gvid": 643,
                "tail": 219,
                "head": 95
            },
            {
                "_gvid": 644,
                "tail": 220,
                "head": 65
            },
            {
                "_gvid": 645,
                "tail": 221,
                "head": 95
            },
            {
                "_gvid": 646,
                "tail": 222,
                "head": 95
            },
            {
                "_gvid": 647,
                "tail": 223,
                "head": 95
            },
            {
                "_gvid": 648,
                "tail": 224,
                "head": 29
            },
            {
                "_gvid": 649,
                "tail": 225,
                "head": 100
            },
            {
                "_gvid": 650,
                "tail": 226,
                "head": 100
            },
            {
                "_gvid": 651,
                "tail": 226,
                "head": 101
            },
            {
                "_gvid": 652,
                "tail": 227,
                "head": 96
            },
            {
                "_gvid": 653,
                "tail": 228,
                "head": 96
            },
            {
                "_gvid": 654,
                "tail": 229,
                "head": 96
            },
            {
                "_gvid": 655,
                "tail": 230,
                "head": 96
            },
            {
                "_gvid": 656,
                "tail": 231,
                "head": 289
            },
            {
                "_gvid": 657,
                "tail": 232,
                "head": 38
            },
            {
                "_gvid": 658,
                "tail": 233,
                "head": 288
            },
            {
                "_gvid": 659,
                "tail": 234,
                "head": 467
            },
            {
                "_gvid": 660,
                "tail": 235,
                "head": 38
            },
            {
                "_gvid": 396,
                "tail": 123,
                "head": 96
            },
            {
                "_gvid": 661,
                "tail": 236,
                "head": 96
            },
            {
                "_gvid": 662,
                "tail": 237,
                "head": 96
            },
            {
                "_gvid": 663,
                "tail": 238,
                "head": 96
            },
            {
                "_gvid": 664,
                "tail": 239,
                "head": 96
            },
            {
                "_gvid": 665,
                "tail": 240,
                "head": 96
            },
            {
                "_gvid": 666,
                "tail": 241,
                "head": 99
            },
            {
                "_gvid": 922,
                "tail": 450,
                "head": 506
            },
            {
                "_gvid": 788,
                "tail": 337,
                "head": 27
            },
            {
                "_gvid": 789,
                "tail": 337,
                "head": 142
            },
            {
                "_gvid": 790,
                "tail": 337,
                "head": 506
            },
            {
                "_gvid": 900,
                "tail": 428,
                "head": 506
            },
            {
                "_gvid": 899,
                "tail": 428,
                "head": 122
            },
            {
                "_gvid": 791,
                "tail": 338,
                "head": 506
            },
            {
                "_gvid": 783,
                "tail": 333,
                "head": 506
            },
            {
                "_gvid": 684,
                "tail": 254,
                "head": 143
            },
            {
                "_gvid": 685,
                "tail": 254,
                "head": 506
            },
            {
                "_gvid": 934,
                "tail": 460,
                "head": 506
            },
            {
                "_gvid": 714,
                "tail": 279,
                "head": 506
            },
            {
                "_gvid": 724,
                "tail": 285,
                "head": 144
            },
            {
                "_gvid": 725,
                "tail": 285,
                "head": 506
            },
            {
                "_gvid": 938,
                "tail": 463,
                "head": 506
            },
            {
                "_gvid": 943,
                "tail": 466,
                "head": 506
            },
            {
                "_gvid": 945,
                "tail": 468,
                "head": 506
            },
            {
                "_gvid": 742,
                "tail": 299,
                "head": 506
            },
            {
                "_gvid": 987,
                "tail": 500,
                "head": 506
            },
            {
                "_gvid": 988,
                "tail": 501,
                "head": 506
            },
            {
                "_gvid": 780,
                "tail": 330,
                "head": 506
            },
            {
                "_gvid": 958,
                "tail": 477,
                "head": 506
            },
            {
                "_gvid": 961,
                "tail": 479,
                "head": 506
            },
            {
                "_gvid": 678,
                "tail": 250,
                "head": 506
            },
            {
                "_gvid": 679,
                "tail": 251,
                "head": 506
            },
            {
                "_gvid": 852,
                "tail": 386,
                "head": 506
            },
            {
                "_gvid": 748,
                "tail": 303,
                "head": 506
            },
            {
                "_gvid": 933,
                "tail": 459,
                "head": 506
            },
            {
                "_gvid": 766,
                "tail": 316,
                "head": 506
            },
            {
                "_gvid": 767,
                "tail": 317,
                "head": 506
            },
            {
                "_gvid": 792,
                "tail": 339,
                "head": 506
            },
            {
                "_gvid": 821,
                "tail": 360,
                "head": 506
            },
            {
                "_gvid": 822,
                "tail": 361,
                "head": 506
            },
            {
                "_gvid": 823,
                "tail": 362,
                "head": 506
            },
            {
                "_gvid": 824,
                "tail": 363,
                "head": 506
            },
            {
                "_gvid": 686,
                "tail": 255,
                "head": 506
            },
            {
                "_gvid": 687,
                "tail": 256,
                "head": 506
            },
            {
                "_gvid": 825,
                "tail": 364,
                "head": 506
            },
            {
                "_gvid": 967,
                "tail": 485,
                "head": 506
            },
            {
                "_gvid": 827,
                "tail": 365,
                "head": 506
            },
            {
                "_gvid": 826,
                "tail": 365,
                "head": 109
            },
            {
                "_gvid": 828,
                "tail": 366,
                "head": 506
            },
            {
                "_gvid": 793,
                "tail": 340,
                "head": 506
            },
            {
                "_gvid": 829,
                "tail": 367,
                "head": 506
            },
            {
                "_gvid": 968,
                "tail": 486,
                "head": 143
            },
            {
                "_gvid": 969,
                "tail": 486,
                "head": 506
            },
            {
                "_gvid": 688,
                "tail": 257,
                "head": 506
            },
            {
                "_gvid": 689,
                "tail": 258,
                "head": 506
            },
            {
                "_gvid": 690,
                "tail": 259,
                "head": 506
            },
            {
                "_gvid": 691,
                "tail": 260,
                "head": 506
            },
            {
                "_gvid": 693,
                "tail": 262,
                "head": 506
            },
            {
                "_gvid": 694,
                "tail": 263,
                "head": 506
            },
            {
                "_gvid": 695,
                "tail": 264,
                "head": 506
            },
            {
                "_gvid": 696,
                "tail": 265,
                "head": 506
            },
            {
                "_gvid": 698,
                "tail": 267,
                "head": 506
            },
            {
                "_gvid": 699,
                "tail": 268,
                "head": 506
            },
            {
                "_gvid": 700,
                "tail": 269,
                "head": 506
            },
            {
                "_gvid": 701,
                "tail": 270,
                "head": 506
            },
            {
                "_gvid": 703,
                "tail": 272,
                "head": 506
            },
            {
                "_gvid": 704,
                "tail": 273,
                "head": 506
            },
            {
                "_gvid": 705,
                "tail": 274,
                "head": 506
            },
            {
                "_gvid": 706,
                "tail": 275,
                "head": 506
            },
            {
                "_gvid": 914,
                "tail": 442,
                "head": 506
            },
            {
                "_gvid": 915,
                "tail": 443,
                "head": 506
            },
            {
                "_gvid": 916,
                "tail": 444,
                "head": 506
            },
            {
                "_gvid": 917,
                "tail": 445,
                "head": 506
            },
            {
                "_gvid": 918,
                "tail": 446,
                "head": 506
            },
            {
                "_gvid": 919,
                "tail": 447,
                "head": 506
            },
            {
                "_gvid": 751,
                "tail": 305,
                "head": 506
            },
            {
                "_gvid": 937,
                "tail": 462,
                "head": 506
            },
            {
                "_gvid": 768,
                "tail": 318,
                "head": 506
            },
            {
                "_gvid": 769,
                "tail": 319,
                "head": 506
            },
            {
                "_gvid": 798,
                "tail": 343,
                "head": 506
            },
            {
                "_gvid": 832,
                "tail": 369,
                "head": 506
            },
            {
                "_gvid": 833,
                "tail": 370,
                "head": 506
            },
            {
                "_gvid": 834,
                "tail": 371,
                "head": 506
            },
            {
                "_gvid": 835,
                "tail": 372,
                "head": 506
            },
            {
                "_gvid": 726,
                "tail": 286,
                "head": 506
            },
            {
                "_gvid": 727,
                "tail": 287,
                "head": 506
            },
            {
                "_gvid": 836,
                "tail": 373,
                "head": 506
            },
            {
                "_gvid": 970,
                "tail": 487,
                "head": 506
            },
            {
                "_gvid": 838,
                "tail": 374,
                "head": 506
            },
            {
                "_gvid": 837,
                "tail": 374,
                "head": 111
            },
            {
                "_gvid": 839,
                "tail": 375,
                "head": 506
            },
            {
                "_gvid": 799,
                "tail": 344,
                "head": 506
            },
            {
                "_gvid": 840,
                "tail": 376,
                "head": 506
            },
            {
                "_gvid": 971,
                "tail": 488,
                "head": 144
            },
            {
                "_gvid": 972,
                "tail": 488,
                "head": 506
            },
            {
                "_gvid": 920,
                "tail": 448,
                "head": 506
            },
            {
                "_gvid": 901,
                "tail": 429,
                "head": 506
            },
            {
                "_gvid": 902,
                "tail": 430,
                "head": 506
            },
            {
                "_gvid": 963,
                "tail": 481,
                "head": 506
            },
            {
                "_gvid": 903,
                "tail": 431,
                "head": 506
            },
            {
                "_gvid": 721,
                "tail": 282,
                "head": 506
            },
            {
                "_gvid": 720,
                "tail": 282,
                "head": 113
            },
            {
                "_gvid": 904,
                "tail": 432,
                "head": 506
            },
            {
                "_gvid": 818,
                "tail": 358,
                "head": 506
            },
            {
                "_gvid": 923,
                "tail": 451,
                "head": 506
            },
            {
                "_gvid": 986,
                "tail": 499,
                "head": 506
            },
            {
                "_gvid": 992,
                "tail": 505,
                "head": 506
            },
            {
                "_gvid": 966,
                "tail": 484,
                "head": 506
            },
            {
                "_gvid": 672,
                "tail": 244,
                "head": 506
            },
            {
                "_gvid": 673,
                "tail": 245,
                "head": 506
            },
            {
                "_gvid": 674,
                "tail": 246,
                "head": 506
            },
            {
                "_gvid": 964,
                "tail": 482,
                "head": 506
            },
            {
                "_gvid": 675,
                "tail": 247,
                "head": 506
            },
            {
                "_gvid": 676,
                "tail": 248,
                "head": 506
            },
            {
                "_gvid": 732,
                "tail": 290,
                "head": 506
            },
            {
                "_gvid": 965,
                "tail": 483,
                "head": 506
            },
            {
                "_gvid": 944,
                "tail": 467,
                "head": 506
            },
            {
                "_gvid": 733,
                "tail": 291,
                "head": 506
            },
            {
                "_gvid": 734,
                "tail": 292,
                "head": 506
            },
            {
                "_gvid": 735,
                "tail": 293,
                "head": 506
            },
            {
                "_gvid": 736,
                "tail": 294,
                "head": 506
            },
            {
                "_gvid": 737,
                "tail": 295,
                "head": 506
            },
            {
                "_gvid": 738,
                "tail": 296,
                "head": 506
            },
            {
                "_gvid": 715,
                "tail": 280,
                "head": 506
            },
            {
                "_gvid": 905,
                "tail": 433,
                "head": 506
            },
            {
                "_gvid": 754,
                "tail": 307,
                "head": 506
            },
            {
                "_gvid": 946,
                "tail": 469,
                "head": 506
            },
            {
                "_gvid": 770,
                "tail": 320,
                "head": 506
            },
            {
                "_gvid": 771,
                "tail": 321,
                "head": 506
            },
            {
                "_gvid": 804,
                "tail": 347,
                "head": 506
            },
            {
                "_gvid": 841,
                "tail": 377,
                "head": 506
            },
            {
                "_gvid": 842,
                "tail": 378,
                "head": 506
            },
            {
                "_gvid": 843,
                "tail": 379,
                "head": 506
            },
            {
                "_gvid": 844,
                "tail": 380,
                "head": 506
            },
            {
                "_gvid": 845,
                "tail": 381,
                "head": 506
            },
            {
                "_gvid": 973,
                "tail": 489,
                "head": 506
            },
            {
                "_gvid": 847,
                "tail": 382,
                "head": 506
            },
            {
                "_gvid": 846,
                "tail": 382,
                "head": 114
            },
            {
                "_gvid": 848,
                "tail": 383,
                "head": 506
            },
            {
                "_gvid": 805,
                "tail": 348,
                "head": 506
            },
            {
                "_gvid": 849,
                "tail": 384,
                "head": 506
            },
            {
                "_gvid": 974,
                "tail": 490,
                "head": 145
            },
            {
                "_gvid": 975,
                "tail": 490,
                "head": 506
            },
            {
                "_gvid": 906,
                "tail": 434,
                "head": 506
            },
            {
                "_gvid": 907,
                "tail": 435,
                "head": 506
            },
            {
                "_gvid": 908,
                "tail": 436,
                "head": 506
            },
            {
                "_gvid": 909,
                "tail": 437,
                "head": 506
            },
            {
                "_gvid": 910,
                "tail": 438,
                "head": 506
            },
            {
                "_gvid": 911,
                "tail": 439,
                "head": 506
            },
            {
                "_gvid": 692,
                "tail": 261,
                "head": 506
            },
            {
                "_gvid": 697,
                "tail": 266,
                "head": 506
            },
            {
                "_gvid": 702,
                "tail": 271,
                "head": 506
            },
            {
                "_gvid": 707,
                "tail": 276,
                "head": 506
            },
            {
                "_gvid": 853,
                "tail": 387,
                "head": 506
            },
            {
                "_gvid": 874,
                "tail": 407,
                "head": 506
            },
            {
                "_gvid": 680,
                "tail": 252,
                "head": 127
            },
            {
                "_gvid": 681,
                "tail": 252,
                "head": 506
            },
            {
                "_gvid": 722,
                "tail": 283,
                "head": 506
            },
            {
                "_gvid": 785,
                "tail": 335,
                "head": 506
            },
            {
                "_gvid": 745,
                "tail": 301,
                "head": 506
            },
            {
                "_gvid": 876,
                "tail": 408,
                "head": 506
            },
            {
                "_gvid": 875,
                "tail": 408,
                "head": 116
            },
            {
                "_gvid": 757,
                "tail": 309,
                "head": 506
            },
            {
                "_gvid": 854,
                "tail": 388,
                "head": 506
            },
            {
                "_gvid": 855,
                "tail": 389,
                "head": 506
            },
            {
                "_gvid": 949,
                "tail": 471,
                "head": 506
            },
            {
                "_gvid": 772,
                "tail": 322,
                "head": 506
            },
            {
                "_gvid": 773,
                "tail": 323,
                "head": 506
            },
            {
                "_gvid": 856,
                "tail": 390,
                "head": 506
            },
            {
                "_gvid": 857,
                "tail": 391,
                "head": 506
            },
            {
                "_gvid": 858,
                "tail": 392,
                "head": 506
            },
            {
                "_gvid": 859,
                "tail": 393,
                "head": 506
            },
            {
                "_gvid": 860,
                "tail": 394,
                "head": 506
            },
            {
                "_gvid": 976,
                "tail": 491,
                "head": 506
            },
            {
                "_gvid": 861,
                "tail": 395,
                "head": 506
            },
            {
                "_gvid": 862,
                "tail": 396,
                "head": 506
            },
            {
                "_gvid": 863,
                "tail": 397,
                "head": 506
            },
            {
                "_gvid": 864,
                "tail": 398,
                "head": 506
            },
            {
                "_gvid": 977,
                "tail": 492,
                "head": 506
            },
            {
                "_gvid": 760,
                "tail": 311,
                "head": 506
            },
            {
                "_gvid": 952,
                "tail": 473,
                "head": 506
            },
            {
                "_gvid": 774,
                "tail": 324,
                "head": 506
            },
            {
                "_gvid": 775,
                "tail": 325,
                "head": 506
            },
            {
                "_gvid": 808,
                "tail": 350,
                "head": 506
            },
            {
                "_gvid": 865,
                "tail": 399,
                "head": 506
            },
            {
                "_gvid": 784,
                "tail": 334,
                "head": 506
            },
            {
                "_gvid": 866,
                "tail": 400,
                "head": 506
            },
            {
                "_gvid": 867,
                "tail": 401,
                "head": 506
            },
            {
                "_gvid": 868,
                "tail": 402,
                "head": 506
            },
            {
                "_gvid": 978,
                "tail": 493,
                "head": 506
            },
            {
                "_gvid": 870,
                "tail": 403,
                "head": 506
            },
            {
                "_gvid": 869,
                "tail": 403,
                "head": 118
            },
            {
                "_gvid": 871,
                "tail": 404,
                "head": 506
            },
            {
                "_gvid": 809,
                "tail": 351,
                "head": 506
            },
            {
                "_gvid": 872,
                "tail": 405,
                "head": 506
            },
            {
                "_gvid": 873,
                "tail": 406,
                "head": 506
            },
            {
                "_gvid": 979,
                "tail": 494,
                "head": 146
            },
            {
                "_gvid": 980,
                "tail": 494,
                "head": 506
            },
            {
                "_gvid": 927,
                "tail": 455,
                "head": 506
            },
            {
                "_gvid": 928,
                "tail": 456,
                "head": 506
            },
            {
                "_gvid": 929,
                "tail": 457,
                "head": 506
            },
            {
                "_gvid": 761,
                "tail": 312,
                "head": 506
            },
            {
                "_gvid": 762,
                "tail": 313,
                "head": 506
            },
            {
                "_gvid": 776,
                "tail": 326,
                "head": 506
            },
            {
                "_gvid": 777,
                "tail": 327,
                "head": 506
            },
            {
                "_gvid": 812,
                "tail": 353,
                "head": 506
            },
            {
                "_gvid": 877,
                "tail": 409,
                "head": 506
            },
            {
                "_gvid": 878,
                "tail": 410,
                "head": 506
            },
            {
                "_gvid": 879,
                "tail": 411,
                "head": 506
            },
            {
                "_gvid": 880,
                "tail": 412,
                "head": 506
            },
            {
                "_gvid": 881,
                "tail": 413,
                "head": 506
            },
            {
                "_gvid": 981,
                "tail": 495,
                "head": 506
            },
            {
                "_gvid": 883,
                "tail": 414,
                "head": 506
            },
            {
                "_gvid": 882,
                "tail": 414,
                "head": 120
            },
            {
                "_gvid": 884,
                "tail": 415,
                "head": 506
            },
            {
                "_gvid": 813,
                "tail": 354,
                "head": 506
            },
            {
                "_gvid": 885,
                "tail": 416,
                "head": 506
            },
            {
                "_gvid": 886,
                "tail": 417,
                "head": 506
            },
            {
                "_gvid": 982,
                "tail": 496,
                "head": 147
            },
            {
                "_gvid": 983,
                "tail": 496,
                "head": 506
            },
            {
                "_gvid": 962,
                "tail": 480,
                "head": 506
            },
            {
                "_gvid": 765,
                "tail": 315,
                "head": 506
            },
            {
                "_gvid": 957,
                "tail": 476,
                "head": 506
            },
            {
                "_gvid": 778,
                "tail": 328,
                "head": 506
            },
            {
                "_gvid": 779,
                "tail": 329,
                "head": 506
            },
            {
                "_gvid": 816,
                "tail": 356,
                "head": 506
            },
            {
                "_gvid": 889,
                "tail": 419,
                "head": 506
            },
            {
                "_gvid": 890,
                "tail": 420,
                "head": 506
            },
            {
                "_gvid": 891,
                "tail": 421,
                "head": 506
            },
            {
                "_gvid": 892,
                "tail": 422,
                "head": 506
            },
            {
                "_gvid": 781,
                "tail": 331,
                "head": 506
            },
            {
                "_gvid": 782,
                "tail": 332,
                "head": 506
            },
            {
                "_gvid": 893,
                "tail": 423,
                "head": 506
            },
            {
                "_gvid": 984,
                "tail": 497,
                "head": 506
            },
            {
                "_gvid": 894,
                "tail": 424,
                "head": 506
            },
            {
                "_gvid": 895,
                "tail": 425,
                "head": 506
            },
            {
                "_gvid": 817,
                "tail": 357,
                "head": 506
            },
            {
                "_gvid": 896,
                "tail": 426,
                "head": 506
            },
            {
                "_gvid": 985,
                "tail": 498,
                "head": 506
            },
            {
                "_gvid": 723,
                "tail": 284,
                "head": 506
            },
            {
                "_gvid": 921,
                "tail": 449,
                "head": 506
            },
            {
                "_gvid": 795,
                "tail": 341,
                "head": 506
            },
            {
                "_gvid": 794,
                "tail": 341,
                "head": 116
            },
            {
                "_gvid": 683,
                "tail": 253,
                "head": 506
            },
            {
                "_gvid": 682,
                "tail": 253,
                "head": 117
            },
            {
                "_gvid": 912,
                "tail": 440,
                "head": 506
            },
            {
                "_gvid": 739,
                "tail": 297,
                "head": 506
            },
            {
                "_gvid": 677,
                "tail": 249,
                "head": 506
            },
            {
                "_gvid": 913,
                "tail": 441,
                "head": 506
            },
            {
                "_gvid": 924,
                "tail": 452,
                "head": 506
            },
            {
                "_gvid": 926,
                "tail": 454,
                "head": 506
            },
            {
                "_gvid": 925,
                "tail": 453,
                "head": 506
            },
            {
                "_gvid": 993,
                "tail": 507,
                "head": 124
            },
            {
                "_gvid": 994,
                "tail": 508,
                "head": 125
            },
            {
                "_gvid": 995,
                "tail": 509,
                "head": 126
            },
            {
                "_gvid": 996,
                "tail": 510,
                "head": 128
            },
            {
                "_gvid": 997,
                "tail": 511,
                "head": 129
            },
            {
                "_gvid": 998,
                "tail": 512,
                "head": 130
            },
            {
                "_gvid": 999,
                "tail": 513,
                "head": 131
            },
            {
                "_gvid": 1000,
                "tail": 514,
                "head": 132
            },
            {
                "_gvid": 1001,
                "tail": 515,
                "head": 133
            },
            {
                "_gvid": 1002,
                "tail": 516,
                "head": 134
            },
            {
                "_gvid": 1003,
                "tail": 517,
                "head": 135
            },
            {
                "_gvid": 1004,
                "tail": 518,
                "head": 136
            },
            {
                "_gvid": 1005,
                "tail": 519,
                "head": 137
            },
            {
                "_gvid": 1006,
                "tail": 520,
                "head": 138
            },
            {
                "_gvid": 1007,
                "tail": 521,
                "head": 139
            },
            {
                "_gvid": 1008,
                "tail": 522,
                "head": 140
            },
            {
                "_gvid": 1009,
                "tail": 523,
                "head": 141
            },
            {
                "_gvid": 1010,
                "tail": 524,
                "head": 123
            },
            {
                "_gvid": 1011,
                "tail": 525,
                "head": 2
            },
            {
                "_gvid": 1012,
                "tail": 525,
                "head": 3
            },
            {
                "_gvid": 1013,
                "tail": 525,
                "head": 4
            },
            {
                "_gvid": 1014,
                "tail": 525,
                "head": 5
            },
            {
                "_gvid": 1015,
                "tail": 525,
                "head": 6
            },
            {
                "_gvid": 1016,
                "tail": 525,
                "head": 7
            },
            {
                "_gvid": 1017,
                "tail": 525,
                "head": 8
            },
            {
                "_gvid": 1018,
                "tail": 525,
                "head": 9
            },
            {
                "_gvid": 1019,
                "tail": 525,
                "head": 10
            },
            {
                "_gvid": 1020,
                "tail": 525,
                "head": 11
            },
            {
                "_gvid": 1021,
                "tail": 525,
                "head": 12
            },
            {
                "_gvid": 1022,
                "tail": 525,
                "head": 13
            },
            {
                "_gvid": 1023,
                "tail": 525,
                "head": 14
            },
            {
                "_gvid": 1024,
                "tail": 525,
                "head": 15
            },
            {
                "_gvid": 1025,
                "tail": 525,
                "head": 16
            },
            {
                "_gvid": 1026,
                "tail": 525,
                "head": 17
            },
            {
                "_gvid": 1027,
                "tail": 525,
                "head": 18
            },
            {
                "_gvid": 1028,
                "tail": 525,
                "head": 19
            },
            {
                "_gvid": 1029,
                "tail": 525,
                "head": 20
            },
            {
                "_gvid": 1030,
                "tail": 525,
                "head": 21
            },
            {
                "_gvid": 1031,
                "tail": 525,
                "head": 22
            },
            {
                "_gvid": 1032,
                "tail": 525,
                "head": 23
            },
            {
                "_gvid": 1033,
                "tail": 525,
                "head": 24
            },
            {
                "_gvid": 1034,
                "tail": 525,
                "head": 25
            },
            {
                "_gvid": 1035,
                "tail": 525,
                "head": 26
            },
            {
                "_gvid": 1036,
                "tail": 525,
                "head": 29
            },
            {
                "_gvid": 1037,
                "tail": 525,
                "head": 31
            },
            {
                "_gvid": 1038,
                "tail": 525,
                "head": 32
            },
            {
                "_gvid": 1039,
                "tail": 525,
                "head": 33
            },
            {
                "_gvid": 1040,
                "tail": 525,
                "head": 34
            },
            {
                "_gvid": 1041,
                "tail": 525,
                "head": 38
            },
            {
                "_gvid": 1042,
                "tail": 525,
                "head": 41
            },
            {
                "_gvid": 1043,
                "tail": 525,
                "head": 51
            },
            {
                "_gvid": 1044,
                "tail": 525,
                "head": 52
            },
            {
                "_gvid": 1045,
                "tail": 525,
                "head": 53
            },
            {
                "_gvid": 1046,
                "tail": 525,
                "head": 54
            },
            {
                "_gvid": 1047,
                "tail": 525,
                "head": 55
            },
            {
                "_gvid": 1048,
                "tail": 525,
                "head": 56
            },
            {
                "_gvid": 1049,
                "tail": 525,
                "head": 57
            },
            {
                "_gvid": 1050,
                "tail": 525,
                "head": 58
            },
            {
                "_gvid": 1051,
                "tail": 525,
                "head": 59
            },
            {
                "_gvid": 1052,
                "tail": 525,
                "head": 60
            },
            {
                "_gvid": 1053,
                "tail": 525,
                "head": 61
            },
            {
                "_gvid": 1054,
                "tail": 525,
                "head": 62
            },
            {
                "_gvid": 1055,
                "tail": 525,
                "head": 63
            },
            {
                "_gvid": 1056,
                "tail": 525,
                "head": 64
            },
            {
                "_gvid": 1057,
                "tail": 525,
                "head": 65
            },
            {
                "_gvid": 1058,
                "tail": 525,
                "head": 66
            },
            {
                "_gvid": 1059,
                "tail": 525,
                "head": 67
            },
            {
                "_gvid": 1060,
                "tail": 525,
                "head": 68
            },
            {
                "_gvid": 1061,
                "tail": 525,
                "head": 69
            },
            {
                "_gvid": 1062,
                "tail": 525,
                "head": 70
            },
            {
                "_gvid": 1063,
                "tail": 525,
                "head": 71
            },
            {
                "_gvid": 1064,
                "tail": 525,
                "head": 72
            },
            {
                "_gvid": 1065,
                "tail": 525,
                "head": 73
            },
            {
                "_gvid": 1066,
                "tail": 525,
                "head": 74
            },
            {
                "_gvid": 1067,
                "tail": 525,
                "head": 81
            },
            {
                "_gvid": 1068,
                "tail": 525,
                "head": 82
            },
            {
                "_gvid": 1069,
                "tail": 525,
                "head": 83
            },
            {
                "_gvid": 1070,
                "tail": 525,
                "head": 84
            },
            {
                "_gvid": 1071,
                "tail": 525,
                "head": 85
            },
            {
                "_gvid": 1072,
                "tail": 525,
                "head": 86
            },
            {
                "_gvid": 1073,
                "tail": 525,
                "head": 87
            },
            {
                "_gvid": 1074,
                "tail": 525,
                "head": 88
            },
            {
                "_gvid": 1075,
                "tail": 525,
                "head": 98
            },
            {
                "_gvid": 1076,
                "tail": 525,
                "head": 102
            },
            {
                "_gvid": 1077,
                "tail": 525,
                "head": 103
            },
            {
                "_gvid": 1078,
                "tail": 525,
                "head": 104
            },
            {
                "_gvid": 1079,
                "tail": 526,
                "head": 148
            },
            {
                "_gvid": 1080,
                "tail": 526,
                "head": 507
            },
            {
                "_gvid": 1081,
                "tail": 526,
                "head": 508
            },
            {
                "_gvid": 1082,
                "tail": 526,
                "head": 509
            },
            {
                "_gvid": 1083,
                "tail": 526,
                "head": 510
            },
            {
                "_gvid": 1084,
                "tail": 526,
                "head": 511
            },
            {
                "_gvid": 1085,
                "tail": 526,
                "head": 512
            },
            {
                "_gvid": 1086,
                "tail": 526,
                "head": 513
            },
            {
                "_gvid": 1087,
                "tail": 526,
                "head": 514
            },
            {
                "_gvid": 1088,
                "tail": 526,
                "head": 515
            },
            {
                "_gvid": 1089,
                "tail": 526,
                "head": 516
            },
            {
                "_gvid": 1090,
                "tail": 526,
                "head": 517
            },
            {
                "_gvid": 1091,
                "tail": 526,
                "head": 518
            },
            {
                "_gvid": 1092,
                "tail": 526,
                "head": 519
            },
            {
                "_gvid": 1093,
                "tail": 526,
                "head": 520
            },
            {
                "_gvid": 1094,
                "tail": 526,
                "head": 521
            },
            {
                "_gvid": 1095,
                "tail": 526,
                "head": 522
            },
            {
                "_gvid": 1096,
                "tail": 526,
                "head": 523
            },
            {
                "_gvid": 1097,
                "tail": 526,
                "head": 524
            },
            {
                "_gvid": 1098,
                "tail": 526,
                "head": 525
            }
        ]
    },
    "graphdict": {
        "aws_az.us~east~1a": [
            "module.vpc.aws_subnet.database[0]~1",
            "module.vpc.aws_subnet.elasticache[0]~1",
            "module.vpc.aws_subnet.intra[0]~1",
            "module.vpc.aws_subnet.private[0]~1",
            "module.vpc.aws_subnet.public[0]~1"
        ],
        "aws_az.us~east~1b": [
            "module.vpc.aws_subnet.database[1]~2",
            "module.vpc.aws_subnet.elasticache[1]~2",
            "module.vpc.aws_subnet.intra[1]~2",
            "module.vpc.aws_subnet.private[1]~2",
            "module.vpc.aws_subnet.public[1]~2"
        ],
        "aws_eip.elastic_ip": [
            "aws_internet_gateway.igw"
        ],
        "aws_group.shared_services": [
            "aws_eip.elastic_ip",
            "aws_ssm_parameter.ssmparam"
        ],
        "aws_internet_gateway.igw": [
            "aws_eip.elastic_ip",
            "module.vpc.aws_route.public_internet_gateway[0]~1",
            "tv_aws_internet.internet"
        ],
        "aws_security_group.pipeline_security_group": [
            "aws_security_group_rule.pipeline_security_group",
            "aws_ssm_parameter.ssmparam"
        ],
        "aws_security_group_rule.pipeline_security_group": [],
        "aws_ssm_parameter.ssmparam": [
            "module.vpc.aws_db_subnet_group.database[0]~1",
            "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
            "module.vpc.aws_route_table.intra[0]~1",
            "module.vpc.aws_route_table.private[0]~1",
            "module.vpc.aws_route_table.public[0]~1"
        ],
        "module.vpc.aws_db_subnet_group.database[0]~1": [],
        "module.vpc.aws_default_network_acl.this[0]~1": [],
        "module.vpc.aws_default_route_table.default[0]~1": [],
        "module.vpc.aws_default_security_group.this[0]~1": [],
        "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1": [],
        "module.vpc.aws_nat_gateway.this[0]~1": [
            "aws_eip.elastic_ip",
            "aws_internet_gateway.igw",
            "aws_internet_gateway.igw",
            "module.vpc.aws_route.private_nat_gateway"
        ],
        "module.vpc.aws_nat_gateway.this[1]~2": [
            "aws_internet_gateway.igw",
            "module.vpc.aws_route.private_nat_gateway"
        ],
        "module.vpc.aws_route.private_nat_gateway[0]~1": [
            "module.vpc.aws_nat_gateway.this[0]~1",
            "module.vpc.aws_route_table.private[0]~1"
        ],
        "module.vpc.aws_route.private_nat_gateway[1]~2": [],
        "module.vpc.aws_route.public_internet_gateway[0]~1": [],
        "module.vpc.aws_route_table.intra[0]~1": [
            "module.vpc.aws_route_table_association.intra"
        ],
        "module.vpc.aws_route_table.private[0]~1": [
            "module.vpc.aws_route.private_nat_gateway",
            "module.vpc.aws_route_table_association.database",
            "module.vpc.aws_route_table_association.elasticache",
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_route_table.private[1]~2": [
            "module.vpc.aws_route.private_nat_gateway",
            "module.vpc.aws_route_table_association.database",
            "module.vpc.aws_route_table_association.elasticache",
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_route_table.public[0]~1": [
            "module.vpc.aws_route.public_internet_gateway[0]~1",
            "module.vpc.aws_route_table_association.public"
        ],
        "module.vpc.aws_route_table_association.database[0]~1": [
            "module.vpc.aws_route_table.private[0]~1"
        ],
        "module.vpc.aws_route_table_association.database[1]~2": [],
        "module.vpc.aws_route_table_association.elasticache[0]~1": [
            "module.vpc.aws_route_table.private[0]~1"
        ],
        "module.vpc.aws_route_table_association.elasticache[1]~2": [],
        "module.vpc.aws_route_table_association.intra[0]~1": [
            "module.vpc.aws_route_table.intra[0]~1"
        ],
        "module.vpc.aws_route_table_association.intra[1]~2": [],
        "module.vpc.aws_route_table_association.private[0]~1": [
            "module.vpc.aws_route_table.private[0]~1"
        ],
        "module.vpc.aws_route_table_association.private[1]~2": [],
        "module.vpc.aws_route_table_association.public[0]~1": [
            "module.vpc.aws_route_table.public[0]~1"
        ],
        "module.vpc.aws_route_table_association.public[1]~2": [],
        "module.vpc.aws_subnet.database[0]~1": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_route_table_association.database"
        ],
        "module.vpc.aws_subnet.database[1]~2": [
            "module.vpc.aws_route_table_association.database"
        ],
        "module.vpc.aws_subnet.elasticache[0]~1": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
            "module.vpc.aws_route_table_association.elasticache",
            "module.vpc.aws_route_table_association.elasticache[0]~1"
        ],
        "module.vpc.aws_subnet.elasticache[1]~2": [
            "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
            "module.vpc.aws_route_table_association.elasticache"
        ],
        "module.vpc.aws_subnet.intra[0]~1": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_route_table_association.intra",
            "module.vpc.aws_route_table_association.intra[0]~1"
        ],
        "module.vpc.aws_subnet.intra[1]~2": [
            "module.vpc.aws_route_table_association.intra"
        ],
        "module.vpc.aws_subnet.private[0]~1": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_route_table_association.private",
            "module.vpc.aws_route_table_association.private[0]~1"
        ],
        "module.vpc.aws_subnet.private[1]~2": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_subnet.public[0]~1": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_nat_gateway.this[0]~1",
            "module.vpc.aws_route_table_association.public",
            "module.vpc.aws_route_table_association.public[0]~1"
        ],
        "module.vpc.aws_subnet.public[1]~2": [
            "aws_security_group.pipeline_security_group",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table_association.public"
        ],
        "module.vpc.aws_vpc.this[0]~1": [
            "aws_az.us~east~1a",
            "aws_az.us~east~1b",
            "aws_internet_gateway.igw",
            "aws_ssm_parameter.ssmparam",
            "module.vpc.aws_db_subnet_group.database[0]~1",
            "module.vpc.aws_default_network_acl.this[0]~1",
            "module.vpc.aws_default_route_table.default[0]~1",
            "module.vpc.aws_default_security_group.this[0]~1",
            "module.vpc.aws_route_table.intra[0]~1",
            "module.vpc.aws_route_table.private[0]~1",
            "module.vpc.aws_route_table.public[0]~1"
        ],
        "tv_aws_internet.internet": []
    },
    "meta_data": {
        "aws_security_group.pipeline_security_group": {
            "description": "\"\" -terraform.workspace   Security group used by pipelines that run terraform",
            "name": "\"\" -terraform.workspace  -pipeline",
            "revoke_rules_on_delete": "False",
            "tags": "{'Name': 'Allow pipeline access to \"\" -terraform.workspace  '}",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "egress": "[]",
            "id": "True",
            "ingress": "[]",
            "name_prefix": "True",
            "owner_id": "True",
            "vpc_id": "${try(aws_vpc.this[0].id, None)} ",
            "module": "main"
        },
        "aws_security_group_rule.pipeline_security_group": {
            "cidr_blocks": "['0.0.0.0/0']",
            "description": "None",
            "from_port": "0",
            "ipv6_cidr_blocks": "None",
            "prefix_list_ids": "None",
            "protocol": "${-1}",
            "self": "False",
            "timeouts": "None",
            "to_port": "0",
            "type": "egress",
            "id": "True",
            "security_group_id": "${aws_security_group.pipeline_security_group.id}",
            "security_group_rule_id": "True",
            "source_security_group_id": "True",
            "module": "main"
        },
        "aws_ssm_parameter.pipeline_security_group": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /pipeline_security_group",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "String",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "${aws_security_group.pipeline_security_group.id}",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.vpc_id": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /vpc_id",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "String",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "${try(aws_vpc.this[0].id, None)} ",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.private_subnets": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /private_subnets",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_subnet.private[*].id}) \\\"",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.public_subnets": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /public_subnets",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_subnet.public[*].id}) \\\"",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.intra_subnets[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /intra_subnets",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_subnet.intra[*].id}) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(module.vpc.intra_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.database_subnets[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /database_subnets",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_subnet.database[*].id}) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.database_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.database_subnet_group[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /database_subnet_group",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "String",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "${try(aws_db_subnet_group.database[0].id, None)} ",
            "key_id": "True",
            "tier": "True",
            "value": "True",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.database_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.elasticache_subnets[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /elasticache_subnets",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_subnet.elasticache[*].id}) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.elasticache_subnet_group[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /elasticache_subnet_group",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "String",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "${try(aws_elasticache_subnet_group.elasticache[0].id, None)} ",
            "key_id": "True",
            "tier": "True",
            "value": "True",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.private_subnet_cidrs": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /private_subnet_cidrs",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", ${compact(aws_subnet.private[*].cidr_block)}) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.public_subnet_cidrs": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /public_subnet_cidrs",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", ${compact(aws_subnet.public[*].cidr_block)}) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.database_subnet_cidrs[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /database_subnet_cidrs",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", ${compact(aws_subnet.database[*].cidr_block)}) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.database_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.elasticache_subnet_cidrs[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /elasticache_subnet_cidrs",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", ${compact(aws_subnet.elasticache[*].cidr_block)}) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.intra_subnet_cidrs[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /intra_subnet_cidrs",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", ${compact(aws_subnet.intra[*].cidr_block)}) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.intra_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.private_subnet_names": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /private_subnet_names",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", []) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.public_subnet_names": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /public_subnet_names",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", []) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.database_subnet_names": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /database_subnet_names",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", []) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.elasticache_subnet_names": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /elasticache_subnet_names",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", []) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.intra_subnet_names": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /intra_subnet_names",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "value": "\\\"join(\"\\\",\\\"\", []) \\\"",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "version": "True",
            "module": "main"
        },
        "aws_ssm_parameter.intra_route_table_ids[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /intra_route_table_ids",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_route_table.intra[*].id}) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.intra_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.private_route_table_ids[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /private_route_table_ids",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_route_table.private[*].id} ) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.private_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.public_route_table_ids[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /public_route_table_ids",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${aws_route_table.public[*].id} ) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.public_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.database_route_table_ids[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /database_route_table_ids",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", ${length(aws_route_table.database[*].id) > 0 ? aws_route_table.database[*].id : aws_route_table.private[*].id}) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.database_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_ssm_parameter.elasticache_route_table_ids[0]~1": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /elasticache_route_table_ids",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "StringList",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "\\\"join(\"\\\",\\\"\", try(coalescelist(aws_route_table.elasticache[*].id, ${aws_route_table.private[*].id}), []) ) \\\"",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "module.vpc.aws_vpc.this[0]~1": {
            "assign_generated_ipv6_cidr_block": "\"False\" && !\"False\" ? True : None ",
            "cidr_block": "\"False\" ? None : \"\"10.156.0.0/16\" \" ",
            "enable_dns_hostnames": "\"True\" ",
            "enable_dns_support": "\"True\" ",
            "instance_tenancy": "\"default\" ",
            "ipv4_ipam_pool_id": "\"None\" ",
            "ipv4_netmask_length": "\"None\" ",
            "ipv6_ipam_pool_id": "\"None\" ",
            "ipv6_netmask_length": "\"None\" ",
            "tags": "merge({'Name': '\" -terraform.workspace  \" '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "arn": "True",
            "default_network_acl_id": "True",
            "default_route_table_id": "True",
            "default_security_group_id": "True",
            "dhcp_options_id": "True",
            "enable_network_address_usage_metrics": "\"None\" ",
            "id": "True",
            "ipv6_association_id": "True",
            "ipv6_cidr_block": "\"None\" ",
            "ipv6_cidr_block_network_border_group": "\"None\" ",
            "main_route_table_id": "True",
            "owner_id": "True",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_vpc ? 1 : 0}"
        },
        "module.vpc.aws_subnet.public[0]~1": {
            "assign_ipv6_address_on_creation": "\"False\" && \"False\" ? True : \"False\" ",
            "availability_zone": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) > 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "cidr_block": "\"False\" ? None : element(concat(\"${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? [for i in range(${local.public_subnets}  == None ? ${[for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? [for i in range(var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? \"[for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3'] \" : length(var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : local.public_subnets    \", ['']), count.index) ",
            "customer_owned_ipv4_pool": "None",
            "enable_dns64": "\"False\" && \"True\" ",
            "enable_lni_at_device_index": "None",
            "enable_resource_name_dns_a_record_on_launch": "!\"False\" && \"False\" ",
            "enable_resource_name_dns_aaaa_record_on_launch": "\"False\" && \"True\" ",
            "ipv6_cidr_block": "\"False\" && length([] ) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, [][count.index]) : None ",
            "ipv6_native": "\"False\" && \"False\" ",
            "map_customer_owned_ip_on_launch": "None",
            "map_public_ip_on_launch": "\"False\" ",
            "outpost_arn": "None",
            "tags": "merge({'Name': 'try(\"UNKNOWN\"[count.index], format(\"\" -terraform.workspace  \" -\"public\" -%s\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , {'kubernetes.io/role/elb': '1'} , lookup(\"{}\", element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index), {})) ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "availability_zone_id": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) == 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "id": "True",
            "ipv6_cidr_block_association_id": "True",
            "owner_id": "True",
            "private_dns_hostname_type_on_launch": "\"None\" ",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_public_subnets && !var.one_nat_gateway_per_az || local.len_public_subnets >= length(var.azs) ? local.len_public_subnets : 0}"
        },
        "module.vpc.aws_route_table.public[0]~1": {
            "tags": "merge({'Name': '\"False\" ? format(\" -terraform.workspace    -\"public\"  -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", count.index)) : \" -terraform.workspace    -\"public\" \" '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "id": "True",
            "owner_id": "True",
            "propagating_vgws": "[]",
            "route": "[]",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_public_subnets ? local.num_public_route_tables : 0}"
        },
        "module.vpc.aws_route_table_association.public[0]~1": {
            "gateway_id": "None",
            "timeouts": "None",
            "id": "True",
            "route_table_id": "element(aws_route_table.public[*].id, \"False\" ? count.index : 0) ",
            "subnet_id": "${element(aws_subnet.public[*].id, count.index)}",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_public_subnets ? local.len_public_subnets : 0}"
        },
        "module.vpc.aws_route.public_internet_gateway[0]~1": {
            "carrier_gateway_id": "None",
            "core_network_arn": "None",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "None",
            "destination_prefix_list_id": "None",
            "egress_only_gateway_id": "None",
            "local_gateway_id": "None",
            "nat_gateway_id": "None",
            "timeouts": "[{'create': '5m'}]",
            "transit_gateway_id": "None",
            "vpc_endpoint_id": "None",
            "vpc_peering_connection_id": "None",
            "gateway_id": "${aws_internet_gateway.this[0].id}",
            "id": "True",
            "instance_id": "True",
            "instance_owner_id": "True",
            "network_interface_id": "True",
            "origin": "True",
            "route_table_id": "${aws_route_table.public[0].id}",
            "state": "True",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_public_subnets && var.create_igw ? 1 : 0}"
        },
        "module.vpc.aws_route.private_nat_gateway[0]~1": {
            "carrier_gateway_id": "None",
            "core_network_arn": "None",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "64:ff9b::/96",
            "destination_prefix_list_id": "None",
            "egress_only_gateway_id": "None",
            "gateway_id": "None",
            "local_gateway_id": "None",
            "timeouts": "[{'create': '5m'}]",
            "transit_gateway_id": "None",
            "vpc_endpoint_id": "None",
            "vpc_peering_connection_id": "None",
            "id": "True",
            "instance_id": "True",
            "instance_owner_id": "True",
            "nat_gateway_id": "${element(aws_nat_gateway.this[*].id, count.index)}",
            "network_interface_id": "True",
            "origin": "True",
            "route_table_id": "${element(aws_route_table.private[*].id, count.index)}",
            "state": "True",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_vpc && var.enable_nat_gateway && var.enable_ipv6 && var.private_subnet_enable_dns64 ? local.nat_gateway_count : 0}"
        },
        "module.vpc.aws_subnet.private[0]~1": {
            "assign_ipv6_address_on_creation": "\"False\" && \"False\" ? True : \"False\" ",
            "availability_zone": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) > 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "cidr_block": "\"False\" ? None : element(concat(\"${${var.private_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 1), 2, i)] : var.private_subnets}}  == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 1), 2, i)] : var.private_subnets    == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 1), 2, i)] : var.private_subnets    == None ? [for i in range(var.public_subnets == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? \"[for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3'] \" : length(var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 1), 2, i)] : local.private_subnets    \", ['']), count.index) ",
            "customer_owned_ipv4_pool": "None",
            "enable_dns64": "\"False\" && \"True\" ",
            "enable_lni_at_device_index": "None",
            "enable_resource_name_dns_a_record_on_launch": "!\"False\" && \"False\" ",
            "enable_resource_name_dns_aaaa_record_on_launch": "\"False\" && \"True\" ",
            "ipv6_cidr_block": "\"False\" && length([] ) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, [][count.index]) : None ",
            "ipv6_native": "\"False\" && \"False\" ",
            "map_customer_owned_ip_on_launch": "None",
            "map_public_ip_on_launch": "False",
            "outpost_arn": "None",
            "tags": "merge({'Name': 'try(\"UNKNOWN\"[count.index], format(\"\" -terraform.workspace  \" -\"private\" -%s\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , {'kubernetes.io/role/internal-elb': '1'} , lookup(\"{}\", element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index), {})) ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "availability_zone_id": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) == 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "id": "True",
            "ipv6_cidr_block_association_id": "True",
            "owner_id": "True",
            "private_dns_hostname_type_on_launch": "\"None\" ",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_private_subnets ? local.len_private_subnets : 0}"
        },
        "module.vpc.aws_route_table.private[0]~1": {
            "tags": "merge({'Name': '\"\"UNKNOWN\" ? False : True \" ? \" -terraform.workspace    -\"private\"  \" : format(\" -terraform.workspace    -\"private\" -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", count.index)) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "id": "True",
            "owner_id": "True",
            "propagating_vgws": "[]",
            "route": "[]",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_private_subnets && local.max_subnet_length > 0 ? local.nat_gateway_count : 0}"
        },
        "module.vpc.aws_route_table_association.private[0]~1": {
            "gateway_id": "None",
            "timeouts": "None",
            "id": "True",
            "route_table_id": "element(aws_route_table.private[*].id, \"\"UNKNOWN\" ? False : True \" ? 0 : count.index) ",
            "subnet_id": "${element(aws_subnet.private[*].id, count.index)}",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_private_subnets ? local.len_private_subnets : 0}"
        },
        "module.vpc.aws_subnet.database[0]~1": {
            "assign_ipv6_address_on_creation": "\"False\" && \"False\" ? True : \"False\" ",
            "availability_zone": "\"None\" ",
            "cidr_block": "\"False\" ? None : element(concat([], ['']), count.index) ",
            "customer_owned_ipv4_pool": "\"None\" ",
            "enable_dns64": "\"False\" && \"True\" ",
            "enable_lni_at_device_index": "None",
            "enable_resource_name_dns_a_record_on_launch": "!\"False\" && \"False\" ",
            "enable_resource_name_dns_aaaa_record_on_launch": "\"False\" && \"True\" ",
            "ipv6_cidr_block": "\"False\" && length([] ) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, [][count.index]) : None ",
            "ipv6_native": "\"False\" && \"False\" ",
            "map_customer_owned_ip_on_launch": "\"False\" ",
            "map_public_ip_on_launch": "False",
            "outpost_arn": "\"None\" ",
            "tags": "merge({'Name': 'try([][count.index], format(\"\" -terraform.workspace  \" -\"outpost\" -%s\", \"None\")) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "availability_zone_id": "True",
            "id": "True",
            "ipv6_cidr_block_association_id": "True",
            "owner_id": "True",
            "private_dns_hostname_type_on_launch": "\"None\" ",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_outpost_subnets ? local.len_outpost_subnets : 0}"
        },
        "module.vpc.aws_db_subnet_group.database[0]~1": {
            "description": "Database subnet group for \" -terraform.workspace  \" ",
            "name": "lower(coalesce(\"None\", \" -terraform.workspace  \")) ",
            "tags": "merge({'Name': 'lower(coalesce(\"None\", \" -terraform.workspace  \")) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "arn": "True",
            "id": "True",
            "name_prefix": "True",
            "subnet_ids": "${aws_subnet.database[*].id}",
            "supported_network_types": "[]",
            "vpc_id": "True",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_database_subnets && var.create_database_subnet_group ? 1 : 0}"
        },
        "module.vpc.aws_route_table.intra[0]~1": {
            "tags": "merge({'Name': '\"False\" ? format(\" -terraform.workspace    -\"intra\"  -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", count.index)) : \" -terraform.workspace    -\"intra\" \" '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "id": "True",
            "owner_id": "True",
            "propagating_vgws": "[]",
            "route": "[]",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_intra_subnets ? local.num_intra_route_tables : 0}"
        },
        "module.vpc.aws_route_table_association.database[0]~1": {
            "gateway_id": "None",
            "timeouts": "None",
            "id": "True",
            "route_table_id": "element(aws_route_table.private[*].id, \"\"UNKNOWN\" ? False : True \" ? 0 : count.index) ",
            "subnet_id": "${element(aws_subnet.outpost[*].id, count.index)}",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_outpost_subnets ? local.len_outpost_subnets : 0}"
        },
        "module.vpc.aws_subnet.elasticache[0]~1": {
            "assign_ipv6_address_on_creation": "\"False\" && \"False\" ? True : \"False\" ",
            "availability_zone": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) > 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "cidr_block": "\"False\" ? None : element(concat(\"${${var.elasticache_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 3), 1, 0), 2, i)] : var.elasticache_subnets}}  == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 3), 1, 0), 2, i)] : var.elasticache_subnets    == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 3), 1, 0), 2, i)] : var.elasticache_subnets    == None ? [for i in range(var.public_subnets == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? \"[for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3'] \" : length(var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 3), 1, 0), 2, i)] : local.elasticache_subnets    \", ['']), count.index) ",
            "customer_owned_ipv4_pool": "None",
            "enable_dns64": "\"False\" && \"True\" ",
            "enable_lni_at_device_index": "None",
            "enable_resource_name_dns_a_record_on_launch": "!\"False\" && \"False\" ",
            "enable_resource_name_dns_aaaa_record_on_launch": "\"False\" && \"True\" ",
            "ipv6_cidr_block": "\"False\" && length([] ) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, [][count.index]) : None ",
            "ipv6_native": "\"False\" && \"False\" ",
            "map_customer_owned_ip_on_launch": "None",
            "map_public_ip_on_launch": "False",
            "outpost_arn": "None",
            "tags": "merge({'Name': 'try(\"UNKNOWN\"[count.index], format(\"\" -terraform.workspace  \" -\"elasticache\" -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", count.index))) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "availability_zone_id": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) == 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "id": "True",
            "ipv6_cidr_block_association_id": "True",
            "owner_id": "True",
            "private_dns_hostname_type_on_launch": "\"None\" ",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_elasticache_subnets ? local.len_elasticache_subnets : 0}"
        },
        "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1": {
            "description": "ElastiCache subnet group for \" -terraform.workspace  \" ",
            "name": "coalesce(\"None\", \" -terraform.workspace  \") ",
            "tags": "merge({'Name': 'coalesce(\"None\", \" -terraform.workspace  \") '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "arn": "True",
            "id": "True",
            "subnet_ids": "${aws_subnet.elasticache[*].id}",
            "vpc_id": "True",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_elasticache_subnets && var.create_elasticache_subnet_group ? 1 : 0}"
        },
        "module.vpc.aws_route_table_association.elasticache[0]~1": {
            "gateway_id": "None",
            "timeouts": "None",
            "id": "True",
            "route_table_id": "element(coalescelist(aws_route_table.elasticache[*].id, aws_route_table.private[*].id), \"\"UNKNOWN\" ? False : True \" || \"False\" ? 0 : count.index) ",
            "subnet_id": "${element(aws_subnet.elasticache[*].id, count.index)}",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_elasticache_subnets ? local.len_elasticache_subnets : 0}"
        },
        "module.vpc.aws_subnet.intra[0]~1": {
            "assign_ipv6_address_on_creation": "\"False\" && \"False\" ? True : \"False\" ",
            "availability_zone": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) > 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "cidr_block": "\"False\" ? None : element(concat(\"${${var.intra_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 1), 2, i)] : var.intra_subnets}}  == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 1), 2, i)] : var.intra_subnets    == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 1), 2, i)] : var.intra_subnets    == None ? [for i in range(var.public_subnets == None ? [for i in range(var.public_subnets == None ? var.azs : length(var.public_subnets) ) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets    == None ? \"[for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3'] \" : length(var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 1), 2, i)] : local.intra_subnets    \", ['']), count.index) ",
            "customer_owned_ipv4_pool": "None",
            "enable_dns64": "\"False\" && \"True\" ",
            "enable_lni_at_device_index": "None",
            "enable_resource_name_dns_a_record_on_launch": "!\"False\" && \"False\" ",
            "enable_resource_name_dns_aaaa_record_on_launch": "\"False\" && \"True\" ",
            "ipv6_cidr_block": "\"False\" && length([] ) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, [][count.index]) : None ",
            "ipv6_native": "\"False\" && \"False\" ",
            "map_customer_owned_ip_on_launch": "None",
            "map_public_ip_on_launch": "False",
            "outpost_arn": "None",
            "tags": "merge({'Name': 'try(\"UNKNOWN\"[count.index], format(\"\" -terraform.workspace  \" -\"intra\" -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", count.index))) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "availability_zone_id": "length(regexall(\"^[a-z]{2}-\", element([for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index))) == 0 ? element([for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(local.azs) : ['AZ1', 'AZ2', 'AZ3']   : length(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}  ) ) : ['AZ1', 'AZ2', 'AZ3']  , count.index) : None ",
            "id": "True",
            "ipv6_cidr_block_association_id": "True",
            "owner_id": "True",
            "private_dns_hostname_type_on_launch": "\"None\" ",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_intra_subnets ? local.len_intra_subnets : 0}"
        },
        "module.vpc.aws_route_table_association.intra[0]~1": {
            "gateway_id": "None",
            "timeouts": "None",
            "id": "True",
            "route_table_id": "element(aws_route_table.intra[*].id, \"False\" ? count.index : 0) ",
            "subnet_id": "${element(aws_subnet.intra[*].id, count.index)}",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_intra_subnets ? local.len_intra_subnets : 0}"
        },
        "module.vpc.aws_internet_gateway.this[0]~1": {
            "tags": "merge({'Name': '\" -terraform.workspace  \" '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "arn": "True",
            "id": "True",
            "owner_id": "True",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")} ",
            "module": "vpc",
            "count": "1",
            "original_count": "${local.create_public_subnets && var.create_igw ? 1 : 0}"
        },
        "module.vpc.aws_eip.nat[0]~1": {
            "address": "None",
            "associate_with_private_ip": "None",
            "customer_owned_ipv4_pool": "None",
            "domain": "vpc",
            "tags": "merge({'Name': 'format(\"\" -terraform.workspace  \" -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", \"\"UNKNOWN\" ? False : True \" ? 0 : count.index)) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "allocation_id": "True",
            "association_id": "True",
            "carrier_ip": "True",
            "customer_owned_ip": "True",
            "id": "True",
            "instance": "True",
            "network_border_group": "True",
            "network_interface": "True",
            "private_dns": "True",
            "private_ip": "True",
            "ptr_record": "True",
            "public_dns": "True",
            "public_ip": "True",
            "public_ipv4_pool": "True",
            "vpc": "True",
            "module": "vpc",
            "count": "1",
            "depends_on": "['${aws_internet_gateway.this}']",
            "original_count": "${local.create_vpc && var.enable_nat_gateway && !var.reuse_nat_ips ? local.nat_gateway_count : 0}"
        },
        "module.vpc.aws_nat_gateway.this[0]~1": {
            "connectivity_type": "public",
            "secondary_allocation_ids": "None",
            "tags": "merge({'Name': 'format(\"\" -terraform.workspace  \" -%s\", element(\"[for i in range(${var.public_subnets == None ? [for i in range(${var.public_subnets == None ? var.azs : length(var.public_subnets)}) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}   == None ? [for i in range(${${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3']   : length(local.public_subnets  ) ) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : ${local.public_subnets}     == None ? \"[for i in range(${local.public_subnets}  == None ? ${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}  : length(${local.public_subnets} ) ) : ['AZ1', 'AZ2', 'AZ3'] \" : length(${local.public_subnets}  == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(\"10.156.0.0/16\", 2, 0), 1, 0), 2, i)] : var.public_subnets   ) ) : ['AZ1', 'AZ2', 'AZ3'] \", \"\"UNKNOWN\" ? False : True \" ? 0 : count.index)) '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "None",
            "allocation_id": "element(\"False\" ? [] : aws_eip.nat[*].id , \"\"UNKNOWN\" ? False : True \" ? 0 : count.index) ",
            "association_id": "True",
            "id": "True",
            "network_interface_id": "True",
            "private_ip": "True",
            "public_ip": "True",
            "secondary_private_ip_address_count": "True",
            "secondary_private_ip_addresses": "[]",
            "subnet_id": "element(aws_subnet.public[*].id, \"\"UNKNOWN\" ? False : True \" ? 0 : count.index) ",
            "module": "vpc",
            "count": "1",
            "depends_on": "['${aws_internet_gateway.this}']",
            "original_count": "${local.create_vpc && var.enable_nat_gateway ? local.nat_gateway_count : 0}"
        },
        "module.vpc.aws_default_security_group.this[0]~1": {
            "revoke_rules_on_delete": "False",
            "tags": "merge({'Name': 'coalesce(\"None\", \"\" -terraform.workspace  \" -default\") '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "arn": "True",
            "description": "True",
            "egress": "[]",
            "id": "True",
            "ingress": "[]",
            "name": "True",
            "name_prefix": "True",
            "owner_id": "True",
            "vpc_id": "${aws_vpc.this[0].id}",
            "module": "vpc",
            "count": "1",
            "dynamic": "[{'ingress': {'for_each': '${var.default_security_group_ingress}', 'content': [{'self': '${lookup(ingress.value, \"self\", None)}', 'cidr_blocks': '${compact(split(\",\", lookup(ingress.value, \"cidr_blocks\", \"\")))}', 'ipv6_cidr_blocks': '${compact(split(\",\", lookup(ingress.value, \"ipv6_cidr_blocks\", \"\")))}', 'prefix_list_ids': '${compact(split(\",\", lookup(ingress.value, \"prefix_list_ids\", \"\")))}', 'security_groups': '${compact(split(\",\", lookup(ingress.value, \"security_groups\", \"\")))}', 'description': '${lookup(ingress.value, \"description\", None)}', 'from_port': '${lookup(ingress.value, \"from_port\", 0)}', 'to_port': '${lookup(ingress.value, \"to_port\", 0)}', 'protocol': '${lookup(ingress.value, \"protocol\", \"-1\")}'}]}}, {'egress': {'for_each': '${var.default_security_group_egress}', 'content': [{'self': '${lookup(egress.value, \"self\", None)}', 'cidr_blocks': '${compact(split(\",\", lookup(egress.value, \"cidr_blocks\", \"\")))}', 'ipv6_cidr_blocks': '${compact(split(\",\", lookup(egress.value, \"ipv6_cidr_blocks\", \"\")))}', 'prefix_list_ids': '${compact(split(\",\", lookup(egress.value, \"prefix_list_ids\", \"\")))}', 'security_groups': '${compact(split(\",\", lookup(egress.value, \"security_groups\", \"\")))}', 'description': '${lookup(egress.value, \"description\", None)}', 'from_port': '${lookup(egress.value, \"from_port\", 0)}', 'to_port': '${lookup(egress.value, \"to_port\", 0)}', 'protocol': '${lookup(egress.value, \"protocol\", \"-1\")}'}]}}]",
            "original_count": "${local.create_vpc && var.manage_default_security_group ? 1 : 0}"
        },
        "module.vpc.aws_default_network_acl.this[0]~1": {
            "egress": "[{}, {}]",
            "ingress": "[{}, {}]",
            "subnet_ids": "None",
            "tags": "merge({'Name': 'coalesce(\"None\", \"\" -terraform.workspace  \" -default\") '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "arn": "True",
            "default_network_acl_id": "${aws_vpc.this[0].default_network_acl_id}",
            "id": "True",
            "owner_id": "True",
            "vpc_id": "True",
            "module": "vpc",
            "count": "1",
            "dynamic": "[{'ingress': {'for_each': '${var.default_network_acl_ingress}', 'content': [{'action': '${ingress.value.action}', 'cidr_block': '${lookup(ingress.value, \"cidr_block\", None)}', 'from_port': '${ingress.value.from_port}', 'icmp_code': '${lookup(ingress.value, \"icmp_code\", None)}', 'icmp_type': '${lookup(ingress.value, \"icmp_type\", None)}', 'ipv6_cidr_block': '${lookup(ingress.value, \"ipv6_cidr_block\", None)}', 'protocol': '${ingress.value.protocol}', 'rule_no': '${ingress.value.rule_no}', 'to_port': '${ingress.value.to_port}'}]}}, {'egress': {'for_each': '${var.default_network_acl_egress}', 'content': [{'action': '${egress.value.action}', 'cidr_block': '${lookup(egress.value, \"cidr_block\", None)}', 'from_port': '${egress.value.from_port}', 'icmp_code': '${lookup(egress.value, \"icmp_code\", None)}', 'icmp_type': '${lookup(egress.value, \"icmp_type\", None)}', 'ipv6_cidr_block': '${lookup(egress.value, \"ipv6_cidr_block\", None)}', 'protocol': '${egress.value.protocol}', 'rule_no': '${egress.value.rule_no}', 'to_port': '${egress.value.to_port}'}]}}]",
            "lifecycle": "[{'ignore_changes': ['${subnet_ids}']}]",
            "original_count": "${local.create_vpc && var.manage_default_network_acl ? 1 : 0}"
        },
        "module.vpc.aws_default_route_table.default[0]~1": {
            "propagating_vgws": "[] ",
            "tags": "merge({'Name': 'coalesce(\"None\", \"\" -terraform.workspace  \" -default\") '}, {'Terraform': 'true', 'Prefix': ' ', 'Workspace': 'terraform.workspace '} , \"{}\") ",
            "tags_all": "{}",
            "timeouts": "[{'create': '5m', 'update': '5m'}]",
            "arn": "True",
            "default_route_table_id": "${aws_vpc.this[0].default_route_table_id}",
            "id": "True",
            "owner_id": "True",
            "route": "[]",
            "vpc_id": "True",
            "module": "vpc",
            "count": "1",
            "dynamic": "[{'route': {'for_each': '[] ', 'content': [{'cidr_block': 'route.value.cidr_block ', 'ipv6_cidr_block': 'lookup(route.value, \"ipv6_cidr_block\", None) ', 'egress_only_gateway_id': 'lookup(route.value, \"egress_only_gateway_id\", None) ', 'gateway_id': 'lookup(route.value, \"gateway_id\", None) ', 'instance_id': 'lookup(route.value, \"instance_id\", None) ', 'nat_gateway_id': 'lookup(route.value, \"nat_gateway_id\", None) ', 'network_interface_id': 'lookup(route.value, \"network_interface_id\", None) ', 'transit_gateway_id': 'lookup(route.value, \"transit_gateway_id\", None) ', 'vpc_endpoint_id': 'lookup(route.value, \"vpc_endpoint_id\", None) ', 'vpc_peering_connection_id': 'lookup(route.value, \"vpc_peering_connection_id\", None) '}]}}]",
            "original_count": "${local.create_vpc && var.manage_default_route_table ? 1 : 0}"
        },
        "module.vpc.aws_eip.nat[1]~2": {
            "address": null,
            "associate_with_private_ip": null,
            "customer_owned_ipv4_pool": null,
            "domain": "vpc",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "carrier_ip": true,
            "customer_owned_ip": true,
            "id": true,
            "instance": true,
            "network_border_group": true,
            "network_interface": true,
            "private_dns": true,
            "private_ip": true,
            "ptr_record": true,
            "public_dns": true,
            "public_ip": true,
            "public_ipv4_pool": true,
            "vpc": true,
            "module": "vpc"
        },
        "module.vpc.aws_nat_gateway.this[1]~2": {
            "connectivity_type": "public",
            "secondary_allocation_ids": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "id": true,
            "network_interface_id": true,
            "private_ip": true,
            "public_ip": true,
            "secondary_private_ip_address_count": true,
            "secondary_private_ip_addresses": [],
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route.private_nat_gateway[1]~2": {
            "carrier_gateway_id": null,
            "core_network_arn": null,
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "gateway_id": null,
            "local_gateway_id": null,
            "timeouts": {},
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
            "id": true,
            "instance_id": true,
            "instance_owner_id": true,
            "nat_gateway_id": true,
            "network_interface_id": true,
            "origin": true,
            "route_table_id": true,
            "state": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table.private[1]~2": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "propagating_vgws": [],
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.database[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.elasticache[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.intra[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.private[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.public[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.database[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.144.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.elasticache[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.200.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.intra[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.40.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.private[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.80.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.public[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.8.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "aws_ssm_parameter.ssmparam": {
            "allowed_pattern": "None",
            "description": "None",
            "name": "/entigo-infralib/\"\" -terraform.workspace  /vpc_id",
            "overwrite": "None",
            "tags": "{'Terraform': 'true', 'Prefix': '\"\" ', 'Workspace': 'terraform.workspace '}",
            "tags_all": "{}",
            "type": "String",
            "arn": "True",
            "data_type": "True",
            "id": "True",
            "insecure_value": "True",
            "key_id": "True",
            "tier": "True",
            "value": "${try(aws_vpc.this[0].id, None)} ",
            "version": "True",
            "count": "1",
            "original_count": "${length(local.public_subnets) > 0 ? 1 : 0}",
            "module": "main"
        },
        "aws_eip.elastic_ip": {
            "address": null,
            "associate_with_private_ip": null,
            "customer_owned_ipv4_pool": null,
            "domain": "vpc",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "carrier_ip": true,
            "customer_owned_ip": true,
            "id": true,
            "instance": true,
            "network_border_group": true,
            "network_interface": true,
            "private_dns": true,
            "private_ip": true,
            "ptr_record": true,
            "public_dns": true,
            "public_ip": true,
            "public_ipv4_pool": true,
            "vpc": true,
            "module": "vpc",
            "count": "1",
            "depends_on": "['${aws_internet_gateway.this}']",
            "original_count": "${local.create_vpc && var.enable_nat_gateway && !var.reuse_nat_ips ? local.nat_gateway_count : 0}"
        },
        "aws_internet_gateway.igw": {},
        "tv_aws_internet.internet": {},
        "aws_az.us~east~1a": {
            "count": "1"
        },
        "aws_az.us~east~1b": {
            "count": null
        },
        "aws_group.shared_services": {}
    },
    "all_output": {
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/outputs.tf": [
            {
                "vpc_id": {
                    "value": "${module.vpc.vpc_id}"
                }
            },
            {
                "private_subnets": {
                    "value": "${module.vpc.private_subnets}"
                }
            },
            {
                "public_subnets": {
                    "value": "${module.vpc.public_subnets}"
                }
            },
            {
                "intra_subnets": {
                    "value": "${module.vpc.intra_subnets}"
                }
            },
            {
                "database_subnets": {
                    "value": "${module.vpc.database_subnets}"
                }
            },
            {
                "database_subnet_group": {
                    "value": "${module.vpc.database_subnet_group}"
                }
            },
            {
                "elasticache_subnets": {
                    "value": "${module.vpc.elasticache_subnets}"
                }
            },
            {
                "elasticache_subnet_group": {
                    "value": "${module.vpc.elasticache_subnet_group}"
                }
            },
            {
                "private_subnet_cidrs": {
                    "value": "${module.vpc.private_subnets_cidr_blocks}"
                }
            },
            {
                "public_subnet_cidrs": {
                    "value": "${module.vpc.public_subnets_cidr_blocks}"
                }
            },
            {
                "database_subnet_cidrs": {
                    "value": "${module.vpc.database_subnets_cidr_blocks}"
                }
            },
            {
                "elasticache_subnet_cidrs": {
                    "value": "${module.vpc.elasticache_subnets_cidr_blocks}"
                }
            },
            {
                "intra_subnet_cidrs": {
                    "value": "${module.vpc.intra_subnets_cidr_blocks}"
                }
            },
            {
                "intra_route_table_ids": {
                    "value": "${module.vpc.intra_route_table_ids}"
                }
            },
            {
                "private_route_table_ids": {
                    "value": "${module.vpc.private_route_table_ids}"
                }
            },
            {
                "public_route_table_ids": {
                    "value": "${module.vpc.public_route_table_ids}"
                }
            },
            {
                "database_route_table_ids": {
                    "value": "${module.vpc.database_route_table_ids}"
                }
            },
            {
                "elasticache_route_table_ids": {
                    "value": "${module.vpc.elasticache_route_table_ids}"
                }
            }
        ],
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/outputs.tf": [
            {
                "vpc_id": {
                    "description": "The ID of the VPC",
                    "value": "${try(aws_vpc.this[0].id, None)}"
                }
            },
            {
                "vpc_arn": {
                    "description": "The ARN of the VPC",
                    "value": "${try(aws_vpc.this[0].arn, None)}"
                }
            },
            {
                "vpc_cidr_block": {
                    "description": "The CIDR block of the VPC",
                    "value": "${try(aws_vpc.this[0].cidr_block, None)}"
                }
            },
            {
                "default_security_group_id": {
                    "description": "The ID of the security group created by default on VPC creation",
                    "value": "${try(aws_vpc.this[0].default_security_group_id, None)}"
                }
            },
            {
                "default_network_acl_id": {
                    "description": "The ID of the default network ACL",
                    "value": "${try(aws_vpc.this[0].default_network_acl_id, None)}"
                }
            },
            {
                "default_route_table_id": {
                    "description": "The ID of the default route table",
                    "value": "${try(aws_vpc.this[0].default_route_table_id, None)}"
                }
            },
            {
                "vpc_instance_tenancy": {
                    "description": "Tenancy of instances spin up within VPC",
                    "value": "${try(aws_vpc.this[0].instance_tenancy, None)}"
                }
            },
            {
                "vpc_enable_dns_support": {
                    "description": "Whether or not the VPC has DNS support",
                    "value": "${try(aws_vpc.this[0].enable_dns_support, None)}"
                }
            },
            {
                "vpc_enable_dns_hostnames": {
                    "description": "Whether or not the VPC has DNS hostname support",
                    "value": "${try(aws_vpc.this[0].enable_dns_hostnames, None)}"
                }
            },
            {
                "vpc_main_route_table_id": {
                    "description": "The ID of the main route table associated with this VPC",
                    "value": "${try(aws_vpc.this[0].main_route_table_id, None)}"
                }
            },
            {
                "vpc_ipv6_association_id": {
                    "description": "The association ID for the IPv6 CIDR block",
                    "value": "${try(aws_vpc.this[0].ipv6_association_id, None)}"
                }
            },
            {
                "vpc_ipv6_cidr_block": {
                    "description": "The IPv6 CIDR block",
                    "value": "${try(aws_vpc.this[0].ipv6_cidr_block, None)}"
                }
            },
            {
                "vpc_secondary_cidr_blocks": {
                    "description": "List of secondary CIDR blocks of the VPC",
                    "value": "${compact(aws_vpc_ipv4_cidr_block_association.this[*].cidr_block)}"
                }
            },
            {
                "vpc_owner_id": {
                    "description": "The ID of the AWS account that owns the VPC",
                    "value": "${try(aws_vpc.this[0].owner_id, None)}"
                }
            },
            {
                "dhcp_options_id": {
                    "description": "The ID of the DHCP options",
                    "value": "${try(aws_vpc_dhcp_options.this[0].id, None)}"
                }
            },
            {
                "igw_id": {
                    "description": "The ID of the Internet Gateway",
                    "value": "${try(aws_internet_gateway.this[0].id, None)}"
                }
            },
            {
                "igw_arn": {
                    "description": "The ARN of the Internet Gateway",
                    "value": "${try(aws_internet_gateway.this[0].arn, None)}"
                }
            },
            {
                "public_subnets": {
                    "description": "List of IDs of public subnets",
                    "value": "${aws_subnet.public[*].id}"
                }
            },
            {
                "public_subnet_arns": {
                    "description": "List of ARNs of public subnets",
                    "value": "${aws_subnet.public[*].arn}"
                }
            },
            {
                "public_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of public subnets",
                    "value": "${compact(aws_subnet.public[*].cidr_block)}"
                }
            },
            {
                "public_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.public[*].ipv6_cidr_block)}"
                }
            },
            {
                "public_route_table_ids": {
                    "description": "List of IDs of public route tables",
                    "value": "${local.public_route_table_ids}"
                }
            },
            {
                "public_internet_gateway_route_id": {
                    "description": "ID of the internet gateway route",
                    "value": "${try(aws_route.public_internet_gateway[0].id, None)}"
                }
            },
            {
                "public_internet_gateway_ipv6_route_id": {
                    "description": "ID of the IPv6 internet gateway route",
                    "value": "${try(aws_route.public_internet_gateway_ipv6[0].id, None)}"
                }
            },
            {
                "public_route_table_association_ids": {
                    "description": "List of IDs of the public route table association",
                    "value": "${aws_route_table_association.public[*].id}"
                }
            },
            {
                "public_network_acl_id": {
                    "description": "ID of the public network ACL",
                    "value": "${try(aws_network_acl.public[0].id, None)}"
                }
            },
            {
                "public_network_acl_arn": {
                    "description": "ARN of the public network ACL",
                    "value": "${try(aws_network_acl.public[0].arn, None)}"
                }
            },
            {
                "private_subnets": {
                    "description": "List of IDs of private subnets",
                    "value": "${aws_subnet.private[*].id}"
                }
            },
            {
                "private_subnet_arns": {
                    "description": "List of ARNs of private subnets",
                    "value": "${aws_subnet.private[*].arn}"
                }
            },
            {
                "private_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of private subnets",
                    "value": "${compact(aws_subnet.private[*].cidr_block)}"
                }
            },
            {
                "private_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.private[*].ipv6_cidr_block)}"
                }
            },
            {
                "private_route_table_ids": {
                    "description": "List of IDs of private route tables",
                    "value": "${local.private_route_table_ids}"
                }
            },
            {
                "private_nat_gateway_route_ids": {
                    "description": "List of IDs of the private nat gateway route",
                    "value": "${aws_route.private_nat_gateway[*].id}"
                }
            },
            {
                "private_ipv6_egress_route_ids": {
                    "description": "List of IDs of the ipv6 egress route",
                    "value": "${aws_route.private_ipv6_egress[*].id}"
                }
            },
            {
                "private_route_table_association_ids": {
                    "description": "List of IDs of the private route table association",
                    "value": "${aws_route_table_association.private[*].id}"
                }
            },
            {
                "private_network_acl_id": {
                    "description": "ID of the private network ACL",
                    "value": "${try(aws_network_acl.private[0].id, None)}"
                }
            },
            {
                "private_network_acl_arn": {
                    "description": "ARN of the private network ACL",
                    "value": "${try(aws_network_acl.private[0].arn, None)}"
                }
            },
            {
                "outpost_subnets": {
                    "description": "List of IDs of outpost subnets",
                    "value": "${aws_subnet.outpost[*].id}"
                }
            },
            {
                "outpost_subnet_arns": {
                    "description": "List of ARNs of outpost subnets",
                    "value": "${aws_subnet.outpost[*].arn}"
                }
            },
            {
                "outpost_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of outpost subnets",
                    "value": "${compact(aws_subnet.outpost[*].cidr_block)}"
                }
            },
            {
                "outpost_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.outpost[*].ipv6_cidr_block)}"
                }
            },
            {
                "outpost_network_acl_id": {
                    "description": "ID of the outpost network ACL",
                    "value": "${try(aws_network_acl.outpost[0].id, None)}"
                }
            },
            {
                "outpost_network_acl_arn": {
                    "description": "ARN of the outpost network ACL",
                    "value": "${try(aws_network_acl.outpost[0].arn, None)}"
                }
            },
            {
                "database_subnets": {
                    "description": "List of IDs of database subnets",
                    "value": "${aws_subnet.database[*].id}"
                }
            },
            {
                "database_subnet_arns": {
                    "description": "List of ARNs of database subnets",
                    "value": "${aws_subnet.database[*].arn}"
                }
            },
            {
                "database_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of database subnets",
                    "value": "${compact(aws_subnet.database[*].cidr_block)}"
                }
            },
            {
                "database_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.database[*].ipv6_cidr_block)}"
                }
            },
            {
                "database_subnet_group": {
                    "description": "ID of database subnet group",
                    "value": "${try(aws_db_subnet_group.database[0].id, None)}"
                }
            },
            {
                "database_subnet_group_name": {
                    "description": "Name of database subnet group",
                    "value": "${try(aws_db_subnet_group.database[0].name, None)}"
                }
            },
            {
                "database_route_table_ids": {
                    "description": "List of IDs of database route tables",
                    "value": "${length(aws_route_table.database[*].id) > 0 ? aws_route_table.database[*].id : aws_route_table.private[*].id}"
                }
            },
            {
                "database_internet_gateway_route_id": {
                    "description": "ID of the database internet gateway route",
                    "value": "${try(aws_route.database_internet_gateway[0].id, None)}"
                }
            },
            {
                "database_nat_gateway_route_ids": {
                    "description": "List of IDs of the database nat gateway route",
                    "value": "${aws_route.database_nat_gateway[*].id}"
                }
            },
            {
                "database_ipv6_egress_route_id": {
                    "description": "ID of the database IPv6 egress route",
                    "value": "${try(aws_route.database_ipv6_egress[0].id, None)}"
                }
            },
            {
                "database_route_table_association_ids": {
                    "description": "List of IDs of the database route table association",
                    "value": "${aws_route_table_association.database[*].id}"
                }
            },
            {
                "database_network_acl_id": {
                    "description": "ID of the database network ACL",
                    "value": "${try(aws_network_acl.database[0].id, None)}"
                }
            },
            {
                "database_network_acl_arn": {
                    "description": "ARN of the database network ACL",
                    "value": "${try(aws_network_acl.database[0].arn, None)}"
                }
            },
            {
                "redshift_subnets": {
                    "description": "List of IDs of redshift subnets",
                    "value": "${aws_subnet.redshift[*].id}"
                }
            },
            {
                "redshift_subnet_arns": {
                    "description": "List of ARNs of redshift subnets",
                    "value": "${aws_subnet.redshift[*].arn}"
                }
            },
            {
                "redshift_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of redshift subnets",
                    "value": "${compact(aws_subnet.redshift[*].cidr_block)}"
                }
            },
            {
                "redshift_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.redshift[*].ipv6_cidr_block)}"
                }
            },
            {
                "redshift_subnet_group": {
                    "description": "ID of redshift subnet group",
                    "value": "${try(aws_redshift_subnet_group.redshift[0].id, None)}"
                }
            },
            {
                "redshift_route_table_ids": {
                    "description": "List of IDs of redshift route tables",
                    "value": "${length(local.redshift_route_table_ids) > 0 ? local.redshift_route_table_ids : var.enable_public_redshift ? local.public_route_table_ids : local.private_route_table_ids}"
                }
            },
            {
                "redshift_route_table_association_ids": {
                    "description": "List of IDs of the redshift route table association",
                    "value": "${aws_route_table_association.redshift[*].id}"
                }
            },
            {
                "redshift_public_route_table_association_ids": {
                    "description": "List of IDs of the public redshift route table association",
                    "value": "${aws_route_table_association.redshift_public[*].id}"
                }
            },
            {
                "redshift_network_acl_id": {
                    "description": "ID of the redshift network ACL",
                    "value": "${try(aws_network_acl.redshift[0].id, None)}"
                }
            },
            {
                "redshift_network_acl_arn": {
                    "description": "ARN of the redshift network ACL",
                    "value": "${try(aws_network_acl.redshift[0].arn, None)}"
                }
            },
            {
                "elasticache_subnets": {
                    "description": "List of IDs of elasticache subnets",
                    "value": "${aws_subnet.elasticache[*].id}"
                }
            },
            {
                "elasticache_subnet_arns": {
                    "description": "List of ARNs of elasticache subnets",
                    "value": "${aws_subnet.elasticache[*].arn}"
                }
            },
            {
                "elasticache_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of elasticache subnets",
                    "value": "${compact(aws_subnet.elasticache[*].cidr_block)}"
                }
            },
            {
                "elasticache_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.elasticache[*].ipv6_cidr_block)}"
                }
            },
            {
                "elasticache_subnet_group": {
                    "description": "ID of elasticache subnet group",
                    "value": "${try(aws_elasticache_subnet_group.elasticache[0].id, None)}"
                }
            },
            {
                "elasticache_subnet_group_name": {
                    "description": "Name of elasticache subnet group",
                    "value": "${try(aws_elasticache_subnet_group.elasticache[0].name, None)}"
                }
            },
            {
                "elasticache_route_table_ids": {
                    "description": "List of IDs of elasticache route tables",
                    "value": "${try(coalescelist(aws_route_table.elasticache[*].id, local.private_route_table_ids), [])}"
                }
            },
            {
                "elasticache_route_table_association_ids": {
                    "description": "List of IDs of the elasticache route table association",
                    "value": "${aws_route_table_association.elasticache[*].id}"
                }
            },
            {
                "elasticache_network_acl_id": {
                    "description": "ID of the elasticache network ACL",
                    "value": "${try(aws_network_acl.elasticache[0].id, None)}"
                }
            },
            {
                "elasticache_network_acl_arn": {
                    "description": "ARN of the elasticache network ACL",
                    "value": "${try(aws_network_acl.elasticache[0].arn, None)}"
                }
            },
            {
                "intra_subnets": {
                    "description": "List of IDs of intra subnets",
                    "value": "${aws_subnet.intra[*].id}"
                }
            },
            {
                "intra_subnet_arns": {
                    "description": "List of ARNs of intra subnets",
                    "value": "${aws_subnet.intra[*].arn}"
                }
            },
            {
                "intra_subnets_cidr_blocks": {
                    "description": "List of cidr_blocks of intra subnets",
                    "value": "${compact(aws_subnet.intra[*].cidr_block)}"
                }
            },
            {
                "intra_subnets_ipv6_cidr_blocks": {
                    "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
                    "value": "${compact(aws_subnet.intra[*].ipv6_cidr_block)}"
                }
            },
            {
                "intra_route_table_ids": {
                    "description": "List of IDs of intra route tables",
                    "value": "${aws_route_table.intra[*].id}"
                }
            },
            {
                "intra_route_table_association_ids": {
                    "description": "List of IDs of the intra route table association",
                    "value": "${aws_route_table_association.intra[*].id}"
                }
            },
            {
                "intra_network_acl_id": {
                    "description": "ID of the intra network ACL",
                    "value": "${try(aws_network_acl.intra[0].id, None)}"
                }
            },
            {
                "intra_network_acl_arn": {
                    "description": "ARN of the intra network ACL",
                    "value": "${try(aws_network_acl.intra[0].arn, None)}"
                }
            },
            {
                "nat_ids": {
                    "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
                    "value": "${aws_eip.nat[*].id}"
                }
            },
            {
                "nat_public_ips": {
                    "description": "List of public Elastic IPs created for AWS NAT Gateway",
                    "value": "${var.reuse_nat_ips ? var.external_nat_ips : aws_eip.nat[*].public_ip}"
                }
            },
            {
                "natgw_ids": {
                    "description": "List of NAT Gateway IDs",
                    "value": "${aws_nat_gateway.this[*].id}"
                }
            },
            {
                "natgw_interface_ids": {
                    "description": "List of Network Interface IDs assigned to NAT Gateways",
                    "value": "${aws_nat_gateway.this[*].network_interface_id}"
                }
            },
            {
                "egress_only_internet_gateway_id": {
                    "description": "The ID of the egress only Internet Gateway",
                    "value": "${try(aws_egress_only_internet_gateway.this[0].id, None)}"
                }
            },
            {
                "cgw_ids": {
                    "description": "List of IDs of Customer Gateway",
                    "value": "${[for k , v in aws_customer_gateway.this : v.id]}"
                }
            },
            {
                "cgw_arns": {
                    "description": "List of ARNs of Customer Gateway",
                    "value": "${[for k , v in aws_customer_gateway.this : v.arn]}"
                }
            },
            {
                "this_customer_gateway": {
                    "description": "Map of Customer Gateway attributes",
                    "value": "${aws_customer_gateway.this}"
                }
            },
            {
                "vgw_id": {
                    "description": "The ID of the VPN Gateway",
                    "value": "${try(aws_vpn_gateway.this[0].id, aws_vpn_gateway_attachment.this[0].vpn_gateway_id, None)}"
                }
            },
            {
                "vgw_arn": {
                    "description": "The ARN of the VPN Gateway",
                    "value": "${try(aws_vpn_gateway.this[0].arn, None)}"
                }
            },
            {
                "default_vpc_id": {
                    "description": "The ID of the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].id, None)}"
                }
            },
            {
                "default_vpc_arn": {
                    "description": "The ARN of the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].arn, None)}"
                }
            },
            {
                "default_vpc_cidr_block": {
                    "description": "The CIDR block of the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].cidr_block, None)}"
                }
            },
            {
                "default_vpc_default_security_group_id": {
                    "description": "The ID of the security group created by default on Default VPC creation",
                    "value": "${try(aws_default_vpc.this[0].default_security_group_id, None)}"
                }
            },
            {
                "default_vpc_default_network_acl_id": {
                    "description": "The ID of the default network ACL of the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].default_network_acl_id, None)}"
                }
            },
            {
                "default_vpc_default_route_table_id": {
                    "description": "The ID of the default route table of the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].default_route_table_id, None)}"
                }
            },
            {
                "default_vpc_instance_tenancy": {
                    "description": "Tenancy of instances spin up within Default VPC",
                    "value": "${try(aws_default_vpc.this[0].instance_tenancy, None)}"
                }
            },
            {
                "default_vpc_enable_dns_support": {
                    "description": "Whether or not the Default VPC has DNS support",
                    "value": "${try(aws_default_vpc.this[0].enable_dns_support, None)}"
                }
            },
            {
                "default_vpc_enable_dns_hostnames": {
                    "description": "Whether or not the Default VPC has DNS hostname support",
                    "value": "${try(aws_default_vpc.this[0].enable_dns_hostnames, None)}"
                }
            },
            {
                "default_vpc_main_route_table_id": {
                    "description": "The ID of the main route table associated with the Default VPC",
                    "value": "${try(aws_default_vpc.this[0].main_route_table_id, None)}"
                }
            },
            {
                "vpc_flow_log_id": {
                    "description": "The ID of the Flow Log resource",
                    "value": "${try(aws_flow_log.this[0].id, None)}"
                }
            },
            {
                "vpc_flow_log_destination_arn": {
                    "description": "The ARN of the destination for VPC Flow Logs",
                    "value": "${local.flow_log_destination_arn}"
                }
            },
            {
                "vpc_flow_log_destination_type": {
                    "description": "The type of the destination for VPC Flow Logs",
                    "value": "${var.flow_log_destination_type}"
                }
            },
            {
                "vpc_flow_log_cloudwatch_iam_role_arn": {
                    "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
                    "value": "${local.flow_log_iam_role_arn}"
                }
            },
            {
                "vpc_flow_log_deliver_cross_account_role": {
                    "description": "The ARN of the IAM role used when pushing logs cross account",
                    "value": "${try(aws_flow_log.this[0].deliver_cross_account_role, None)}"
                }
            },
            {
                "azs": {
                    "description": "A list of availability zones specified as argument to this module",
                    "value": "${var.azs}"
                }
            },
            {
                "name": {
                    "description": "The name of the VPC specified as argument to this module",
                    "value": "${var.name}"
                }
            }
        ]
    },
    "node_list": [
        "aws_security_group.pipeline_security_group",
        "aws_security_group_rule.pipeline_security_group",
        "aws_ssm_parameter.database_route_table_ids[0]~1",
        "aws_ssm_parameter.database_subnet_cidrs[0]~1",
        "aws_ssm_parameter.database_subnet_group[0]~1",
        "aws_ssm_parameter.database_subnet_names",
        "aws_ssm_parameter.database_subnets[0]~1",
        "aws_ssm_parameter.elasticache_route_table_ids[0]~1",
        "aws_ssm_parameter.elasticache_subnet_cidrs[0]~1",
        "aws_ssm_parameter.elasticache_subnet_group[0]~1",
        "aws_ssm_parameter.elasticache_subnet_names",
        "aws_ssm_parameter.elasticache_subnets[0]~1",
        "aws_ssm_parameter.intra_route_table_ids[0]~1",
        "aws_ssm_parameter.intra_subnet_cidrs[0]~1",
        "aws_ssm_parameter.intra_subnet_names",
        "aws_ssm_parameter.intra_subnets[0]~1",
        "aws_ssm_parameter.pipeline_security_group",
        "aws_ssm_parameter.private_route_table_ids[0]~1",
        "aws_ssm_parameter.private_subnet_cidrs",
        "aws_ssm_parameter.private_subnet_names",
        "aws_ssm_parameter.private_subnets",
        "aws_ssm_parameter.public_route_table_ids[0]~1",
        "aws_ssm_parameter.public_subnet_cidrs",
        "aws_ssm_parameter.public_subnet_names",
        "aws_ssm_parameter.public_subnets",
        "aws_ssm_parameter.vpc_id",
        "module.vpc.aws_db_subnet_group.database[0]~1",
        "module.vpc.aws_default_network_acl.this[0]~1",
        "module.vpc.aws_default_route_table.default[0]~1",
        "module.vpc.aws_default_security_group.this[0]~1",
        "module.vpc.aws_eip.nat[0]~1",
        "module.vpc.aws_eip.nat[1]~2",
        "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
        "module.vpc.aws_internet_gateway.this[0]~1",
        "module.vpc.aws_nat_gateway.this[0]~1",
        "module.vpc.aws_nat_gateway.this[1]~2",
        "module.vpc.aws_route.private_nat_gateway[0]~1",
        "module.vpc.aws_route.private_nat_gateway[1]~2",
        "module.vpc.aws_route.public_internet_gateway[0]~1",
        "module.vpc.aws_route_table.intra[0]~1",
        "module.vpc.aws_route_table.private[0]~1",
        "module.vpc.aws_route_table.private[1]~2",
        "module.vpc.aws_route_table.public[0]~1",
        "module.vpc.aws_route_table_association.database[0]~1",
        "module.vpc.aws_route_table_association.database[1]~2",
        "module.vpc.aws_route_table_association.elasticache[0]~1",
        "module.vpc.aws_route_table_association.elasticache[1]~2",
        "module.vpc.aws_route_table_association.intra[0]~1",
        "module.vpc.aws_route_table_association.intra[1]~2",
        "module.vpc.aws_route_table_association.private[0]~1",
        "module.vpc.aws_route_table_association.private[1]~2",
        "module.vpc.aws_route_table_association.public[0]~1",
        "module.vpc.aws_route_table_association.public[1]~2",
        "module.vpc.aws_subnet.database[0]~1",
        "module.vpc.aws_subnet.database[1]~2",
        "module.vpc.aws_subnet.elasticache[0]~1",
        "module.vpc.aws_subnet.elasticache[1]~2",
        "module.vpc.aws_subnet.intra[0]~1",
        "module.vpc.aws_subnet.intra[1]~2",
        "module.vpc.aws_subnet.private[0]~1",
        "module.vpc.aws_subnet.private[1]~2",
        "module.vpc.aws_subnet.public[0]~1",
        "module.vpc.aws_subnet.public[1]~2",
        "module.vpc.aws_vpc.this[0]~1"
    ],
    "hidden": {},
    "annotations": {},
    "original_graphdict": {
        "aws_security_group.pipeline_security_group": [
            "aws_security_group_rule.pipeline_security_group",
            "aws_ssm_parameter.pipeline_security_group"
        ],
        "aws_security_group_rule.pipeline_security_group": [],
        "aws_ssm_parameter.database_route_table_ids[0]~1": [],
        "aws_ssm_parameter.database_subnet_cidrs[0]~1": [],
        "aws_ssm_parameter.database_subnet_group[0]~1": [],
        "aws_ssm_parameter.database_subnet_names": [],
        "aws_ssm_parameter.database_subnets[0]~1": [],
        "aws_ssm_parameter.elasticache_route_table_ids[0]~1": [],
        "aws_ssm_parameter.elasticache_subnet_cidrs[0]~1": [],
        "aws_ssm_parameter.elasticache_subnet_group[0]~1": [],
        "aws_ssm_parameter.elasticache_subnet_names": [],
        "aws_ssm_parameter.elasticache_subnets[0]~1": [],
        "aws_ssm_parameter.intra_route_table_ids[0]~1": [],
        "aws_ssm_parameter.intra_subnet_cidrs[0]~1": [],
        "aws_ssm_parameter.intra_subnet_names": [],
        "aws_ssm_parameter.intra_subnets[0]~1": [],
        "aws_ssm_parameter.pipeline_security_group": [],
        "aws_ssm_parameter.private_route_table_ids[0]~1": [],
        "aws_ssm_parameter.private_subnet_cidrs": [],
        "aws_ssm_parameter.private_subnet_names": [],
        "aws_ssm_parameter.private_subnets": [],
        "aws_ssm_parameter.public_route_table_ids[0]~1": [],
        "aws_ssm_parameter.public_subnet_cidrs": [],
        "aws_ssm_parameter.public_subnet_names": [],
        "aws_ssm_parameter.public_subnets": [],
        "aws_ssm_parameter.vpc_id": [],
        "module.vpc.aws_db_subnet_group.database[0]~1": [],
        "module.vpc.aws_default_network_acl.this[0]~1": [],
        "module.vpc.aws_default_route_table.default[0]~1": [],
        "module.vpc.aws_default_security_group.this[0]~1": [],
        "module.vpc.aws_eip.nat[0]~1": [],
        "module.vpc.aws_eip.nat[1]~2": [],
        "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1": [],
        "module.vpc.aws_internet_gateway.this[0]~1": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_route.public_internet_gateway[0]~1"
        ],
        "module.vpc.aws_nat_gateway.this[0]~1": [
            "module.vpc.aws_route.private_nat_gateway"
        ],
        "module.vpc.aws_nat_gateway.this[1]~2": [
            "module.vpc.aws_route.private_nat_gateway"
        ],
        "module.vpc.aws_route.private_nat_gateway[0]~1": [],
        "module.vpc.aws_route.private_nat_gateway[1]~2": [],
        "module.vpc.aws_route.public_internet_gateway[0]~1": [],
        "module.vpc.aws_route_table.intra[0]~1": [
            "module.vpc.aws_route_table_association.intra"
        ],
        "module.vpc.aws_route_table.private[0]~1": [
            "module.vpc.aws_route.private_nat_gateway",
            "module.vpc.aws_route_table_association.database",
            "module.vpc.aws_route_table_association.elasticache",
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_route_table.private[1]~2": [
            "module.vpc.aws_route.private_nat_gateway",
            "module.vpc.aws_route_table_association.database",
            "module.vpc.aws_route_table_association.elasticache",
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_route_table.public[0]~1": [
            "module.vpc.aws_route.public_internet_gateway[0]~1",
            "module.vpc.aws_route_table_association.public"
        ],
        "module.vpc.aws_route_table_association.database[0]~1": [],
        "module.vpc.aws_route_table_association.database[1]~2": [],
        "module.vpc.aws_route_table_association.elasticache[0]~1": [],
        "module.vpc.aws_route_table_association.elasticache[1]~2": [],
        "module.vpc.aws_route_table_association.intra[0]~1": [],
        "module.vpc.aws_route_table_association.intra[1]~2": [],
        "module.vpc.aws_route_table_association.private[0]~1": [],
        "module.vpc.aws_route_table_association.private[1]~2": [],
        "module.vpc.aws_route_table_association.public[0]~1": [],
        "module.vpc.aws_route_table_association.public[1]~2": [],
        "module.vpc.aws_subnet.database[0]~1": [
            "module.vpc.aws_db_subnet_group.database[0]~1",
            "module.vpc.aws_route_table_association.database"
        ],
        "module.vpc.aws_subnet.database[1]~2": [
            "module.vpc.aws_db_subnet_group.database[0]~1",
            "module.vpc.aws_route_table_association.database"
        ],
        "module.vpc.aws_subnet.elasticache[0]~1": [
            "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
            "module.vpc.aws_route_table_association.elasticache"
        ],
        "module.vpc.aws_subnet.elasticache[1]~2": [
            "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1",
            "module.vpc.aws_route_table_association.elasticache"
        ],
        "module.vpc.aws_subnet.intra[0]~1": [
            "module.vpc.aws_route_table_association.intra"
        ],
        "module.vpc.aws_subnet.intra[1]~2": [
            "module.vpc.aws_route_table_association.intra"
        ],
        "module.vpc.aws_subnet.private[0]~1": [
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_subnet.private[1]~2": [
            "module.vpc.aws_route_table_association.private"
        ],
        "module.vpc.aws_subnet.public[0]~1": [
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table_association.public"
        ],
        "module.vpc.aws_subnet.public[1]~2": [
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table_association.public"
        ],
        "module.vpc.aws_vpc.this[0]~1": [
            "module.vpc.aws_default_network_acl.this[0]~1",
            "module.vpc.aws_default_route_table.default[0]~1",
            "module.vpc.aws_default_security_group.this[0]~1",
            "module.vpc.aws_subnet.database[0]~1",
            "module.vpc.aws_subnet.database[1]~2",
            "module.vpc.aws_subnet.elasticache[0]~1",
            "module.vpc.aws_subnet.elasticache[1]~2",
            "module.vpc.aws_subnet.intra[0]~1",
            "module.vpc.aws_subnet.intra[1]~2",
            "module.vpc.aws_subnet.private[0]~1",
            "module.vpc.aws_subnet.private[1]~2",
            "module.vpc.aws_subnet.public[0]~1",
            "module.vpc.aws_subnet.public[1]~2"
        ]
    },
    "original_metadata": {
        "aws_security_group.pipeline_security_group": {
            "description": "fdfd-default Security group used by pipelines that run terraform",
            "name": "fdfd-default-pipeline",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "egress": [],
            "id": true,
            "ingress": [],
            "name_prefix": true,
            "owner_id": true,
            "vpc_id": true
        },
        "aws_security_group_rule.pipeline_security_group": {
            "cidr_blocks": [
                false
            ],
            "description": null,
            "from_port": 0,
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "self": false,
            "timeouts": null,
            "to_port": 0,
            "type": "egress",
            "id": true,
            "security_group_id": true,
            "security_group_rule_id": true,
            "source_security_group_id": true
        },
        "aws_ssm_parameter.database_route_table_ids[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/database_route_table_ids",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.database_subnet_cidrs[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/database_subnet_cidrs",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.database_subnet_group[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/database_subnet_group",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "String",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.database_subnet_names": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/database_subnet_names",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.database_subnets[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/database_subnets",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.elasticache_route_table_ids[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/elasticache_route_table_ids",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.elasticache_subnet_cidrs[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_cidrs",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.elasticache_subnet_group[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_group",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "String",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.elasticache_subnet_names": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/elasticache_subnet_names",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.elasticache_subnets[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/elasticache_subnets",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.intra_route_table_ids[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/intra_route_table_ids",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.intra_subnet_cidrs[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/intra_subnet_cidrs",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.intra_subnet_names": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/intra_subnet_names",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.intra_subnets[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/intra_subnets",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.pipeline_security_group": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/pipeline_security_group",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "String",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.private_route_table_ids[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/private_route_table_ids",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.private_subnet_cidrs": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/private_subnet_cidrs",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.private_subnet_names": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/private_subnet_names",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.private_subnets": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/private_subnets",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.public_route_table_ids[0]~1": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/public_route_table_ids",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.public_subnet_cidrs": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/public_subnet_cidrs",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.public_subnet_names": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/public_subnet_names",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "value": true,
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "version": true
        },
        "aws_ssm_parameter.public_subnets": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/public_subnets",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "StringList",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "aws_ssm_parameter.vpc_id": {
            "allowed_pattern": null,
            "description": null,
            "name": "/entigo-infralib/fdfd-default/vpc_id",
            "overwrite": null,
            "tags": {},
            "tags_all": {},
            "type": "String",
            "arn": true,
            "data_type": true,
            "id": true,
            "insecure_value": true,
            "key_id": true,
            "tier": true,
            "value": true,
            "version": true
        },
        "module.vpc.aws_db_subnet_group.database[0]~1": {
            "description": "Database subnet group for fdfd-default",
            "name": "fdfd-default",
            "tags": {},
            "tags_all": {},
            "arn": true,
            "id": true,
            "name_prefix": true,
            "subnet_ids": [],
            "supported_network_types": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_default_network_acl.this[0]~1": {
            "egress": [
                {},
                {}
            ],
            "ingress": [
                {},
                {}
            ],
            "subnet_ids": null,
            "tags": {},
            "tags_all": {},
            "arn": true,
            "default_network_acl_id": true,
            "id": true,
            "owner_id": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_default_route_table.default[0]~1": {
            "propagating_vgws": null,
            "tags": {},
            "tags_all": {},
            "timeouts": {},
            "arn": true,
            "default_route_table_id": true,
            "id": true,
            "owner_id": true,
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_default_security_group.this[0]~1": {
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "arn": true,
            "description": true,
            "egress": [],
            "id": true,
            "ingress": [],
            "name": true,
            "name_prefix": true,
            "owner_id": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_eip.nat[0]~1": {
            "address": null,
            "associate_with_private_ip": null,
            "customer_owned_ipv4_pool": null,
            "domain": "vpc",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "carrier_ip": true,
            "customer_owned_ip": true,
            "id": true,
            "instance": true,
            "network_border_group": true,
            "network_interface": true,
            "private_dns": true,
            "private_ip": true,
            "ptr_record": true,
            "public_dns": true,
            "public_ip": true,
            "public_ipv4_pool": true,
            "vpc": true,
            "module": "vpc"
        },
        "module.vpc.aws_eip.nat[1]~2": {
            "address": null,
            "associate_with_private_ip": null,
            "customer_owned_ipv4_pool": null,
            "domain": "vpc",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "carrier_ip": true,
            "customer_owned_ip": true,
            "id": true,
            "instance": true,
            "network_border_group": true,
            "network_interface": true,
            "private_dns": true,
            "private_ip": true,
            "ptr_record": true,
            "public_dns": true,
            "public_ip": true,
            "public_ipv4_pool": true,
            "vpc": true,
            "module": "vpc"
        },
        "module.vpc.aws_elasticache_subnet_group.elasticache[0]~1": {
            "description": "ElastiCache subnet group for fdfd-default",
            "name": "fdfd-default",
            "tags": {},
            "tags_all": {},
            "arn": true,
            "id": true,
            "subnet_ids": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_internet_gateway.this[0]~1": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_nat_gateway.this[0]~1": {
            "connectivity_type": "public",
            "secondary_allocation_ids": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "id": true,
            "network_interface_id": true,
            "private_ip": true,
            "public_ip": true,
            "secondary_private_ip_address_count": true,
            "secondary_private_ip_addresses": [],
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_nat_gateway.this[1]~2": {
            "connectivity_type": "public",
            "secondary_allocation_ids": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "allocation_id": true,
            "association_id": true,
            "id": true,
            "network_interface_id": true,
            "private_ip": true,
            "public_ip": true,
            "secondary_private_ip_address_count": true,
            "secondary_private_ip_addresses": [],
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route.private_nat_gateway[0]~1": {
            "carrier_gateway_id": null,
            "core_network_arn": null,
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "gateway_id": null,
            "local_gateway_id": null,
            "timeouts": {},
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
            "id": true,
            "instance_id": true,
            "instance_owner_id": true,
            "nat_gateway_id": true,
            "network_interface_id": true,
            "origin": true,
            "route_table_id": true,
            "state": true,
            "module": "vpc"
        },
        "module.vpc.aws_route.private_nat_gateway[1]~2": {
            "carrier_gateway_id": null,
            "core_network_arn": null,
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "gateway_id": null,
            "local_gateway_id": null,
            "timeouts": {},
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
            "id": true,
            "instance_id": true,
            "instance_owner_id": true,
            "nat_gateway_id": true,
            "network_interface_id": true,
            "origin": true,
            "route_table_id": true,
            "state": true,
            "module": "vpc"
        },
        "module.vpc.aws_route.public_internet_gateway[0]~1": {
            "carrier_gateway_id": null,
            "core_network_arn": null,
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "local_gateway_id": null,
            "nat_gateway_id": null,
            "timeouts": {},
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
            "gateway_id": true,
            "id": true,
            "instance_id": true,
            "instance_owner_id": true,
            "network_interface_id": true,
            "origin": true,
            "route_table_id": true,
            "state": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table.intra[0]~1": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "propagating_vgws": [],
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table.private[0]~1": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "propagating_vgws": [],
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table.private[1]~2": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "propagating_vgws": [],
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table.public[0]~1": {
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "id": true,
            "owner_id": true,
            "propagating_vgws": [],
            "route": [],
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.database[0]~1": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.database[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.elasticache[0]~1": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.elasticache[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.intra[0]~1": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.intra[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.private[0]~1": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.private[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.public[0]~1": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_route_table_association.public[1]~2": {
            "gateway_id": null,
            "timeouts": null,
            "id": true,
            "route_table_id": true,
            "subnet_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.database[0]~1": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "cidr_block": "10.156.128.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.database[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.144.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.elasticache[0]~1": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "cidr_block": "10.156.192.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.elasticache[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.200.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.intra[0]~1": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "cidr_block": "10.156.32.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.intra[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.40.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.private[0]~1": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "cidr_block": "10.156.64.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.private[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.80.0/20",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.public[0]~1": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "cidr_block": "10.156.0.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_subnet.public[1]~2": {
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "cidr_block": "10.156.8.0/21",
            "customer_owned_ipv4_pool": null,
            "enable_dns64": false,
            "enable_lni_at_device_index": null,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "ipv6_cidr_block": null,
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": null,
            "map_public_ip_on_launch": false,
            "outpost_arn": null,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "arn": true,
            "availability_zone_id": true,
            "id": true,
            "ipv6_cidr_block_association_id": true,
            "owner_id": true,
            "private_dns_hostname_type_on_launch": true,
            "vpc_id": true,
            "module": "vpc"
        },
        "module.vpc.aws_vpc.this[0]~1": {
            "assign_generated_ipv6_cidr_block": null,
            "cidr_block": "10.156.0.0/16",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_ipam_pool_id": null,
            "ipv6_netmask_length": null,
            "tags": {},
            "tags_all": {},
            "arn": true,
            "default_network_acl_id": true,
            "default_route_table_id": true,
            "default_security_group_id": true,
            "dhcp_options_id": true,
            "enable_network_address_usage_metrics": true,
            "id": true,
            "ipv6_association_id": true,
            "ipv6_cidr_block": true,
            "ipv6_cidr_block_network_border_group": true,
            "main_route_table_id": true,
            "owner_id": true,
            "module": "vpc"
        }
    },
    "module_source_dict": {
        "vpc": "terraform-aws-modules/vpc/aws"
    },
    "all_data": {
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/data.tf": [
            {
                "aws_availability_zones": {
                    "available": {
                        "state": "available"
                    }
                }
            }
        ],
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/vpc-flow-logs.tf": [
            {
                "aws_iam_policy_document": {
                    "flow_log_cloudwatch_assume_role": {
                        "count": "${local.create_flow_log_cloudwatch_iam_role ? 1 : 0}",
                        "statement": [
                            {
                                "sid": "AWSVPCFlowLogsAssumeRole",
                                "principals": [
                                    {
                                        "type": "Service",
                                        "identifiers": [
                                            "vpc-flow-logs.amazonaws.com"
                                        ]
                                    }
                                ],
                                "effect": "Allow",
                                "actions": [
                                    "sts:AssumeRole"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "aws_iam_policy_document": {
                    "vpc_flow_log_cloudwatch": {
                        "count": "${local.create_flow_log_cloudwatch_iam_role ? 1 : 0}",
                        "statement": [
                            {
                                "sid": "AWSVPCFlowLogsPushToCloudWatch",
                                "effect": "Allow",
                                "actions": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "logs:DescribeLogGroups",
                                    "logs:DescribeLogStreams"
                                ],
                                "resources": [
                                    "*"
                                ]
                            }
                        ]
                    }
                }
            }
        ]
    },
    "all_module": {
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/main.tf": [
            {
                "vpc": {
                    "source": "terraform-aws-modules/vpc/aws",
                    "version": "5.8.0",
                    "name": "${local.hname}",
                    "cidr": "${var.vpc_cidr}",
                    "azs": "${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}",
                    "private_subnets": "${local.private_subnets}",
                    "public_subnets": "${local.public_subnets}",
                    "database_subnets": "${local.database_subnets}",
                    "elasticache_subnets": "${local.elasticache_subnets}",
                    "intra_subnets": "${local.intra_subnets}",
                    "private_subnet_names": "${var.private_subnet_names}",
                    "public_subnet_names": "${var.public_subnet_names}",
                    "database_subnet_names": "${var.database_subnet_names}",
                    "elasticache_subnet_names": "${var.elasticache_subnet_names}",
                    "intra_subnet_names": "${var.intra_subnet_names}",
                    "create_database_subnet_group": "${length(local.database_subnets) > 0 ? True : False}",
                    "create_elasticache_subnet_group": "${length(local.elasticache_subnets) > 0 ? True : False}",
                    "enable_nat_gateway": "${var.enable_nat_gateway}",
                    "single_nat_gateway": "${var.one_nat_gateway_per_az ? False : True}",
                    "one_nat_gateway_per_az": "${var.one_nat_gateway_per_az}",
                    "reuse_nat_ips": false,
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "enable_flow_log": false,
                    "create_flow_log_cloudwatch_log_group": false,
                    "create_flow_log_cloudwatch_iam_role": false,
                    "flow_log_max_aggregation_interval": 60,
                    "flow_log_cloudwatch_log_group_retention_in_days": 7,
                    "public_subnet_tags": {
                        "kubernetes.io/role/elb": "1"
                    },
                    "private_subnet_tags": {
                        "kubernetes.io/role/internal-elb": "1"
                    },
                    "tags": {
                        "Terraform": "true",
                        "Prefix": "${var.prefix}",
                        "Workspace": "${terraform.workspace}"
                    }
                }
            }
        ]
    },
    "all_locals": {
        "main": {
            "azs": "${var.public_subnets == None ? var.azs : length(var.public_subnets)}",
            "public_subnets": "${var.public_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 0), 2, i)] : var.public_subnets}",
            "intra_subnets": "${var.intra_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 0), 1, 1), 2, i)] : var.intra_subnets}",
            "private_subnets": "${var.private_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 1), 2, i)] : var.private_subnets}",
            "database_subnets": "${var.database_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 2), 2, i)] : var.database_subnets}",
            "elasticache_subnets": "${var.elasticache_subnets == None ? [for i in range(local.azs) : cidrsubnet(cidrsubnet(cidrsubnet(var.vpc_cidr, 2, 3), 1, 0), 2, i)] : var.elasticache_subnets}",
            "hname": "${var.prefix}-${terraform.workspace}"
        },
        "vpc": {
            "redshift_route_table_ids": "${aws_route_table.redshift[*].id}",
            "public_route_table_ids": "${aws_route_table.public[*].id}",
            "private_route_table_ids": "${aws_route_table.private[*].id}",
            "len_public_subnets": "${max(length(var.public_subnets), length(var.public_subnet_ipv6_prefixes))}",
            "len_private_subnets": "${max(length(var.private_subnets), length(var.private_subnet_ipv6_prefixes))}",
            "len_database_subnets": "${max(length(var.database_subnets), length(var.database_subnet_ipv6_prefixes))}",
            "len_elasticache_subnets": "${max(length(var.elasticache_subnets), length(var.elasticache_subnet_ipv6_prefixes))}",
            "len_redshift_subnets": "${max(length(var.redshift_subnets), length(var.redshift_subnet_ipv6_prefixes))}",
            "len_intra_subnets": "${max(length(var.intra_subnets), length(var.intra_subnet_ipv6_prefixes))}",
            "len_outpost_subnets": "${max(length(var.outpost_subnets), length(var.outpost_subnet_ipv6_prefixes))}",
            "max_subnet_length": "${max(local.len_private_subnets, local.len_public_subnets, local.len_elasticache_subnets, local.len_database_subnets, local.len_redshift_subnets)}",
            "vpc_id": "${try(aws_vpc_ipv4_cidr_block_association.this[0].vpc_id, aws_vpc.this[0].id, \"\")}",
            "create_vpc": "${var.create_vpc && var.putin_khuylo}",
            "create_public_subnets": "${local.create_vpc && local.len_public_subnets > 0}",
            "num_public_route_tables": "${var.create_multiple_public_route_tables ? local.len_public_subnets : 1}",
            "create_private_subnets": "${local.create_vpc && local.len_private_subnets > 0}",
            "create_private_network_acl": "${local.create_private_subnets && var.private_dedicated_network_acl}",
            "create_database_subnets": "${local.create_vpc && local.len_database_subnets > 0}",
            "create_database_route_table": "${local.create_database_subnets && var.create_database_subnet_route_table}",
            "create_database_network_acl": "${local.create_database_subnets && var.database_dedicated_network_acl}",
            "create_redshift_subnets": "${local.create_vpc && local.len_redshift_subnets > 0}",
            "create_redshift_route_table": "${local.create_redshift_subnets && var.create_redshift_subnet_route_table}",
            "create_redshift_network_acl": "${local.create_redshift_subnets && var.redshift_dedicated_network_acl}",
            "create_elasticache_subnets": "${local.create_vpc && local.len_elasticache_subnets > 0}",
            "create_elasticache_route_table": "${local.create_elasticache_subnets && var.create_elasticache_subnet_route_table}",
            "create_elasticache_network_acl": "${local.create_elasticache_subnets && var.elasticache_dedicated_network_acl}",
            "create_intra_subnets": "${local.create_vpc && local.len_intra_subnets > 0}",
            "num_intra_route_tables": "${var.create_multiple_intra_route_tables ? local.len_intra_subnets : 1}",
            "create_intra_network_acl": "${local.create_intra_subnets && var.intra_dedicated_network_acl}",
            "create_outpost_subnets": "${local.create_vpc && local.len_outpost_subnets > 0}",
            "create_outpost_network_acl": "${local.create_outpost_subnets && var.outpost_dedicated_network_acl}",
            "nat_gateway_count": "${var.single_nat_gateway ? 1 : var.one_nat_gateway_per_az ? length(var.azs) : local.max_subnet_length}",
            "nat_gateway_ips": "${var.reuse_nat_ips ? var.external_nat_ip_ids : aws_eip.nat[*].id}",
            "enable_flow_log": "${var.create_vpc && var.enable_flow_log}",
            "create_flow_log_cloudwatch_iam_role": "${local.enable_flow_log && var.flow_log_destination_type != \"s3\" && var.create_flow_log_cloudwatch_iam_role}",
            "create_flow_log_cloudwatch_log_group": "${local.enable_flow_log && var.flow_log_destination_type != \"s3\" && var.create_flow_log_cloudwatch_log_group}",
            "flow_log_destination_arn": "${local.create_flow_log_cloudwatch_log_group ? try(aws_cloudwatch_log_group.flow_log[0].arn, None) : var.flow_log_destination_arn}",
            "flow_log_iam_role_arn": "${var.flow_log_destination_type != \"s3\" && local.create_flow_log_cloudwatch_iam_role ? try(aws_iam_role.vpc_flow_log_cloudwatch[0].arn, None) : var.flow_log_cloudwatch_iam_role_arn}",
            "flow_log_cloudwatch_log_group_name_suffix": "${var.flow_log_cloudwatch_log_group_name_suffix == \"\" ? local.vpc_id : var.flow_log_cloudwatch_log_group_name_suffix}"
        }
    },
    "all_resource": {
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/main.tf": [
            {
                "aws_security_group": {
                    "pipeline_security_group": {
                        "name": "${local.hname}-pipeline",
                        "description": "${local.hname} Security group used by pipelines that run terraform",
                        "vpc_id": "${module.vpc.vpc_id}",
                        "tags": {
                            "Name": "Allow pipeline access to ${local.hname}"
                        }
                    }
                }
            },
            {
                "aws_security_group_rule": {
                    "pipeline_security_group": {
                        "type": "egress",
                        "from_port": 0,
                        "to_port": 0,
                        "protocol": "${-1}",
                        "cidr_blocks": [
                            "0.0.0.0/0"
                        ],
                        "security_group_id": "${aws_security_group.pipeline_security_group.id}"
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "pipeline_security_group": {
                        "name": "/entigo-infralib/${local.hname}/pipeline_security_group",
                        "type": "String",
                        "value": "${aws_security_group.pipeline_security_group.id}",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "vpc_id": {
                        "name": "/entigo-infralib/${local.hname}/vpc_id",
                        "type": "String",
                        "value": "${module.vpc.vpc_id}",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "private_subnets": {
                        "name": "/entigo-infralib/${local.hname}/private_subnets",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.private_subnets)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "public_subnets": {
                        "name": "/entigo-infralib/${local.hname}/public_subnets",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.public_subnets)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "intra_subnets": {
                        "count": "${length(module.vpc.intra_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/intra_subnets",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.intra_subnets)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "database_subnets": {
                        "count": "${length(local.database_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/database_subnets",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.database_subnets)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "database_subnet_group": {
                        "count": "${length(local.database_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/database_subnet_group",
                        "type": "String",
                        "insecure_value": "${module.vpc.database_subnet_group}",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "elasticache_subnets": {
                        "count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/elasticache_subnets",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.elasticache_subnets)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "elasticache_subnet_group": {
                        "count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/elasticache_subnet_group",
                        "type": "String",
                        "insecure_value": "${module.vpc.elasticache_subnet_group}",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "private_subnet_cidrs": {
                        "name": "/entigo-infralib/${local.hname}/private_subnet_cidrs",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.private_subnets_cidr_blocks)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "public_subnet_cidrs": {
                        "name": "/entigo-infralib/${local.hname}/public_subnet_cidrs",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.public_subnets_cidr_blocks)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "database_subnet_cidrs": {
                        "count": "${length(local.database_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/database_subnet_cidrs",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.database_subnets_cidr_blocks)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "elasticache_subnet_cidrs": {
                        "count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/elasticache_subnet_cidrs",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.elasticache_subnets_cidr_blocks)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "intra_subnet_cidrs": {
                        "count": "${length(local.intra_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/intra_subnet_cidrs",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.intra_subnets_cidr_blocks)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "private_subnet_names": {
                        "name": "/entigo-infralib/${local.hname}/private_subnet_names",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", var.private_subnet_names)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "public_subnet_names": {
                        "name": "/entigo-infralib/${local.hname}/public_subnet_names",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", var.public_subnet_names)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "database_subnet_names": {
                        "name": "/entigo-infralib/${local.hname}/database_subnet_names",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", var.database_subnet_names)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "elasticache_subnet_names": {
                        "name": "/entigo-infralib/${local.hname}/elasticache_subnet_names",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", var.elasticache_subnet_names)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "intra_subnet_names": {
                        "name": "/entigo-infralib/${local.hname}/intra_subnet_names",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", var.intra_subnet_names)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "intra_route_table_ids": {
                        "count": "${length(local.intra_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/intra_route_table_ids",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.intra_route_table_ids)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "private_route_table_ids": {
                        "count": "${length(local.private_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/private_route_table_ids",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.private_route_table_ids)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "public_route_table_ids": {
                        "count": "${length(local.public_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/public_route_table_ids",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.public_route_table_ids)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "database_route_table_ids": {
                        "count": "${length(local.database_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/database_route_table_ids",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.database_route_table_ids)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            },
            {
                "aws_ssm_parameter": {
                    "elasticache_route_table_ids": {
                        "count": "${length(local.elasticache_subnets) > 0 ? 1 : 0}",
                        "name": "/entigo-infralib/${local.hname}/elasticache_route_table_ids",
                        "type": "StringList",
                        "value": "\\\"${join(\"\\\",\\\"\", module.vpc.elasticache_route_table_ids)}\\\"",
                        "tags": {
                            "Terraform": "true",
                            "Prefix": "${var.prefix}",
                            "Workspace": "${terraform.workspace}"
                        }
                    }
                }
            }
        ],
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/main.tf": [
            {
                "aws_vpc": {
                    "module.vpc.aws_vpc.this": {
                        "count": "${local.create_vpc ? 1 : 0}",
                        "cidr_block": "${var.use_ipam_pool ? None : var.cidr}",
                        "ipv4_ipam_pool_id": "${var.ipv4_ipam_pool_id}",
                        "ipv4_netmask_length": "${var.ipv4_netmask_length}",
                        "assign_generated_ipv6_cidr_block": "${var.enable_ipv6 && !var.use_ipam_pool ? True : None}",
                        "ipv6_cidr_block": "${var.ipv6_cidr}",
                        "ipv6_ipam_pool_id": "${var.ipv6_ipam_pool_id}",
                        "ipv6_netmask_length": "${var.ipv6_netmask_length}",
                        "ipv6_cidr_block_network_border_group": "${var.ipv6_cidr_block_network_border_group}",
                        "instance_tenancy": "${var.instance_tenancy}",
                        "enable_dns_hostnames": "${var.enable_dns_hostnames}",
                        "enable_dns_support": "${var.enable_dns_support}",
                        "enable_network_address_usage_metrics": "${var.enable_network_address_usage_metrics}",
                        "tags": "${merge({'Name': '${var.name}'}, var.tags, var.vpc_tags)}"
                    }
                }
            },
            {
                "aws_vpc_ipv4_cidr_block_association": {
                    "module.vpc.aws_vpc_ipv4_cidr_block_association.this": {
                        "count": "${local.create_vpc && length(var.secondary_cidr_blocks) > 0 ? length(var.secondary_cidr_blocks) : 0}",
                        "vpc_id": "${aws_vpc.this[0].id}",
                        "cidr_block": "${element(var.secondary_cidr_blocks, count.index)}"
                    }
                }
            },
            {
                "aws_vpc_dhcp_options": {
                    "module.vpc.aws_vpc_dhcp_options.this": {
                        "count": "${local.create_vpc && var.enable_dhcp_options ? 1 : 0}",
                        "domain_name": "${var.dhcp_options_domain_name}",
                        "domain_name_servers": "${var.dhcp_options_domain_name_servers}",
                        "ntp_servers": "${var.dhcp_options_ntp_servers}",
                        "netbios_name_servers": "${var.dhcp_options_netbios_name_servers}",
                        "netbios_node_type": "${var.dhcp_options_netbios_node_type}",
                        "tags": "${merge({'Name': '${var.name}'}, var.tags, var.dhcp_options_tags)}"
                    }
                }
            },
            {
                "aws_vpc_dhcp_options_association": {
                    "module.vpc.aws_vpc_dhcp_options_association.this": {
                        "count": "${local.create_vpc && var.enable_dhcp_options ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "dhcp_options_id": "${aws_vpc_dhcp_options.this[0].id}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.public": {
                        "count": "${local.create_public_subnets && !var.one_nat_gateway_per_az || local.len_public_subnets >= length(var.azs) ? local.len_public_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.public_subnet_ipv6_native ? True : var.public_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.public_subnet_ipv6_native ? None : element(concat(var.public_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.public_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.public_subnet_ipv6_native && var.public_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.public_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.public_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.public_subnet_ipv6_native}",
                        "map_public_ip_on_launch": "${var.map_public_ip_on_launch}",
                        "private_dns_hostname_type_on_launch": "${var.public_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.public_subnet_names[count.index], format(\"${var.name}-${var.public_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.public_subnet_tags, lookup(var.public_subnet_tags_per_az, element(var.azs, count.index), {}))}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.public": {
                        "count": "${local.create_public_subnets ? local.num_public_route_tables : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.create_multiple_public_route_tables ? format(\"${var.name}-${var.public_subnet_suffix}-%s\", element(var.azs, count.index)) : \"${var.name}-${var.public_subnet_suffix}\"}'}, var.tags, var.public_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.public": {
                        "count": "${local.create_public_subnets ? local.len_public_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.public[*].id, count.index)}",
                        "route_table_id": "${element(aws_route_table.public[*].id, var.create_multiple_public_route_tables ? count.index : 0)}"
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.public_internet_gateway": {
                        "count": "${local.create_public_subnets && var.create_igw ? 1 : 0}",
                        "route_table_id": "${aws_route_table.public[0].id}",
                        "destination_cidr_block": "0.0.0.0/0",
                        "gateway_id": "${aws_internet_gateway.this[0].id}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.public_internet_gateway_ipv6": {
                        "count": "${local.create_public_subnets && var.create_igw && var.enable_ipv6 ? 1 : 0}",
                        "route_table_id": "${aws_route_table.public[0].id}",
                        "destination_ipv6_cidr_block": "::/0",
                        "gateway_id": "${aws_internet_gateway.this[0].id}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.public": {
                        "count": "${local.create_public_subnets && var.public_dedicated_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.public[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.public_subnet_suffix}'}, var.tags, var.public_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.public_inbound": {
                        "count": "${local.create_public_subnets && var.public_dedicated_network_acl ? length(var.public_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.public[0].id}",
                        "egress": false,
                        "rule_number": "${var.public_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.public_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.public_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.public_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.public_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.public_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.public_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.public_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.public_outbound": {
                        "count": "${local.create_public_subnets && var.public_dedicated_network_acl ? length(var.public_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.public[0].id}",
                        "egress": true,
                        "rule_number": "${var.public_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.public_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.public_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.public_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.public_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.public_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.public_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.public_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.public_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.private": {
                        "count": "${local.create_private_subnets ? local.len_private_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.private_subnet_ipv6_native ? True : var.private_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.private_subnet_ipv6_native ? None : element(concat(var.private_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.private_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.private_subnet_ipv6_native && var.private_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.private_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.private_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.private_subnet_ipv6_native}",
                        "private_dns_hostname_type_on_launch": "${var.private_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.private_subnet_names[count.index], format(\"${var.name}-${var.private_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.private_subnet_tags, lookup(var.private_subnet_tags_per_az, element(var.azs, count.index), {}))}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.private": {
                        "count": "${local.create_private_subnets && local.max_subnet_length > 0 ? local.nat_gateway_count : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.single_nat_gateway ? \"${var.name}-${var.private_subnet_suffix}\" : format(\"${var.name}-${var.private_subnet_suffix}-%s\", element(var.azs, count.index))}'}, var.tags, var.private_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.private": {
                        "count": "${local.create_private_subnets ? local.len_private_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.private[*].id, count.index)}",
                        "route_table_id": "${element(aws_route_table.private[*].id, var.single_nat_gateway ? 0 : count.index)}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.private": {
                        "count": "${local.create_private_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.private[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.private_subnet_suffix}'}, var.tags, var.private_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.private_inbound": {
                        "count": "${local.create_private_network_acl ? length(var.private_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.private[0].id}",
                        "egress": false,
                        "rule_number": "${var.private_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.private_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.private_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.private_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.private_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.private_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.private_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.private_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.private_outbound": {
                        "count": "${local.create_private_network_acl ? length(var.private_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.private[0].id}",
                        "egress": true,
                        "rule_number": "${var.private_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.private_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.private_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.private_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.private_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.private_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.private_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.private_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.private_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.database": {
                        "count": "${local.create_database_subnets ? local.len_database_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.database_subnet_ipv6_native ? True : var.database_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.database_subnet_ipv6_native ? None : element(concat(var.database_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.database_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.database_subnet_ipv6_native && var.database_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.database_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.database_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.database_subnet_ipv6_native}",
                        "private_dns_hostname_type_on_launch": "${var.database_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.database_subnet_names[count.index], format(\"${var.name}-${var.database_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.database_subnet_tags)}"
                    }
                }
            },
            {
                "aws_db_subnet_group": {
                    "module.vpc.aws_db_subnet_group.database": {
                        "count": "${local.create_database_subnets && var.create_database_subnet_group ? 1 : 0}",
                        "name": "${lower(coalesce(var.database_subnet_group_name, var.name))}",
                        "description": "Database subnet group for ${var.name}",
                        "subnet_ids": "${aws_subnet.database[*].id}",
                        "tags": "${merge({'Name': '${lower(coalesce(var.database_subnet_group_name, var.name))}'}, var.tags, var.database_subnet_group_tags)}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.database": {
                        "count": "${local.create_database_route_table ? var.single_nat_gateway || var.create_database_internet_gateway_route ? 1 : local.len_database_subnets : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.single_nat_gateway || var.create_database_internet_gateway_route ? \"${var.name}-${var.database_subnet_suffix}\" : format(\"${var.name}-${var.database_subnet_suffix}-%s\", element(var.azs, count.index))}'}, var.tags, var.database_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.database": {
                        "count": "${local.create_database_subnets ? local.len_database_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.database[*].id, count.index)}",
                        "route_table_id": "${element(coalescelist(aws_route_table.database[*].id, aws_route_table.private[*].id), var.create_database_subnet_route_table ? var.single_nat_gateway || var.create_database_internet_gateway_route ? 0 : count.index : count.index)}"
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.database_internet_gateway": {
                        "count": "${local.create_database_route_table && var.create_igw && var.create_database_internet_gateway_route && !var.create_database_nat_gateway_route ? 1 : 0}",
                        "route_table_id": "${aws_route_table.database[0].id}",
                        "destination_cidr_block": "0.0.0.0/0",
                        "gateway_id": "${aws_internet_gateway.this[0].id}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.database_nat_gateway": {
                        "count": "${local.create_database_route_table && !var.create_database_internet_gateway_route && var.create_database_nat_gateway_route && var.enable_nat_gateway ? var.single_nat_gateway ? 1 : local.len_database_subnets : 0}",
                        "route_table_id": "${element(aws_route_table.database[*].id, count.index)}",
                        "destination_cidr_block": "0.0.0.0/0",
                        "nat_gateway_id": "${element(aws_nat_gateway.this[*].id, count.index)}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.database_dns64_nat_gateway": {
                        "count": "${local.create_database_route_table && !var.create_database_internet_gateway_route && var.create_database_nat_gateway_route && var.enable_nat_gateway && var.enable_ipv6 && var.private_subnet_enable_dns64 ? var.single_nat_gateway ? 1 : local.len_database_subnets : 0}",
                        "route_table_id": "${element(aws_route_table.database[*].id, count.index)}",
                        "destination_ipv6_cidr_block": "64:ff9b::/96",
                        "nat_gateway_id": "${element(aws_nat_gateway.this[*].id, count.index)}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.database_ipv6_egress": {
                        "count": "${local.create_database_route_table && var.create_egress_only_igw && var.enable_ipv6 && var.create_database_internet_gateway_route ? 1 : 0}",
                        "route_table_id": "${aws_route_table.database[0].id}",
                        "destination_ipv6_cidr_block": "::/0",
                        "egress_only_gateway_id": "${aws_egress_only_internet_gateway.this[0].id}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.database": {
                        "count": "${local.create_database_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.database[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.database_subnet_suffix}'}, var.tags, var.database_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.database_inbound": {
                        "count": "${local.create_database_network_acl ? length(var.database_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.database[0].id}",
                        "egress": false,
                        "rule_number": "${var.database_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.database_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.database_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.database_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.database_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.database_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.database_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.database_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.database_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.database_outbound": {
                        "count": "${local.create_database_network_acl ? length(var.database_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.database[0].id}",
                        "egress": true,
                        "rule_number": "${var.database_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.database_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.database_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.database_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.database_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.database_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.database_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.database_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.database_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.redshift": {
                        "count": "${local.create_redshift_subnets ? local.len_redshift_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.redshift_subnet_ipv6_native ? True : var.redshift_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.redshift_subnet_ipv6_native ? None : element(concat(var.redshift_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.redshift_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.redshift_subnet_ipv6_native && var.redshift_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.redshift_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.redshift_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.redshift_subnet_ipv6_native}",
                        "private_dns_hostname_type_on_launch": "${var.redshift_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.redshift_subnet_names[count.index], format(\"${var.name}-${var.redshift_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.redshift_subnet_tags)}"
                    }
                }
            },
            {
                "aws_redshift_subnet_group": {
                    "module.vpc.aws_redshift_subnet_group.redshift": {
                        "count": "${local.create_redshift_subnets && var.create_redshift_subnet_group ? 1 : 0}",
                        "name": "${lower(coalesce(var.redshift_subnet_group_name, var.name))}",
                        "description": "Redshift subnet group for ${var.name}",
                        "subnet_ids": "${aws_subnet.redshift[*].id}",
                        "tags": "${merge({'Name': '${coalesce(var.redshift_subnet_group_name, var.name)}'}, var.tags, var.redshift_subnet_group_tags)}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.redshift": {
                        "count": "${local.create_redshift_route_table ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.name}-${var.redshift_subnet_suffix}'}, var.tags, var.redshift_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.redshift": {
                        "count": "${local.create_redshift_subnets && !var.enable_public_redshift ? local.len_redshift_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.redshift[*].id, count.index)}",
                        "route_table_id": "${element(coalescelist(aws_route_table.redshift[*].id, aws_route_table.private[*].id), var.single_nat_gateway || var.create_redshift_subnet_route_table ? 0 : count.index)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.redshift_public": {
                        "count": "${local.create_redshift_subnets && var.enable_public_redshift ? local.len_redshift_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.redshift[*].id, count.index)}",
                        "route_table_id": "${element(coalescelist(aws_route_table.redshift[*].id, aws_route_table.public[*].id), var.single_nat_gateway || var.create_redshift_subnet_route_table ? 0 : count.index)}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.redshift": {
                        "count": "${local.create_redshift_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.redshift[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.redshift_subnet_suffix}'}, var.tags, var.redshift_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.redshift_inbound": {
                        "count": "${local.create_redshift_network_acl ? length(var.redshift_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.redshift[0].id}",
                        "egress": false,
                        "rule_number": "${var.redshift_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.redshift_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.redshift_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.redshift_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.redshift_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.redshift_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.redshift_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.redshift_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.redshift_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.redshift_outbound": {
                        "count": "${local.create_redshift_network_acl ? length(var.redshift_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.redshift[0].id}",
                        "egress": true,
                        "rule_number": "${var.redshift_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.redshift_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.redshift_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.redshift_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.redshift_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.redshift_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.redshift_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.redshift_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.redshift_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.elasticache": {
                        "count": "${local.create_elasticache_subnets ? local.len_elasticache_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.elasticache_subnet_ipv6_native ? True : var.elasticache_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.elasticache_subnet_ipv6_native ? None : element(concat(var.elasticache_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.elasticache_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.elasticache_subnet_ipv6_native && var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.elasticache_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.elasticache_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.elasticache_subnet_ipv6_native}",
                        "private_dns_hostname_type_on_launch": "${var.elasticache_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.elasticache_subnet_names[count.index], format(\"${var.name}-${var.elasticache_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.elasticache_subnet_tags)}"
                    }
                }
            },
            {
                "aws_elasticache_subnet_group": {
                    "module.vpc.aws_elasticache_subnet_group.elasticache": {
                        "count": "${local.create_elasticache_subnets && var.create_elasticache_subnet_group ? 1 : 0}",
                        "name": "${coalesce(var.elasticache_subnet_group_name, var.name)}",
                        "description": "ElastiCache subnet group for ${var.name}",
                        "subnet_ids": "${aws_subnet.elasticache[*].id}",
                        "tags": "${merge({'Name': '${coalesce(var.elasticache_subnet_group_name, var.name)}'}, var.tags, var.elasticache_subnet_group_tags)}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.elasticache": {
                        "count": "${local.create_elasticache_route_table ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.name}-${var.elasticache_subnet_suffix}'}, var.tags, var.elasticache_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.elasticache": {
                        "count": "${local.create_elasticache_subnets ? local.len_elasticache_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.elasticache[*].id, count.index)}",
                        "route_table_id": "${element(coalescelist(aws_route_table.elasticache[*].id, aws_route_table.private[*].id), var.single_nat_gateway || var.create_elasticache_subnet_route_table ? 0 : count.index)}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.elasticache": {
                        "count": "${local.create_elasticache_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.elasticache[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.elasticache_subnet_suffix}'}, var.tags, var.elasticache_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.elasticache_inbound": {
                        "count": "${local.create_elasticache_network_acl ? length(var.elasticache_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.elasticache[0].id}",
                        "egress": false,
                        "rule_number": "${var.elasticache_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.elasticache_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.elasticache_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.elasticache_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.elasticache_outbound": {
                        "count": "${local.create_elasticache_network_acl ? length(var.elasticache_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.elasticache[0].id}",
                        "egress": true,
                        "rule_number": "${var.elasticache_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.elasticache_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.elasticache_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.elasticache_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.intra": {
                        "count": "${local.create_intra_subnets ? local.len_intra_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.intra_subnet_ipv6_native ? True : var.intra_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) > 0 ? element(var.azs, count.index) : None}",
                        "availability_zone_id": "${length(regexall(\"^[a-z]{2}-\", element(var.azs, count.index))) == 0 ? element(var.azs, count.index) : None}",
                        "cidr_block": "${var.intra_subnet_ipv6_native ? None : element(concat(var.intra_subnets, ['']), count.index)}",
                        "enable_dns64": "${var.enable_ipv6 && var.intra_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.intra_subnet_ipv6_native && var.intra_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.intra_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.intra_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.intra_subnet_ipv6_native}",
                        "private_dns_hostname_type_on_launch": "${var.intra_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.intra_subnet_names[count.index], format(\"${var.name}-${var.intra_subnet_suffix}-%s\", element(var.azs, count.index)))}'}, var.tags, var.intra_subnet_tags)}"
                    }
                }
            },
            {
                "aws_route_table": {
                    "module.vpc.aws_route_table.intra": {
                        "count": "${local.create_intra_subnets ? local.num_intra_route_tables : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.create_multiple_intra_route_tables ? format(\"${var.name}-${var.intra_subnet_suffix}-%s\", element(var.azs, count.index)) : \"${var.name}-${var.intra_subnet_suffix}\"}'}, var.tags, var.intra_route_table_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.intra": {
                        "count": "${local.create_intra_subnets ? local.len_intra_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.intra[*].id, count.index)}",
                        "route_table_id": "${element(aws_route_table.intra[*].id, var.create_multiple_intra_route_tables ? count.index : 0)}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.intra": {
                        "count": "${local.create_intra_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.intra[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.intra_subnet_suffix}'}, var.tags, var.intra_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.intra_inbound": {
                        "count": "${local.create_intra_network_acl ? length(var.intra_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.intra[0].id}",
                        "egress": false,
                        "rule_number": "${var.intra_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.intra_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.intra_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.intra_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.intra_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.intra_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.intra_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.intra_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.intra_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.intra_outbound": {
                        "count": "${local.create_intra_network_acl ? length(var.intra_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.intra[0].id}",
                        "egress": true,
                        "rule_number": "${var.intra_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.intra_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.intra_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.intra_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.intra_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.intra_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.intra_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.intra_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.intra_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_subnet": {
                    "module.vpc.aws_subnet.outpost": {
                        "count": "${local.create_outpost_subnets ? local.len_outpost_subnets : 0}",
                        "assign_ipv6_address_on_creation": "${var.enable_ipv6 && var.outpost_subnet_ipv6_native ? True : var.outpost_subnet_assign_ipv6_address_on_creation}",
                        "availability_zone": "${var.outpost_az}",
                        "cidr_block": "${var.outpost_subnet_ipv6_native ? None : element(concat(var.outpost_subnets, ['']), count.index)}",
                        "customer_owned_ipv4_pool": "${var.customer_owned_ipv4_pool}",
                        "enable_dns64": "${var.enable_ipv6 && var.outpost_subnet_enable_dns64}",
                        "enable_resource_name_dns_aaaa_record_on_launch": "${var.enable_ipv6 && var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch}",
                        "enable_resource_name_dns_a_record_on_launch": "${!var.outpost_subnet_ipv6_native && var.outpost_subnet_enable_resource_name_dns_a_record_on_launch}",
                        "ipv6_cidr_block": "${var.enable_ipv6 && length(var.outpost_subnet_ipv6_prefixes) > 0 ? cidrsubnet(aws_vpc.this[0].ipv6_cidr_block, 8, var.outpost_subnet_ipv6_prefixes[count.index]) : None}",
                        "ipv6_native": "${var.enable_ipv6 && var.outpost_subnet_ipv6_native}",
                        "map_customer_owned_ip_on_launch": "${var.map_customer_owned_ip_on_launch}",
                        "outpost_arn": "${var.outpost_arn}",
                        "private_dns_hostname_type_on_launch": "${var.outpost_subnet_private_dns_hostname_type_on_launch}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${try(var.outpost_subnet_names[count.index], format(\"${var.name}-${var.outpost_subnet_suffix}-%s\", var.outpost_az))}'}, var.tags, var.outpost_subnet_tags)}"
                    }
                }
            },
            {
                "aws_route_table_association": {
                    "module.vpc.aws_route_table_association.outpost": {
                        "count": "${local.create_outpost_subnets ? local.len_outpost_subnets : 0}",
                        "subnet_id": "${element(aws_subnet.outpost[*].id, count.index)}",
                        "route_table_id": "${element(aws_route_table.private[*].id, var.single_nat_gateway ? 0 : count.index)}"
                    }
                }
            },
            {
                "aws_network_acl": {
                    "module.vpc.aws_network_acl.outpost": {
                        "count": "${local.create_outpost_network_acl ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "subnet_ids": "${aws_subnet.outpost[*].id}",
                        "tags": "${merge({'Name': '${var.name}-${var.outpost_subnet_suffix}'}, var.tags, var.outpost_acl_tags)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.outpost_inbound": {
                        "count": "${local.create_outpost_network_acl ? length(var.outpost_inbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.outpost[0].id}",
                        "egress": false,
                        "rule_number": "${var.outpost_inbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.outpost_inbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.outpost_inbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.outpost_inbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.outpost_inbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.outpost_inbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.outpost_inbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.outpost_inbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.outpost_inbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_network_acl_rule": {
                    "module.vpc.aws_network_acl_rule.outpost_outbound": {
                        "count": "${local.create_outpost_network_acl ? length(var.outpost_outbound_acl_rules) : 0}",
                        "network_acl_id": "${aws_network_acl.outpost[0].id}",
                        "egress": true,
                        "rule_number": "${var.outpost_outbound_acl_rules[count.index][\"rule_number\"]}",
                        "rule_action": "${var.outpost_outbound_acl_rules[count.index][\"rule_action\"]}",
                        "from_port": "${lookup(var.outpost_outbound_acl_rules[count.index], \"from_port\", None)}",
                        "to_port": "${lookup(var.outpost_outbound_acl_rules[count.index], \"to_port\", None)}",
                        "icmp_code": "${lookup(var.outpost_outbound_acl_rules[count.index], \"icmp_code\", None)}",
                        "icmp_type": "${lookup(var.outpost_outbound_acl_rules[count.index], \"icmp_type\", None)}",
                        "protocol": "${var.outpost_outbound_acl_rules[count.index][\"protocol\"]}",
                        "cidr_block": "${lookup(var.outpost_outbound_acl_rules[count.index], \"cidr_block\", None)}",
                        "ipv6_cidr_block": "${lookup(var.outpost_outbound_acl_rules[count.index], \"ipv6_cidr_block\", None)}"
                    }
                }
            },
            {
                "aws_internet_gateway": {
                    "module.vpc.aws_internet_gateway.this": {
                        "count": "${local.create_public_subnets && var.create_igw ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.name}'}, var.tags, var.igw_tags)}"
                    }
                }
            },
            {
                "aws_egress_only_internet_gateway": {
                    "module.vpc.aws_egress_only_internet_gateway.this": {
                        "count": "${local.create_vpc && var.create_egress_only_igw && var.enable_ipv6 && local.max_subnet_length > 0 ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "tags": "${merge({'Name': '${var.name}'}, var.tags, var.igw_tags)}"
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.private_ipv6_egress": {
                        "count": "${local.create_vpc && var.create_egress_only_igw && var.enable_ipv6 && local.len_private_subnets > 0 ? local.nat_gateway_count : 0}",
                        "route_table_id": "${element(aws_route_table.private[*].id, count.index)}",
                        "destination_ipv6_cidr_block": "::/0",
                        "egress_only_gateway_id": "${element(aws_egress_only_internet_gateway.this[*].id, 0)}"
                    }
                }
            },
            {
                "aws_eip": {
                    "module.vpc.aws_eip.nat": {
                        "count": "${local.create_vpc && var.enable_nat_gateway && !var.reuse_nat_ips ? local.nat_gateway_count : 0}",
                        "domain": "vpc",
                        "tags": "${merge({'Name': '${format(\"${var.name}-%s\", element(var.azs, var.single_nat_gateway ? 0 : count.index))}'}, var.tags, var.nat_eip_tags)}",
                        "depends_on": [
                            "${aws_internet_gateway.this}"
                        ]
                    }
                }
            },
            {
                "aws_nat_gateway": {
                    "module.vpc.aws_nat_gateway.this": {
                        "count": "${local.create_vpc && var.enable_nat_gateway ? local.nat_gateway_count : 0}",
                        "allocation_id": "${element(local.nat_gateway_ips, var.single_nat_gateway ? 0 : count.index)}",
                        "subnet_id": "${element(aws_subnet.public[*].id, var.single_nat_gateway ? 0 : count.index)}",
                        "tags": "${merge({'Name': '${format(\"${var.name}-%s\", element(var.azs, var.single_nat_gateway ? 0 : count.index))}'}, var.tags, var.nat_gateway_tags)}",
                        "depends_on": [
                            "${aws_internet_gateway.this}"
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.private_nat_gateway": {
                        "count": "${local.create_vpc && var.enable_nat_gateway ? local.nat_gateway_count : 0}",
                        "route_table_id": "${element(aws_route_table.private[*].id, count.index)}",
                        "destination_cidr_block": "${var.nat_gateway_destination_cidr_block}",
                        "nat_gateway_id": "${element(aws_nat_gateway.this[*].id, count.index)}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_route": {
                    "module.vpc.aws_route.private_dns64_nat_gateway": {
                        "count": "${local.create_vpc && var.enable_nat_gateway && var.enable_ipv6 && var.private_subnet_enable_dns64 ? local.nat_gateway_count : 0}",
                        "route_table_id": "${element(aws_route_table.private[*].id, count.index)}",
                        "destination_ipv6_cidr_block": "64:ff9b::/96",
                        "nat_gateway_id": "${element(aws_nat_gateway.this[*].id, count.index)}",
                        "timeouts": [
                            {
                                "create": "5m"
                            }
                        ]
                    }
                }
            },
            {
                "aws_customer_gateway": {
                    "module.vpc.aws_customer_gateway.this": {
                        "for_each": "${var.customer_gateways}",
                        "bgp_asn": "${each.value[\"bgp_asn\"]}",
                        "ip_address": "${each.value[\"ip_address\"]}",
                        "device_name": "${lookup(each.value, \"device_name\", None)}",
                        "type": "ipsec.1",
                        "tags": "${merge({'Name': '${var.name}-${each.key}'}, var.tags, var.customer_gateway_tags)}",
                        "lifecycle": [
                            {
                                "create_before_destroy": true
                            }
                        ]
                    }
                }
            },
            {
                "aws_vpn_gateway": {
                    "module.vpc.aws_vpn_gateway.this": {
                        "count": "${local.create_vpc && var.enable_vpn_gateway ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "amazon_side_asn": "${var.amazon_side_asn}",
                        "availability_zone": "${var.vpn_gateway_az}",
                        "tags": "${merge({'Name': '${var.name}'}, var.tags, var.vpn_gateway_tags)}"
                    }
                }
            },
            {
                "aws_vpn_gateway_attachment": {
                    "module.vpc.aws_vpn_gateway_attachment.this": {
                        "count": "${var.vpn_gateway_id != \"\" ? 1 : 0}",
                        "vpc_id": "${local.vpc_id}",
                        "vpn_gateway_id": "${var.vpn_gateway_id}"
                    }
                }
            },
            {
                "aws_vpn_gateway_route_propagation": {
                    "module.vpc.aws_vpn_gateway_route_propagation.public": {
                        "count": "${local.create_vpc && var.propagate_public_route_tables_vgw && var.enable_vpn_gateway || var.vpn_gateway_id != \"\" ? 1 : 0}",
                        "route_table_id": "${element(aws_route_table.public[*].id, count.index)}",
                        "vpn_gateway_id": "${element(concat(aws_vpn_gateway.this[*].id, aws_vpn_gateway_attachment.this[*].vpn_gateway_id), count.index)}"
                    }
                }
            },
            {
                "aws_vpn_gateway_route_propagation": {
                    "module.vpc.aws_vpn_gateway_route_propagation.private": {
                        "count": "${local.create_vpc && var.propagate_private_route_tables_vgw && var.enable_vpn_gateway || var.vpn_gateway_id != \"\" ? local.len_private_subnets : 0}",
                        "route_table_id": "${element(aws_route_table.private[*].id, count.index)}",
                        "vpn_gateway_id": "${element(concat(aws_vpn_gateway.this[*].id, aws_vpn_gateway_attachment.this[*].vpn_gateway_id), count.index)}"
                    }
                }
            },
            {
                "aws_vpn_gateway_route_propagation": {
                    "module.vpc.aws_vpn_gateway_route_propagation.intra": {
                        "count": "${local.create_vpc && var.propagate_intra_route_tables_vgw && var.enable_vpn_gateway || var.vpn_gateway_id != \"\" ? local.len_intra_subnets : 0}",
                        "route_table_id": "${element(aws_route_table.intra[*].id, count.index)}",
                        "vpn_gateway_id": "${element(concat(aws_vpn_gateway.this[*].id, aws_vpn_gateway_attachment.this[*].vpn_gateway_id), count.index)}"
                    }
                }
            },
            {
                "aws_default_vpc": {
                    "module.vpc.aws_default_vpc.this": {
                        "count": "${var.manage_default_vpc ? 1 : 0}",
                        "enable_dns_support": "${var.default_vpc_enable_dns_support}",
                        "enable_dns_hostnames": "${var.default_vpc_enable_dns_hostnames}",
                        "tags": "${merge({'Name': '${coalesce(var.default_vpc_name, \"default\")}'}, var.tags, var.default_vpc_tags)}"
                    }
                }
            },
            {
                "aws_default_security_group": {
                    "module.vpc.aws_default_security_group.this": {
                        "count": "${local.create_vpc && var.manage_default_security_group ? 1 : 0}",
                        "vpc_id": "${aws_vpc.this[0].id}",
                        "dynamic": [
                            {
                                "ingress": {
                                    "for_each": "${var.default_security_group_ingress}",
                                    "content": [
                                        {
                                            "self": "${lookup(ingress.value, \"self\", None)}",
                                            "cidr_blocks": "${compact(split(\",\", lookup(ingress.value, \"cidr_blocks\", \"\")))}",
                                            "ipv6_cidr_blocks": "${compact(split(\",\", lookup(ingress.value, \"ipv6_cidr_blocks\", \"\")))}",
                                            "prefix_list_ids": "${compact(split(\",\", lookup(ingress.value, \"prefix_list_ids\", \"\")))}",
                                            "security_groups": "${compact(split(\",\", lookup(ingress.value, \"security_groups\", \"\")))}",
                                            "description": "${lookup(ingress.value, \"description\", None)}",
                                            "from_port": "${lookup(ingress.value, \"from_port\", 0)}",
                                            "to_port": "${lookup(ingress.value, \"to_port\", 0)}",
                                            "protocol": "${lookup(ingress.value, \"protocol\", \"-1\")}"
                                        }
                                    ]
                                }
                            },
                            {
                                "egress": {
                                    "for_each": "${var.default_security_group_egress}",
                                    "content": [
                                        {
                                            "self": "${lookup(egress.value, \"self\", None)}",
                                            "cidr_blocks": "${compact(split(\",\", lookup(egress.value, \"cidr_blocks\", \"\")))}",
                                            "ipv6_cidr_blocks": "${compact(split(\",\", lookup(egress.value, \"ipv6_cidr_blocks\", \"\")))}",
                                            "prefix_list_ids": "${compact(split(\",\", lookup(egress.value, \"prefix_list_ids\", \"\")))}",
                                            "security_groups": "${compact(split(\",\", lookup(egress.value, \"security_groups\", \"\")))}",
                                            "description": "${lookup(egress.value, \"description\", None)}",
                                            "from_port": "${lookup(egress.value, \"from_port\", 0)}",
                                            "to_port": "${lookup(egress.value, \"to_port\", 0)}",
                                            "protocol": "${lookup(egress.value, \"protocol\", \"-1\")}"
                                        }
                                    ]
                                }
                            }
                        ],
                        "tags": "${merge({'Name': '${coalesce(var.default_security_group_name, \"${var.name}-default\")}'}, var.tags, var.default_security_group_tags)}"
                    }
                }
            },
            {
                "aws_default_network_acl": {
                    "module.vpc.aws_default_network_acl.this": {
                        "count": "${local.create_vpc && var.manage_default_network_acl ? 1 : 0}",
                        "default_network_acl_id": "${aws_vpc.this[0].default_network_acl_id}",
                        "subnet_ids": null,
                        "dynamic": [
                            {
                                "ingress": {
                                    "for_each": "${var.default_network_acl_ingress}",
                                    "content": [
                                        {
                                            "action": "${ingress.value.action}",
                                            "cidr_block": "${lookup(ingress.value, \"cidr_block\", None)}",
                                            "from_port": "${ingress.value.from_port}",
                                            "icmp_code": "${lookup(ingress.value, \"icmp_code\", None)}",
                                            "icmp_type": "${lookup(ingress.value, \"icmp_type\", None)}",
                                            "ipv6_cidr_block": "${lookup(ingress.value, \"ipv6_cidr_block\", None)}",
                                            "protocol": "${ingress.value.protocol}",
                                            "rule_no": "${ingress.value.rule_no}",
                                            "to_port": "${ingress.value.to_port}"
                                        }
                                    ]
                                }
                            },
                            {
                                "egress": {
                                    "for_each": "${var.default_network_acl_egress}",
                                    "content": [
                                        {
                                            "action": "${egress.value.action}",
                                            "cidr_block": "${lookup(egress.value, \"cidr_block\", None)}",
                                            "from_port": "${egress.value.from_port}",
                                            "icmp_code": "${lookup(egress.value, \"icmp_code\", None)}",
                                            "icmp_type": "${lookup(egress.value, \"icmp_type\", None)}",
                                            "ipv6_cidr_block": "${lookup(egress.value, \"ipv6_cidr_block\", None)}",
                                            "protocol": "${egress.value.protocol}",
                                            "rule_no": "${egress.value.rule_no}",
                                            "to_port": "${egress.value.to_port}"
                                        }
                                    ]
                                }
                            }
                        ],
                        "tags": "${merge({'Name': '${coalesce(var.default_network_acl_name, \"${var.name}-default\")}'}, var.tags, var.default_network_acl_tags)}",
                        "lifecycle": [
                            {
                                "ignore_changes": [
                                    "${subnet_ids}"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "aws_default_route_table": {
                    "module.vpc.aws_default_route_table.default": {
                        "count": "${local.create_vpc && var.manage_default_route_table ? 1 : 0}",
                        "default_route_table_id": "${aws_vpc.this[0].default_route_table_id}",
                        "propagating_vgws": "${var.default_route_table_propagating_vgws}",
                        "dynamic": [
                            {
                                "route": {
                                    "for_each": "${var.default_route_table_routes}",
                                    "content": [
                                        {
                                            "cidr_block": "${route.value.cidr_block}",
                                            "ipv6_cidr_block": "${lookup(route.value, \"ipv6_cidr_block\", None)}",
                                            "egress_only_gateway_id": "${lookup(route.value, \"egress_only_gateway_id\", None)}",
                                            "gateway_id": "${lookup(route.value, \"gateway_id\", None)}",
                                            "instance_id": "${lookup(route.value, \"instance_id\", None)}",
                                            "nat_gateway_id": "${lookup(route.value, \"nat_gateway_id\", None)}",
                                            "network_interface_id": "${lookup(route.value, \"network_interface_id\", None)}",
                                            "transit_gateway_id": "${lookup(route.value, \"transit_gateway_id\", None)}",
                                            "vpc_endpoint_id": "${lookup(route.value, \"vpc_endpoint_id\", None)}",
                                            "vpc_peering_connection_id": "${lookup(route.value, \"vpc_peering_connection_id\", None)}"
                                        }
                                    ]
                                }
                            }
                        ],
                        "timeouts": [
                            {
                                "create": "5m",
                                "update": "5m"
                            }
                        ],
                        "tags": "${merge({'Name': '${coalesce(var.default_route_table_name, \"${var.name}-default\")}'}, var.tags, var.default_route_table_tags)}"
                    }
                }
            }
        ],
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/vpc-flow-logs.tf": [
            {
                "aws_flow_log": {
                    "module.vpc.aws_flow_log.this": {
                        "count": "${local.enable_flow_log ? 1 : 0}",
                        "log_destination_type": "${var.flow_log_destination_type}",
                        "log_destination": "${local.flow_log_destination_arn}",
                        "log_format": "${var.flow_log_log_format}",
                        "iam_role_arn": "${local.flow_log_iam_role_arn}",
                        "deliver_cross_account_role": "${var.flow_log_deliver_cross_account_role}",
                        "traffic_type": "${var.flow_log_traffic_type}",
                        "vpc_id": "${local.vpc_id}",
                        "max_aggregation_interval": "${var.flow_log_max_aggregation_interval}",
                        "dynamic": [
                            {
                                "destination_options": {
                                    "for_each": "${var.flow_log_destination_type == \"s3\" ? [True] : []}",
                                    "content": [
                                        {
                                            "file_format": "${var.flow_log_file_format}",
                                            "hive_compatible_partitions": "${var.flow_log_hive_compatible_partitions}",
                                            "per_hour_partition": "${var.flow_log_per_hour_partition}"
                                        }
                                    ]
                                }
                            }
                        ],
                        "tags": "${merge(var.tags, var.vpc_flow_log_tags)}"
                    }
                }
            },
            {
                "aws_cloudwatch_log_group": {
                    "module.vpc.aws_cloudwatch_log_group.flow_log": {
                        "count": "${local.create_flow_log_cloudwatch_log_group ? 1 : 0}",
                        "name": "${var.flow_log_cloudwatch_log_group_name_prefix}${local.flow_log_cloudwatch_log_group_name_suffix}",
                        "retention_in_days": "${var.flow_log_cloudwatch_log_group_retention_in_days}",
                        "kms_key_id": "${var.flow_log_cloudwatch_log_group_kms_key_id}",
                        "skip_destroy": "${var.flow_log_cloudwatch_log_group_skip_destroy}",
                        "log_group_class": "${var.flow_log_cloudwatch_log_group_class}",
                        "tags": "${merge(var.tags, var.vpc_flow_log_tags)}"
                    }
                }
            },
            {
                "aws_iam_role": {
                    "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch": {
                        "count": "${local.create_flow_log_cloudwatch_iam_role ? 1 : 0}",
                        "name_prefix": "vpc-flow-log-role-",
                        "assume_role_policy": "${data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json}",
                        "permissions_boundary": "${var.vpc_flow_log_permissions_boundary}",
                        "tags": "${merge(var.tags, var.vpc_flow_log_tags)}"
                    }
                }
            },
            {
                "aws_iam_role_policy_attachment": {
                    "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch": {
                        "count": "${local.create_flow_log_cloudwatch_iam_role ? 1 : 0}",
                        "role": "${aws_iam_role.vpc_flow_log_cloudwatch[0].name}",
                        "policy_arn": "${aws_iam_policy.vpc_flow_log_cloudwatch[0].arn}"
                    }
                }
            },
            {
                "aws_iam_policy": {
                    "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch": {
                        "count": "${local.create_flow_log_cloudwatch_iam_role ? 1 : 0}",
                        "name_prefix": "vpc-flow-log-to-cloudwatch-",
                        "policy": "${data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json}",
                        "tags": "${merge(var.tags, var.vpc_flow_log_tags)}"
                    }
                }
            }
        ]
    },
    "all_variable": {
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/variables.tf": [
            {
                "prefix": {
                    "type": "${string}"
                }
            },
            {
                "vpc_cidr": {
                    "type": "${string}",
                    "nullable": false,
                    "default": "10.156.0.0/16"
                }
            },
            {
                "azs": {
                    "type": "${number}",
                    "nullable": false,
                    "default": 2
                }
            },
            {
                "one_nat_gateway_per_az": {
                    "type": "${bool}",
                    "nullable": false,
                    "default": true
                }
            },
            {
                "private_subnets": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": null
                }
            },
            {
                "public_subnets": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": null
                }
            },
            {
                "database_subnets": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": null
                }
            },
            {
                "elasticache_subnets": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": null
                }
            },
            {
                "intra_subnets": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": null
                }
            },
            {
                "private_subnet_names": {
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_names": {
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_names": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": []
                }
            },
            {
                "elasticache_subnet_names": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": []
                }
            },
            {
                "intra_subnet_names": {
                    "type": "${list(string)}",
                    "nullable": true,
                    "default": []
                }
            },
            {
                "enable_nat_gateway": {
                    "type": "${bool}",
                    "nullable": false,
                    "default": true
                }
            }
        ],
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/variables.tf": [
            {
                "create_vpc": {
                    "description": "Controls if VPC should be created (it affects almost all resources)",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "name": {
                    "description": "Name to be used on all the resources as identifier",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "cidr": {
                    "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`",
                    "type": "${string}",
                    "default": "10.0.0.0/16"
                }
            },
            {
                "secondary_cidr_blocks": {
                    "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "instance_tenancy": {
                    "description": "A tenancy option for instances launched into the VPC",
                    "type": "${string}",
                    "default": "default"
                }
            },
            {
                "azs": {
                    "description": "A list of availability zones names or ids in the region",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "enable_dns_hostnames": {
                    "description": "Should be true to enable DNS hostnames in the VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "enable_dns_support": {
                    "description": "Should be true to enable DNS support in the VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "enable_network_address_usage_metrics": {
                    "description": "Determines whether network address usage metrics are enabled for the VPC",
                    "type": "${bool}",
                    "default": null
                }
            },
            {
                "use_ipam_pool": {
                    "description": "Determines whether IPAM pool is used for CIDR allocation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "ipv4_ipam_pool_id": {
                    "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv4_netmask_length": {
                    "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "enable_ipv6": {
                    "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "ipv6_cidr": {
                    "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv6_ipam_pool_id": {
                    "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv6_netmask_length": {
                    "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "ipv6_cidr_block_network_border_group": {
                    "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "vpc_tags": {
                    "description": "Additional tags for the VPC",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "tags": {
                    "description": "A map of tags to add to all resources",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_dhcp_options": {
                    "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "dhcp_options_domain_name": {
                    "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "dhcp_options_domain_name_servers": {
                    "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": [
                        "AmazonProvidedDNS"
                    ]
                }
            },
            {
                "dhcp_options_ntp_servers": {
                    "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "dhcp_options_netbios_name_servers": {
                    "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "dhcp_options_netbios_node_type": {
                    "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "dhcp_options_tags": {
                    "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_subnets": {
                    "description": "A list of public subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_multiple_public_route_tables": {
                    "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "map_public_ip_on_launch": {
                    "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "public_subnet_names": {
                    "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_suffix": {
                    "description": "Suffix to append to public subnets name",
                    "type": "${string}",
                    "default": "public"
                }
            },
            {
                "public_subnet_tags": {
                    "description": "Additional tags for the public subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_subnet_tags_per_az": {
                    "description": "Additional tags for the public subnets where the primary key is the AZ",
                    "type": "${map(map(string))}",
                    "default": {}
                }
            },
            {
                "public_route_table_tags": {
                    "description": "Additional tags for the public route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_inbound_acl_rules": {
                    "description": "Public subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "public_outbound_acl_rules": {
                    "description": "Public subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "public_acl_tags": {
                    "description": "Additional tags for the public subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_subnets": {
                    "description": "A list of private subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "private_subnet_names": {
                    "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_suffix": {
                    "description": "Suffix to append to private subnets name",
                    "type": "${string}",
                    "default": "private"
                }
            },
            {
                "private_subnet_tags": {
                    "description": "Additional tags for the private subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_subnet_tags_per_az": {
                    "description": "Additional tags for the private subnets where the primary key is the AZ",
                    "type": "${map(map(string))}",
                    "default": {}
                }
            },
            {
                "private_route_table_tags": {
                    "description": "Additional tags for the private route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_inbound_acl_rules": {
                    "description": "Private subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "private_outbound_acl_rules": {
                    "description": "Private subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "private_acl_tags": {
                    "description": "Additional tags for the private subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_subnets": {
                    "description": "A list of database subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "database_subnet_names": {
                    "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_suffix": {
                    "description": "Suffix to append to database subnets name",
                    "type": "${string}",
                    "default": "db"
                }
            },
            {
                "create_database_subnet_route_table": {
                    "description": "Controls if separate route table for database should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_database_internet_gateway_route": {
                    "description": "Controls if an internet gateway route for public database access should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_database_nat_gateway_route": {
                    "description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_route_table_tags": {
                    "description": "Additional tags for the database route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_subnet_tags": {
                    "description": "Additional tags for the database subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_database_subnet_group": {
                    "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_group_name": {
                    "description": "Name of database subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "database_subnet_group_tags": {
                    "description": "Additional tags for the database subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_inbound_acl_rules": {
                    "description": "Database subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "database_outbound_acl_rules": {
                    "description": "Database subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "database_acl_tags": {
                    "description": "Additional tags for the database subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_subnets": {
                    "description": "A list of redshift subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "redshift_subnet_names": {
                    "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_suffix": {
                    "description": "Suffix to append to redshift subnets name",
                    "type": "${string}",
                    "default": "redshift"
                }
            },
            {
                "enable_public_redshift": {
                    "description": "Controls if redshift should have public routing table",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_redshift_subnet_route_table": {
                    "description": "Controls if separate route table for redshift should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_route_table_tags": {
                    "description": "Additional tags for the redshift route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_subnet_tags": {
                    "description": "Additional tags for the redshift subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_redshift_subnet_group": {
                    "description": "Controls if redshift subnet group should be created",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_group_name": {
                    "description": "Name of redshift subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "redshift_subnet_group_tags": {
                    "description": "Additional tags for the redshift subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_inbound_acl_rules": {
                    "description": "Redshift subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "redshift_outbound_acl_rules": {
                    "description": "Redshift subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "redshift_acl_tags": {
                    "description": "Additional tags for the redshift subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "elasticache_subnets": {
                    "description": "A list of elasticache subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "elasticache_subnet_names": {
                    "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_suffix": {
                    "description": "Suffix to append to elasticache subnets name",
                    "type": "${string}",
                    "default": "elasticache"
                }
            },
            {
                "elasticache_subnet_tags": {
                    "description": "Additional tags for the elasticache subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_elasticache_subnet_route_table": {
                    "description": "Controls if separate route table for elasticache should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_route_table_tags": {
                    "description": "Additional tags for the elasticache route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_elasticache_subnet_group": {
                    "description": "Controls if elasticache subnet group should be created",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_group_name": {
                    "description": "Name of elasticache subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "elasticache_subnet_group_tags": {
                    "description": "Additional tags for the elasticache subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "elasticache_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_inbound_acl_rules": {
                    "description": "Elasticache subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "elasticache_outbound_acl_rules": {
                    "description": "Elasticache subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "elasticache_acl_tags": {
                    "description": "Additional tags for the elasticache subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_subnets": {
                    "description": "A list of intra subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_multiple_intra_route_tables": {
                    "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "intra_subnet_names": {
                    "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_suffix": {
                    "description": "Suffix to append to intra subnets name",
                    "type": "${string}",
                    "default": "intra"
                }
            },
            {
                "intra_subnet_tags": {
                    "description": "Additional tags for the intra subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_route_table_tags": {
                    "description": "Additional tags for the intra route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_inbound_acl_rules": {
                    "description": "Intra subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "intra_outbound_acl_rules": {
                    "description": "Intra subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "intra_acl_tags": {
                    "description": "Additional tags for the intra subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "outpost_subnets": {
                    "description": "A list of outpost subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_az": {
                    "description": "AZ where Outpost is anchored",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "customer_owned_ipv4_pool": {
                    "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "map_customer_owned_ip_on_launch": {
                    "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_arn": {
                    "description": "ARN of Outpost you want to create a subnet in",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_names": {
                    "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_suffix": {
                    "description": "Suffix to append to outpost subnets name",
                    "type": "${string}",
                    "default": "outpost"
                }
            },
            {
                "outpost_subnet_tags": {
                    "description": "Additional tags for the outpost subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "outpost_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_inbound_acl_rules": {
                    "description": "Outpost subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "outpost_outbound_acl_rules": {
                    "description": "Outpost subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "outpost_acl_tags": {
                    "description": "Additional tags for the outpost subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_igw": {
                    "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "create_egress_only_igw": {
                    "description": "Controls if an Egress Only Internet Gateway is created and its related routes",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "igw_tags": {
                    "description": "Additional tags for the internet gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_nat_gateway": {
                    "description": "Should be true if you want to provision NAT Gateways for each of your private networks",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "nat_gateway_destination_cidr_block": {
                    "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route",
                    "type": "${string}",
                    "default": "0.0.0.0/0"
                }
            },
            {
                "single_nat_gateway": {
                    "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "one_nat_gateway_per_az": {
                    "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "reuse_nat_ips": {
                    "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "external_nat_ip_ids": {
                    "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "external_nat_ips": {
                    "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "nat_gateway_tags": {
                    "description": "Additional tags for the NAT gateways",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "nat_eip_tags": {
                    "description": "Additional tags for the NAT EIP",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "customer_gateways": {
                    "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
                    "type": "${map(map(any))}",
                    "default": {}
                }
            },
            {
                "customer_gateway_tags": {
                    "description": "Additional tags for the Customer Gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_vpn_gateway": {
                    "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpn_gateway_id": {
                    "description": "ID of VPN Gateway to attach to the VPC",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "amazon_side_asn": {
                    "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN",
                    "type": "${string}",
                    "default": "64512"
                }
            },
            {
                "vpn_gateway_az": {
                    "description": "The Availability Zone for the VPN Gateway",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "propagate_intra_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "propagate_private_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "propagate_public_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpn_gateway_tags": {
                    "description": "Additional tags for the VPN gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_vpc": {
                    "description": "Should be true to adopt and manage Default VPC",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "default_vpc_name": {
                    "description": "Name to be used on the Default VPC",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_vpc_enable_dns_support": {
                    "description": "Should be true to enable DNS support in the Default VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_vpc_enable_dns_hostnames": {
                    "description": "Should be true to enable DNS hostnames in the Default VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_vpc_tags": {
                    "description": "Additional tags for the Default VPC",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_security_group": {
                    "description": "Should be true to adopt and manage default security group",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_security_group_name": {
                    "description": "Name to be used on the default security group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_security_group_ingress": {
                    "description": "List of maps of ingress rules to set on the default security group",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_security_group_egress": {
                    "description": "List of maps of egress rules to set on the default security group",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_security_group_tags": {
                    "description": "Additional tags for the default security group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_network_acl": {
                    "description": "Should be true to adopt and manage Default Network ACL",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_network_acl_name": {
                    "description": "Name to be used on the Default Network ACL",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_network_acl_ingress": {
                    "description": "List of maps of ingress rules to set on the Default Network ACL",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_no": 100,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        },
                        {
                            "rule_no": 101,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "ipv6_cidr_block": "::/0"
                        }
                    ]
                }
            },
            {
                "default_network_acl_egress": {
                    "description": "List of maps of egress rules to set on the Default Network ACL",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_no": 100,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        },
                        {
                            "rule_no": 101,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "ipv6_cidr_block": "::/0"
                        }
                    ]
                }
            },
            {
                "default_network_acl_tags": {
                    "description": "Additional tags for the Default Network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_route_table": {
                    "description": "Should be true to manage default route table",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_route_table_name": {
                    "description": "Name to be used on the default route table",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_route_table_propagating_vgws": {
                    "description": "List of virtual gateways for propagation",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "default_route_table_routes": {
                    "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_route_table_tags": {
                    "description": "Additional tags for the default route table",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_flow_log": {
                    "description": "Whether or not to enable VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpc_flow_log_permissions_boundary": {
                    "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_max_aggregation_interval": {
                    "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds",
                    "type": "${number}",
                    "default": 600
                }
            },
            {
                "flow_log_traffic_type": {
                    "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL",
                    "type": "${string}",
                    "default": "ALL"
                }
            },
            {
                "flow_log_destination_type": {
                    "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs",
                    "type": "${string}",
                    "default": "cloud-watch-logs"
                }
            },
            {
                "flow_log_log_format": {
                    "description": "The fields to include in the flow log record, in the order in which they should appear",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_destination_arn": {
                    "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_deliver_cross_account_role": {
                    "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_file_format": {
                    "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_hive_compatible_partitions": {
                    "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_per_hour_partition": {
                    "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpc_flow_log_tags": {
                    "description": "Additional tags for the VPC Flow Logs",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_flow_log_cloudwatch_log_group": {
                    "description": "Whether to create CloudWatch log group for VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_flow_log_cloudwatch_iam_role": {
                    "description": "Whether to create IAM role for VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_cloudwatch_iam_role_arn": {
                    "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_cloudwatch_log_group_name_prefix": {
                    "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs",
                    "type": "${string}",
                    "default": "/aws/vpc-flow-log/"
                }
            },
            {
                "flow_log_cloudwatch_log_group_name_suffix": {
                    "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_cloudwatch_log_group_retention_in_days": {
                    "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "flow_log_cloudwatch_log_group_kms_key_id": {
                    "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_cloudwatch_log_group_skip_destroy": {
                    "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_cloudwatch_log_group_class": {
                    "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "putin_khuylo": {
                    "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
                    "type": "${bool}",
                    "default": true
                }
            }
        ]
    },
    "varfile_list": [
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_//github.com/entigolabs/entigo-infralib-release.git//modules/aws/vpc_ref_v0.13.1/modules/aws/vpc/variables.tf",
        "/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws/variables.tf"
    ],
    "tempdir": "<TemporaryDirectory '/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y'>",
    "variable_list": {
        "prefix": "",
        "vpc_cidr": "\"10.156.0.0/16\"",
        "azs": "${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}",
        "one_nat_gateway_per_az": "${var.one_nat_gateway_per_az}",
        "private_subnets": "${local.private_subnets}",
        "public_subnets": "${local.public_subnets}",
        "database_subnets": "${local.database_subnets}",
        "elasticache_subnets": "${local.elasticache_subnets}",
        "intra_subnets": "${local.intra_subnets}",
        "private_subnet_names": "${var.private_subnet_names}",
        "public_subnet_names": "${var.public_subnet_names}",
        "database_subnet_names": "${var.database_subnet_names}",
        "elasticache_subnet_names": "${var.elasticache_subnet_names}",
        "intra_subnet_names": "${var.intra_subnet_names}",
        "enable_nat_gateway": "${var.enable_nat_gateway}",
        "create_vpc": true,
        "name": "${local.hname}",
        "cidr": "${var.vpc_cidr}",
        "secondary_cidr_blocks": [],
        "instance_tenancy": "\"default\"",
        "enable_dns_hostnames": true,
        "enable_dns_support": true,
        "enable_network_address_usage_metrics": null,
        "use_ipam_pool": false,
        "ipv4_ipam_pool_id": null,
        "ipv4_netmask_length": null,
        "enable_ipv6": false,
        "ipv6_cidr": null,
        "ipv6_ipam_pool_id": null,
        "ipv6_netmask_length": null,
        "ipv6_cidr_block_network_border_group": null,
        "vpc_tags": {},
        "tags": {
            "Terraform": "true",
            "Prefix": "${var.prefix}",
            "Workspace": "${terraform.workspace}"
        },
        "enable_dhcp_options": false,
        "dhcp_options_domain_name": "\"\"",
        "dhcp_options_domain_name_servers": [
            "AmazonProvidedDNS"
        ],
        "dhcp_options_ntp_servers": [],
        "dhcp_options_netbios_name_servers": [],
        "dhcp_options_netbios_node_type": "\"\"",
        "dhcp_options_tags": {},
        "public_subnet_assign_ipv6_address_on_creation": false,
        "public_subnet_enable_dns64": true,
        "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "public_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "create_multiple_public_route_tables": false,
        "public_subnet_ipv6_prefixes": [],
        "public_subnet_ipv6_native": false,
        "map_public_ip_on_launch": false,
        "public_subnet_private_dns_hostname_type_on_launch": null,
        "public_subnet_suffix": "\"public\"",
        "public_subnet_tags": {
            "kubernetes.io/role/elb": "1"
        },
        "public_subnet_tags_per_az": {},
        "public_route_table_tags": {},
        "public_dedicated_network_acl": false,
        "public_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "public_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "public_acl_tags": {},
        "private_subnet_assign_ipv6_address_on_creation": false,
        "private_subnet_enable_dns64": true,
        "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "private_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "private_subnet_ipv6_prefixes": [],
        "private_subnet_ipv6_native": false,
        "private_subnet_private_dns_hostname_type_on_launch": null,
        "private_subnet_suffix": "\"private\"",
        "private_subnet_tags": {
            "kubernetes.io/role/internal-elb": "1"
        },
        "private_subnet_tags_per_az": {},
        "private_route_table_tags": {},
        "private_dedicated_network_acl": false,
        "private_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "private_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "private_acl_tags": {},
        "database_subnet_assign_ipv6_address_on_creation": false,
        "database_subnet_enable_dns64": true,
        "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "database_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "database_subnet_ipv6_prefixes": [],
        "database_subnet_ipv6_native": false,
        "database_subnet_private_dns_hostname_type_on_launch": null,
        "database_subnet_suffix": "\"db\"",
        "create_database_subnet_route_table": false,
        "create_database_internet_gateway_route": false,
        "create_database_nat_gateway_route": false,
        "database_route_table_tags": {},
        "database_subnet_tags": {},
        "create_database_subnet_group": "${length(local.database_subnets) > 0 ? True : False}",
        "database_subnet_group_name": null,
        "database_subnet_group_tags": {},
        "database_dedicated_network_acl": false,
        "database_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "database_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "database_acl_tags": {},
        "redshift_subnets": [],
        "redshift_subnet_assign_ipv6_address_on_creation": false,
        "redshift_subnet_enable_dns64": true,
        "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "redshift_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "redshift_subnet_ipv6_prefixes": [],
        "redshift_subnet_ipv6_native": false,
        "redshift_subnet_private_dns_hostname_type_on_launch": null,
        "redshift_subnet_names": [],
        "redshift_subnet_suffix": "\"redshift\"",
        "enable_public_redshift": false,
        "create_redshift_subnet_route_table": false,
        "redshift_route_table_tags": {},
        "redshift_subnet_tags": {},
        "create_redshift_subnet_group": true,
        "redshift_subnet_group_name": null,
        "redshift_subnet_group_tags": {},
        "redshift_dedicated_network_acl": false,
        "redshift_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "redshift_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "redshift_acl_tags": {},
        "elasticache_subnet_assign_ipv6_address_on_creation": false,
        "elasticache_subnet_enable_dns64": true,
        "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "elasticache_subnet_ipv6_prefixes": [],
        "elasticache_subnet_ipv6_native": false,
        "elasticache_subnet_private_dns_hostname_type_on_launch": null,
        "elasticache_subnet_suffix": "\"elasticache\"",
        "elasticache_subnet_tags": {},
        "create_elasticache_subnet_route_table": false,
        "elasticache_route_table_tags": {},
        "create_elasticache_subnet_group": "${length(local.elasticache_subnets) > 0 ? True : False}",
        "elasticache_subnet_group_name": null,
        "elasticache_subnet_group_tags": {},
        "elasticache_dedicated_network_acl": false,
        "elasticache_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "elasticache_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "elasticache_acl_tags": {},
        "intra_subnet_assign_ipv6_address_on_creation": false,
        "intra_subnet_enable_dns64": true,
        "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "intra_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "create_multiple_intra_route_tables": false,
        "intra_subnet_ipv6_prefixes": [],
        "intra_subnet_ipv6_native": false,
        "intra_subnet_private_dns_hostname_type_on_launch": null,
        "intra_subnet_suffix": "\"intra\"",
        "intra_subnet_tags": {},
        "intra_route_table_tags": {},
        "intra_dedicated_network_acl": false,
        "intra_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "intra_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "intra_acl_tags": {},
        "outpost_subnets": [],
        "outpost_subnet_assign_ipv6_address_on_creation": false,
        "outpost_az": null,
        "customer_owned_ipv4_pool": null,
        "outpost_subnet_enable_dns64": true,
        "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
        "outpost_subnet_enable_resource_name_dns_a_record_on_launch": false,
        "outpost_subnet_ipv6_prefixes": [],
        "outpost_subnet_ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "outpost_arn": null,
        "outpost_subnet_private_dns_hostname_type_on_launch": null,
        "outpost_subnet_names": [],
        "outpost_subnet_suffix": "\"outpost\"",
        "outpost_subnet_tags": {},
        "outpost_dedicated_network_acl": false,
        "outpost_inbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "outpost_outbound_acl_rules": [
            {
                "rule_number": 100,
                "rule_action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            }
        ],
        "outpost_acl_tags": {},
        "create_igw": true,
        "create_egress_only_igw": true,
        "igw_tags": {},
        "nat_gateway_destination_cidr_block": "\"0.0.0.0/0\"",
        "single_nat_gateway": "${var.one_nat_gateway_per_az ? False : True}",
        "reuse_nat_ips": false,
        "external_nat_ip_ids": [],
        "external_nat_ips": [],
        "nat_gateway_tags": {},
        "nat_eip_tags": {},
        "customer_gateways": {},
        "customer_gateway_tags": {},
        "enable_vpn_gateway": false,
        "vpn_gateway_id": "\"\"",
        "amazon_side_asn": "\"64512\"",
        "vpn_gateway_az": null,
        "propagate_intra_route_tables_vgw": false,
        "propagate_private_route_tables_vgw": false,
        "propagate_public_route_tables_vgw": false,
        "vpn_gateway_tags": {},
        "manage_default_vpc": false,
        "default_vpc_name": null,
        "default_vpc_enable_dns_support": true,
        "default_vpc_enable_dns_hostnames": true,
        "default_vpc_tags": {},
        "manage_default_security_group": true,
        "default_security_group_name": null,
        "default_security_group_ingress": [],
        "default_security_group_egress": [],
        "default_security_group_tags": {},
        "manage_default_network_acl": true,
        "default_network_acl_name": null,
        "default_network_acl_ingress": [
            {
                "rule_no": 100,
                "action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            },
            {
                "rule_no": 101,
                "action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "ipv6_cidr_block": "::/0"
            }
        ],
        "default_network_acl_egress": [
            {
                "rule_no": 100,
                "action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "cidr_block": "0.0.0.0/0"
            },
            {
                "rule_no": 101,
                "action": "allow",
                "from_port": 0,
                "to_port": 0,
                "protocol": "-1",
                "ipv6_cidr_block": "::/0"
            }
        ],
        "default_network_acl_tags": {},
        "manage_default_route_table": true,
        "default_route_table_name": null,
        "default_route_table_propagating_vgws": [],
        "default_route_table_routes": [],
        "default_route_table_tags": {},
        "enable_flow_log": false,
        "vpc_flow_log_permissions_boundary": null,
        "flow_log_max_aggregation_interval": 60,
        "flow_log_traffic_type": "\"ALL\"",
        "flow_log_destination_type": "\"cloud-watch-logs\"",
        "flow_log_log_format": null,
        "flow_log_destination_arn": "\"\"",
        "flow_log_deliver_cross_account_role": null,
        "flow_log_file_format": null,
        "flow_log_hive_compatible_partitions": false,
        "flow_log_per_hour_partition": false,
        "vpc_flow_log_tags": {},
        "create_flow_log_cloudwatch_log_group": false,
        "create_flow_log_cloudwatch_iam_role": false,
        "flow_log_cloudwatch_iam_role_arn": "\"\"",
        "flow_log_cloudwatch_log_group_name_prefix": "\"/aws/vpc-flow-log/\"",
        "flow_log_cloudwatch_log_group_name_suffix": "\"\"",
        "flow_log_cloudwatch_log_group_retention_in_days": 7,
        "flow_log_cloudwatch_log_group_kms_key_id": null,
        "flow_log_cloudwatch_log_group_skip_destroy": false,
        "flow_log_cloudwatch_log_group_class": null,
        "putin_khuylo": true,
        "source": "terraform-aws-modules/vpc/aws",
        "version": "5.8.0",
        "variable": [
            {
                "create_vpc": {
                    "description": "Controls if VPC should be created (it affects almost all resources)",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "name": {
                    "description": "Name to be used on all the resources as identifier",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "cidr": {
                    "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`",
                    "type": "${string}",
                    "default": "10.0.0.0/16"
                }
            },
            {
                "secondary_cidr_blocks": {
                    "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "instance_tenancy": {
                    "description": "A tenancy option for instances launched into the VPC",
                    "type": "${string}",
                    "default": "default"
                }
            },
            {
                "azs": {
                    "description": "A list of availability zones names or ids in the region",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "enable_dns_hostnames": {
                    "description": "Should be true to enable DNS hostnames in the VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "enable_dns_support": {
                    "description": "Should be true to enable DNS support in the VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "enable_network_address_usage_metrics": {
                    "description": "Determines whether network address usage metrics are enabled for the VPC",
                    "type": "${bool}",
                    "default": null
                }
            },
            {
                "use_ipam_pool": {
                    "description": "Determines whether IPAM pool is used for CIDR allocation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "ipv4_ipam_pool_id": {
                    "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv4_netmask_length": {
                    "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "enable_ipv6": {
                    "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "ipv6_cidr": {
                    "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv6_ipam_pool_id": {
                    "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "ipv6_netmask_length": {
                    "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "ipv6_cidr_block_network_border_group": {
                    "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "vpc_tags": {
                    "description": "Additional tags for the VPC",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "tags": {
                    "description": "A map of tags to add to all resources",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_dhcp_options": {
                    "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "dhcp_options_domain_name": {
                    "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "dhcp_options_domain_name_servers": {
                    "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": [
                        "AmazonProvidedDNS"
                    ]
                }
            },
            {
                "dhcp_options_ntp_servers": {
                    "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "dhcp_options_netbios_name_servers": {
                    "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "dhcp_options_netbios_node_type": {
                    "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "dhcp_options_tags": {
                    "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_subnets": {
                    "description": "A list of public subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_multiple_public_route_tables": {
                    "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "map_public_ip_on_launch": {
                    "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "public_subnet_names": {
                    "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "public_subnet_suffix": {
                    "description": "Suffix to append to public subnets name",
                    "type": "${string}",
                    "default": "public"
                }
            },
            {
                "public_subnet_tags": {
                    "description": "Additional tags for the public subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_subnet_tags_per_az": {
                    "description": "Additional tags for the public subnets where the primary key is the AZ",
                    "type": "${map(map(string))}",
                    "default": {}
                }
            },
            {
                "public_route_table_tags": {
                    "description": "Additional tags for the public route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "public_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "public_inbound_acl_rules": {
                    "description": "Public subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "public_outbound_acl_rules": {
                    "description": "Public subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "public_acl_tags": {
                    "description": "Additional tags for the public subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_subnets": {
                    "description": "A list of private subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "private_subnet_names": {
                    "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "private_subnet_suffix": {
                    "description": "Suffix to append to private subnets name",
                    "type": "${string}",
                    "default": "private"
                }
            },
            {
                "private_subnet_tags": {
                    "description": "Additional tags for the private subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_subnet_tags_per_az": {
                    "description": "Additional tags for the private subnets where the primary key is the AZ",
                    "type": "${map(map(string))}",
                    "default": {}
                }
            },
            {
                "private_route_table_tags": {
                    "description": "Additional tags for the private route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "private_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "private_inbound_acl_rules": {
                    "description": "Private subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "private_outbound_acl_rules": {
                    "description": "Private subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "private_acl_tags": {
                    "description": "Additional tags for the private subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_subnets": {
                    "description": "A list of database subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "database_subnet_names": {
                    "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "database_subnet_suffix": {
                    "description": "Suffix to append to database subnets name",
                    "type": "${string}",
                    "default": "db"
                }
            },
            {
                "create_database_subnet_route_table": {
                    "description": "Controls if separate route table for database should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_database_internet_gateway_route": {
                    "description": "Controls if an internet gateway route for public database access should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_database_nat_gateway_route": {
                    "description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_route_table_tags": {
                    "description": "Additional tags for the database route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_subnet_tags": {
                    "description": "Additional tags for the database subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_database_subnet_group": {
                    "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "database_subnet_group_name": {
                    "description": "Name of database subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "database_subnet_group_tags": {
                    "description": "Additional tags for the database subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "database_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "database_inbound_acl_rules": {
                    "description": "Database subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "database_outbound_acl_rules": {
                    "description": "Database subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "database_acl_tags": {
                    "description": "Additional tags for the database subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_subnets": {
                    "description": "A list of redshift subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "redshift_subnet_names": {
                    "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "redshift_subnet_suffix": {
                    "description": "Suffix to append to redshift subnets name",
                    "type": "${string}",
                    "default": "redshift"
                }
            },
            {
                "enable_public_redshift": {
                    "description": "Controls if redshift should have public routing table",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_redshift_subnet_route_table": {
                    "description": "Controls if separate route table for redshift should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_route_table_tags": {
                    "description": "Additional tags for the redshift route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_subnet_tags": {
                    "description": "Additional tags for the redshift subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_redshift_subnet_group": {
                    "description": "Controls if redshift subnet group should be created",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "redshift_subnet_group_name": {
                    "description": "Name of redshift subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "redshift_subnet_group_tags": {
                    "description": "Additional tags for the redshift subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "redshift_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "redshift_inbound_acl_rules": {
                    "description": "Redshift subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "redshift_outbound_acl_rules": {
                    "description": "Redshift subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "redshift_acl_tags": {
                    "description": "Additional tags for the redshift subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "elasticache_subnets": {
                    "description": "A list of elasticache subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "elasticache_subnet_names": {
                    "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "elasticache_subnet_suffix": {
                    "description": "Suffix to append to elasticache subnets name",
                    "type": "${string}",
                    "default": "elasticache"
                }
            },
            {
                "elasticache_subnet_tags": {
                    "description": "Additional tags for the elasticache subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_elasticache_subnet_route_table": {
                    "description": "Controls if separate route table for elasticache should be created",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_route_table_tags": {
                    "description": "Additional tags for the elasticache route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_elasticache_subnet_group": {
                    "description": "Controls if elasticache subnet group should be created",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "elasticache_subnet_group_name": {
                    "description": "Name of elasticache subnet group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "elasticache_subnet_group_tags": {
                    "description": "Additional tags for the elasticache subnet group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "elasticache_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "elasticache_inbound_acl_rules": {
                    "description": "Elasticache subnets inbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "elasticache_outbound_acl_rules": {
                    "description": "Elasticache subnets outbound network ACL rules",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "elasticache_acl_tags": {
                    "description": "Additional tags for the elasticache subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_subnets": {
                    "description": "A list of intra subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_multiple_intra_route_tables": {
                    "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "intra_subnet_names": {
                    "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "intra_subnet_suffix": {
                    "description": "Suffix to append to intra subnets name",
                    "type": "${string}",
                    "default": "intra"
                }
            },
            {
                "intra_subnet_tags": {
                    "description": "Additional tags for the intra subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_route_table_tags": {
                    "description": "Additional tags for the intra route tables",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "intra_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "intra_inbound_acl_rules": {
                    "description": "Intra subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "intra_outbound_acl_rules": {
                    "description": "Intra subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "intra_acl_tags": {
                    "description": "Additional tags for the intra subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "outpost_subnets": {
                    "description": "A list of outpost subnets inside the VPC",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_assign_ipv6_address_on_creation": {
                    "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_az": {
                    "description": "AZ where Outpost is anchored",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "customer_owned_ipv4_pool": {
                    "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_enable_dns64": {
                    "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                    "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_subnet_ipv6_prefixes": {
                    "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_ipv6_native": {
                    "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "map_customer_owned_ip_on_launch": {
                    "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_arn": {
                    "description": "ARN of Outpost you want to create a subnet in",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_private_dns_hostname_type_on_launch": {
                    "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "outpost_subnet_names": {
                    "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "outpost_subnet_suffix": {
                    "description": "Suffix to append to outpost subnets name",
                    "type": "${string}",
                    "default": "outpost"
                }
            },
            {
                "outpost_subnet_tags": {
                    "description": "Additional tags for the outpost subnets",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "outpost_dedicated_network_acl": {
                    "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "outpost_inbound_acl_rules": {
                    "description": "Outpost subnets inbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "outpost_outbound_acl_rules": {
                    "description": "Outpost subnets outbound network ACLs",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_number": 100,
                            "rule_action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        }
                    ]
                }
            },
            {
                "outpost_acl_tags": {
                    "description": "Additional tags for the outpost subnets network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_igw": {
                    "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "create_egress_only_igw": {
                    "description": "Controls if an Egress Only Internet Gateway is created and its related routes",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "igw_tags": {
                    "description": "Additional tags for the internet gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_nat_gateway": {
                    "description": "Should be true if you want to provision NAT Gateways for each of your private networks",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "nat_gateway_destination_cidr_block": {
                    "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route",
                    "type": "${string}",
                    "default": "0.0.0.0/0"
                }
            },
            {
                "single_nat_gateway": {
                    "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "one_nat_gateway_per_az": {
                    "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "reuse_nat_ips": {
                    "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "external_nat_ip_ids": {
                    "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "external_nat_ips": {
                    "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "nat_gateway_tags": {
                    "description": "Additional tags for the NAT gateways",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "nat_eip_tags": {
                    "description": "Additional tags for the NAT EIP",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "customer_gateways": {
                    "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
                    "type": "${map(map(any))}",
                    "default": {}
                }
            },
            {
                "customer_gateway_tags": {
                    "description": "Additional tags for the Customer Gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_vpn_gateway": {
                    "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpn_gateway_id": {
                    "description": "ID of VPN Gateway to attach to the VPC",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "amazon_side_asn": {
                    "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN",
                    "type": "${string}",
                    "default": "64512"
                }
            },
            {
                "vpn_gateway_az": {
                    "description": "The Availability Zone for the VPN Gateway",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "propagate_intra_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "propagate_private_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "propagate_public_route_tables_vgw": {
                    "description": "Should be true if you want route table propagation",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpn_gateway_tags": {
                    "description": "Additional tags for the VPN gateway",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_vpc": {
                    "description": "Should be true to adopt and manage Default VPC",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "default_vpc_name": {
                    "description": "Name to be used on the Default VPC",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_vpc_enable_dns_support": {
                    "description": "Should be true to enable DNS support in the Default VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_vpc_enable_dns_hostnames": {
                    "description": "Should be true to enable DNS hostnames in the Default VPC",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_vpc_tags": {
                    "description": "Additional tags for the Default VPC",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_security_group": {
                    "description": "Should be true to adopt and manage default security group",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_security_group_name": {
                    "description": "Name to be used on the default security group",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_security_group_ingress": {
                    "description": "List of maps of ingress rules to set on the default security group",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_security_group_egress": {
                    "description": "List of maps of egress rules to set on the default security group",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_security_group_tags": {
                    "description": "Additional tags for the default security group",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_network_acl": {
                    "description": "Should be true to adopt and manage Default Network ACL",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_network_acl_name": {
                    "description": "Name to be used on the Default Network ACL",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_network_acl_ingress": {
                    "description": "List of maps of ingress rules to set on the Default Network ACL",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_no": 100,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        },
                        {
                            "rule_no": 101,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "ipv6_cidr_block": "::/0"
                        }
                    ]
                }
            },
            {
                "default_network_acl_egress": {
                    "description": "List of maps of egress rules to set on the Default Network ACL",
                    "type": "${list(map(string))}",
                    "default": [
                        {
                            "rule_no": 100,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "cidr_block": "0.0.0.0/0"
                        },
                        {
                            "rule_no": 101,
                            "action": "allow",
                            "from_port": 0,
                            "to_port": 0,
                            "protocol": "-1",
                            "ipv6_cidr_block": "::/0"
                        }
                    ]
                }
            },
            {
                "default_network_acl_tags": {
                    "description": "Additional tags for the Default Network ACL",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "manage_default_route_table": {
                    "description": "Should be true to manage default route table",
                    "type": "${bool}",
                    "default": true
                }
            },
            {
                "default_route_table_name": {
                    "description": "Name to be used on the default route table",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "default_route_table_propagating_vgws": {
                    "description": "List of virtual gateways for propagation",
                    "type": "${list(string)}",
                    "default": []
                }
            },
            {
                "default_route_table_routes": {
                    "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
                    "type": "${list(map(string))}",
                    "default": []
                }
            },
            {
                "default_route_table_tags": {
                    "description": "Additional tags for the default route table",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "enable_flow_log": {
                    "description": "Whether or not to enable VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpc_flow_log_permissions_boundary": {
                    "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_max_aggregation_interval": {
                    "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds",
                    "type": "${number}",
                    "default": 600
                }
            },
            {
                "flow_log_traffic_type": {
                    "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL",
                    "type": "${string}",
                    "default": "ALL"
                }
            },
            {
                "flow_log_destination_type": {
                    "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs",
                    "type": "${string}",
                    "default": "cloud-watch-logs"
                }
            },
            {
                "flow_log_log_format": {
                    "description": "The fields to include in the flow log record, in the order in which they should appear",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_destination_arn": {
                    "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_deliver_cross_account_role": {
                    "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_file_format": {
                    "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_hive_compatible_partitions": {
                    "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_per_hour_partition": {
                    "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "vpc_flow_log_tags": {
                    "description": "Additional tags for the VPC Flow Logs",
                    "type": "${map(string)}",
                    "default": {}
                }
            },
            {
                "create_flow_log_cloudwatch_log_group": {
                    "description": "Whether to create CloudWatch log group for VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "create_flow_log_cloudwatch_iam_role": {
                    "description": "Whether to create IAM role for VPC Flow Logs",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_cloudwatch_iam_role_arn": {
                    "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_cloudwatch_log_group_name_prefix": {
                    "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs",
                    "type": "${string}",
                    "default": "/aws/vpc-flow-log/"
                }
            },
            {
                "flow_log_cloudwatch_log_group_name_suffix": {
                    "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs",
                    "type": "${string}",
                    "default": ""
                }
            },
            {
                "flow_log_cloudwatch_log_group_retention_in_days": {
                    "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs",
                    "type": "${number}",
                    "default": null
                }
            },
            {
                "flow_log_cloudwatch_log_group_kms_key_id": {
                    "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "flow_log_cloudwatch_log_group_skip_destroy": {
                    "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state",
                    "type": "${bool}",
                    "default": false
                }
            },
            {
                "flow_log_cloudwatch_log_group_class": {
                    "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS",
                    "type": "${string}",
                    "default": null
                }
            },
            {
                "putin_khuylo": {
                    "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
                    "type": "${bool}",
                    "default": true
                }
            }
        ],
        "locals": [
            {
                "hname": "${var.prefix}-${terraform.workspace}"
            }
        ]
    },
    "variable_map": {
        "main": {
            "source_dir": "\"/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmpsc2m5lcp/;main;https_/github.com/entigolabs/entigo-infralib-release.git/modules/aws/vpc_ref_v0.13.1/modules/aws/vpc\"",
            "prefix": "\"\"",
            "vpc_cidr": "\"10.156.0.0/16\"",
            "azs": 2,
            "one_nat_gateway_per_az": true,
            "private_subnets": null,
            "public_subnets": null,
            "database_subnets": null,
            "elasticache_subnets": null,
            "intra_subnets": null,
            "private_subnet_names": [],
            "public_subnet_names": [],
            "database_subnet_names": [],
            "elasticache_subnet_names": [],
            "intra_subnet_names": [],
            "enable_nat_gateway": true,
            "variable": [
                {
                    "create_vpc": {
                        "description": "Controls if VPC should be created (it affects almost all resources)",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "name": {
                        "description": "Name to be used on all the resources as identifier",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "cidr": {
                        "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`",
                        "type": "${string}",
                        "default": "10.0.0.0/16"
                    }
                },
                {
                    "secondary_cidr_blocks": {
                        "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "instance_tenancy": {
                        "description": "A tenancy option for instances launched into the VPC",
                        "type": "${string}",
                        "default": "default"
                    }
                },
                {
                    "azs": {
                        "description": "A list of availability zones names or ids in the region",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "enable_dns_hostnames": {
                        "description": "Should be true to enable DNS hostnames in the VPC",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "enable_dns_support": {
                        "description": "Should be true to enable DNS support in the VPC",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "enable_network_address_usage_metrics": {
                        "description": "Determines whether network address usage metrics are enabled for the VPC",
                        "type": "${bool}",
                        "default": null
                    }
                },
                {
                    "use_ipam_pool": {
                        "description": "Determines whether IPAM pool is used for CIDR allocation",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "ipv4_ipam_pool_id": {
                        "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "ipv4_netmask_length": {
                        "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id",
                        "type": "${number}",
                        "default": null
                    }
                },
                {
                    "enable_ipv6": {
                        "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "ipv6_cidr": {
                        "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "ipv6_ipam_pool_id": {
                        "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "ipv6_netmask_length": {
                        "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`",
                        "type": "${number}",
                        "default": null
                    }
                },
                {
                    "ipv6_cidr_block_network_border_group": {
                        "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "vpc_tags": {
                        "description": "Additional tags for the VPC",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "tags": {
                        "description": "A map of tags to add to all resources",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "enable_dhcp_options": {
                        "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "dhcp_options_domain_name": {
                        "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "dhcp_options_domain_name_servers": {
                        "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
                        "type": "${list(string)}",
                        "default": [
                            "AmazonProvidedDNS"
                        ]
                    }
                },
                {
                    "dhcp_options_ntp_servers": {
                        "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "dhcp_options_netbios_name_servers": {
                        "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "dhcp_options_netbios_node_type": {
                        "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "dhcp_options_tags": {
                        "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "public_subnets": {
                        "description": "A list of public subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "public_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "public_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_multiple_public_route_tables": {
                        "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "public_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "public_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "map_public_ip_on_launch": {
                        "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "public_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "public_subnet_names": {
                        "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "public_subnet_suffix": {
                        "description": "Suffix to append to public subnets name",
                        "type": "${string}",
                        "default": "public"
                    }
                },
                {
                    "public_subnet_tags": {
                        "description": "Additional tags for the public subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "public_subnet_tags_per_az": {
                        "description": "Additional tags for the public subnets where the primary key is the AZ",
                        "type": "${map(map(string))}",
                        "default": {}
                    }
                },
                {
                    "public_route_table_tags": {
                        "description": "Additional tags for the public route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "public_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "public_inbound_acl_rules": {
                        "description": "Public subnets inbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "public_outbound_acl_rules": {
                        "description": "Public subnets outbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "public_acl_tags": {
                        "description": "Additional tags for the public subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "private_subnets": {
                        "description": "A list of private subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "private_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "private_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "private_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "private_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "private_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "private_subnet_names": {
                        "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "private_subnet_suffix": {
                        "description": "Suffix to append to private subnets name",
                        "type": "${string}",
                        "default": "private"
                    }
                },
                {
                    "private_subnet_tags": {
                        "description": "Additional tags for the private subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "private_subnet_tags_per_az": {
                        "description": "Additional tags for the private subnets where the primary key is the AZ",
                        "type": "${map(map(string))}",
                        "default": {}
                    }
                },
                {
                    "private_route_table_tags": {
                        "description": "Additional tags for the private route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "private_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "private_inbound_acl_rules": {
                        "description": "Private subnets inbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "private_outbound_acl_rules": {
                        "description": "Private subnets outbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "private_acl_tags": {
                        "description": "Additional tags for the private subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "database_subnets": {
                        "description": "A list of database subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "database_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "database_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "database_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "database_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "database_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "database_subnet_names": {
                        "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "database_subnet_suffix": {
                        "description": "Suffix to append to database subnets name",
                        "type": "${string}",
                        "default": "db"
                    }
                },
                {
                    "create_database_subnet_route_table": {
                        "description": "Controls if separate route table for database should be created",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_database_internet_gateway_route": {
                        "description": "Controls if an internet gateway route for public database access should be created",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_database_nat_gateway_route": {
                        "description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "database_route_table_tags": {
                        "description": "Additional tags for the database route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "database_subnet_tags": {
                        "description": "Additional tags for the database subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_database_subnet_group": {
                        "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "database_subnet_group_name": {
                        "description": "Name of database subnet group",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "database_subnet_group_tags": {
                        "description": "Additional tags for the database subnet group",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "database_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "database_inbound_acl_rules": {
                        "description": "Database subnets inbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "database_outbound_acl_rules": {
                        "description": "Database subnets outbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "database_acl_tags": {
                        "description": "Additional tags for the database subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "redshift_subnets": {
                        "description": "A list of redshift subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "redshift_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "redshift_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "redshift_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "redshift_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "redshift_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "redshift_subnet_names": {
                        "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "redshift_subnet_suffix": {
                        "description": "Suffix to append to redshift subnets name",
                        "type": "${string}",
                        "default": "redshift"
                    }
                },
                {
                    "enable_public_redshift": {
                        "description": "Controls if redshift should have public routing table",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_redshift_subnet_route_table": {
                        "description": "Controls if separate route table for redshift should be created",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "redshift_route_table_tags": {
                        "description": "Additional tags for the redshift route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "redshift_subnet_tags": {
                        "description": "Additional tags for the redshift subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_redshift_subnet_group": {
                        "description": "Controls if redshift subnet group should be created",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "redshift_subnet_group_name": {
                        "description": "Name of redshift subnet group",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "redshift_subnet_group_tags": {
                        "description": "Additional tags for the redshift subnet group",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "redshift_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "redshift_inbound_acl_rules": {
                        "description": "Redshift subnets inbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "redshift_outbound_acl_rules": {
                        "description": "Redshift subnets outbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "redshift_acl_tags": {
                        "description": "Additional tags for the redshift subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "elasticache_subnets": {
                        "description": "A list of elasticache subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "elasticache_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "elasticache_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "elasticache_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "elasticache_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "elasticache_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "elasticache_subnet_names": {
                        "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "elasticache_subnet_suffix": {
                        "description": "Suffix to append to elasticache subnets name",
                        "type": "${string}",
                        "default": "elasticache"
                    }
                },
                {
                    "elasticache_subnet_tags": {
                        "description": "Additional tags for the elasticache subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_elasticache_subnet_route_table": {
                        "description": "Controls if separate route table for elasticache should be created",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "elasticache_route_table_tags": {
                        "description": "Additional tags for the elasticache route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_elasticache_subnet_group": {
                        "description": "Controls if elasticache subnet group should be created",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "elasticache_subnet_group_name": {
                        "description": "Name of elasticache subnet group",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "elasticache_subnet_group_tags": {
                        "description": "Additional tags for the elasticache subnet group",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "elasticache_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "elasticache_inbound_acl_rules": {
                        "description": "Elasticache subnets inbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "elasticache_outbound_acl_rules": {
                        "description": "Elasticache subnets outbound network ACL rules",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "elasticache_acl_tags": {
                        "description": "Additional tags for the elasticache subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "intra_subnets": {
                        "description": "A list of intra subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "intra_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "intra_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_multiple_intra_route_tables": {
                        "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "intra_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "intra_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "intra_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "intra_subnet_names": {
                        "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "intra_subnet_suffix": {
                        "description": "Suffix to append to intra subnets name",
                        "type": "${string}",
                        "default": "intra"
                    }
                },
                {
                    "intra_subnet_tags": {
                        "description": "Additional tags for the intra subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "intra_route_table_tags": {
                        "description": "Additional tags for the intra route tables",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "intra_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "intra_inbound_acl_rules": {
                        "description": "Intra subnets inbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "intra_outbound_acl_rules": {
                        "description": "Intra subnets outbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "intra_acl_tags": {
                        "description": "Additional tags for the intra subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "outpost_subnets": {
                        "description": "A list of outpost subnets inside the VPC",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "outpost_subnet_assign_ipv6_address_on_creation": {
                        "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "outpost_az": {
                        "description": "AZ where Outpost is anchored",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "customer_owned_ipv4_pool": {
                        "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "outpost_subnet_enable_dns64": {
                        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "outpost_subnet_ipv6_prefixes": {
                        "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "outpost_subnet_ipv6_native": {
                        "description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "map_customer_owned_ip_on_launch": {
                        "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "outpost_arn": {
                        "description": "ARN of Outpost you want to create a subnet in",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "outpost_subnet_private_dns_hostname_type_on_launch": {
                        "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "outpost_subnet_names": {
                        "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "outpost_subnet_suffix": {
                        "description": "Suffix to append to outpost subnets name",
                        "type": "${string}",
                        "default": "outpost"
                    }
                },
                {
                    "outpost_subnet_tags": {
                        "description": "Additional tags for the outpost subnets",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "outpost_dedicated_network_acl": {
                        "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "outpost_inbound_acl_rules": {
                        "description": "Outpost subnets inbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "outpost_outbound_acl_rules": {
                        "description": "Outpost subnets outbound network ACLs",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_number": 100,
                                "rule_action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            }
                        ]
                    }
                },
                {
                    "outpost_acl_tags": {
                        "description": "Additional tags for the outpost subnets network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_igw": {
                        "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "create_egress_only_igw": {
                        "description": "Controls if an Egress Only Internet Gateway is created and its related routes",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "igw_tags": {
                        "description": "Additional tags for the internet gateway",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "enable_nat_gateway": {
                        "description": "Should be true if you want to provision NAT Gateways for each of your private networks",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "nat_gateway_destination_cidr_block": {
                        "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route",
                        "type": "${string}",
                        "default": "0.0.0.0/0"
                    }
                },
                {
                    "single_nat_gateway": {
                        "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "one_nat_gateway_per_az": {
                        "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "reuse_nat_ips": {
                        "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "external_nat_ip_ids": {
                        "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "external_nat_ips": {
                        "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "nat_gateway_tags": {
                        "description": "Additional tags for the NAT gateways",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "nat_eip_tags": {
                        "description": "Additional tags for the NAT EIP",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "customer_gateways": {
                        "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
                        "type": "${map(map(any))}",
                        "default": {}
                    }
                },
                {
                    "customer_gateway_tags": {
                        "description": "Additional tags for the Customer Gateway",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "enable_vpn_gateway": {
                        "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "vpn_gateway_id": {
                        "description": "ID of VPN Gateway to attach to the VPC",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "amazon_side_asn": {
                        "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN",
                        "type": "${string}",
                        "default": "64512"
                    }
                },
                {
                    "vpn_gateway_az": {
                        "description": "The Availability Zone for the VPN Gateway",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "propagate_intra_route_tables_vgw": {
                        "description": "Should be true if you want route table propagation",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "propagate_private_route_tables_vgw": {
                        "description": "Should be true if you want route table propagation",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "propagate_public_route_tables_vgw": {
                        "description": "Should be true if you want route table propagation",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "vpn_gateway_tags": {
                        "description": "Additional tags for the VPN gateway",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "manage_default_vpc": {
                        "description": "Should be true to adopt and manage Default VPC",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "default_vpc_name": {
                        "description": "Name to be used on the Default VPC",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "default_vpc_enable_dns_support": {
                        "description": "Should be true to enable DNS support in the Default VPC",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "default_vpc_enable_dns_hostnames": {
                        "description": "Should be true to enable DNS hostnames in the Default VPC",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "default_vpc_tags": {
                        "description": "Additional tags for the Default VPC",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "manage_default_security_group": {
                        "description": "Should be true to adopt and manage default security group",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "default_security_group_name": {
                        "description": "Name to be used on the default security group",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "default_security_group_ingress": {
                        "description": "List of maps of ingress rules to set on the default security group",
                        "type": "${list(map(string))}",
                        "default": []
                    }
                },
                {
                    "default_security_group_egress": {
                        "description": "List of maps of egress rules to set on the default security group",
                        "type": "${list(map(string))}",
                        "default": []
                    }
                },
                {
                    "default_security_group_tags": {
                        "description": "Additional tags for the default security group",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "manage_default_network_acl": {
                        "description": "Should be true to adopt and manage Default Network ACL",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "default_network_acl_name": {
                        "description": "Name to be used on the Default Network ACL",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "default_network_acl_ingress": {
                        "description": "List of maps of ingress rules to set on the Default Network ACL",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_no": 100,
                                "action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            },
                            {
                                "rule_no": 101,
                                "action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "ipv6_cidr_block": "::/0"
                            }
                        ]
                    }
                },
                {
                    "default_network_acl_egress": {
                        "description": "List of maps of egress rules to set on the Default Network ACL",
                        "type": "${list(map(string))}",
                        "default": [
                            {
                                "rule_no": 100,
                                "action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "cidr_block": "0.0.0.0/0"
                            },
                            {
                                "rule_no": 101,
                                "action": "allow",
                                "from_port": 0,
                                "to_port": 0,
                                "protocol": "-1",
                                "ipv6_cidr_block": "::/0"
                            }
                        ]
                    }
                },
                {
                    "default_network_acl_tags": {
                        "description": "Additional tags for the Default Network ACL",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "manage_default_route_table": {
                        "description": "Should be true to manage default route table",
                        "type": "${bool}",
                        "default": true
                    }
                },
                {
                    "default_route_table_name": {
                        "description": "Name to be used on the default route table",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "default_route_table_propagating_vgws": {
                        "description": "List of virtual gateways for propagation",
                        "type": "${list(string)}",
                        "default": []
                    }
                },
                {
                    "default_route_table_routes": {
                        "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
                        "type": "${list(map(string))}",
                        "default": []
                    }
                },
                {
                    "default_route_table_tags": {
                        "description": "Additional tags for the default route table",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "enable_flow_log": {
                        "description": "Whether or not to enable VPC Flow Logs",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "vpc_flow_log_permissions_boundary": {
                        "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "flow_log_max_aggregation_interval": {
                        "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds",
                        "type": "${number}",
                        "default": 600
                    }
                },
                {
                    "flow_log_traffic_type": {
                        "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL",
                        "type": "${string}",
                        "default": "ALL"
                    }
                },
                {
                    "flow_log_destination_type": {
                        "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs",
                        "type": "${string}",
                        "default": "cloud-watch-logs"
                    }
                },
                {
                    "flow_log_log_format": {
                        "description": "The fields to include in the flow log record, in the order in which they should appear",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "flow_log_destination_arn": {
                        "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "flow_log_deliver_cross_account_role": {
                        "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "flow_log_file_format": {
                        "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "flow_log_hive_compatible_partitions": {
                        "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "flow_log_per_hour_partition": {
                        "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "vpc_flow_log_tags": {
                        "description": "Additional tags for the VPC Flow Logs",
                        "type": "${map(string)}",
                        "default": {}
                    }
                },
                {
                    "create_flow_log_cloudwatch_log_group": {
                        "description": "Whether to create CloudWatch log group for VPC Flow Logs",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "create_flow_log_cloudwatch_iam_role": {
                        "description": "Whether to create IAM role for VPC Flow Logs",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "flow_log_cloudwatch_iam_role_arn": {
                        "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_name_prefix": {
                        "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs",
                        "type": "${string}",
                        "default": "/aws/vpc-flow-log/"
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_name_suffix": {
                        "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs",
                        "type": "${string}",
                        "default": ""
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_retention_in_days": {
                        "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs",
                        "type": "${number}",
                        "default": null
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_kms_key_id": {
                        "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_skip_destroy": {
                        "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state",
                        "type": "${bool}",
                        "default": false
                    }
                },
                {
                    "flow_log_cloudwatch_log_group_class": {
                        "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS",
                        "type": "${string}",
                        "default": null
                    }
                },
                {
                    "putin_khuylo": {
                        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
                        "type": "${bool}",
                        "default": true
                    }
                }
            ],
            "locals": [
                {
                    "hname": "${var.prefix}-${terraform.workspace}"
                }
            ],
            "source": "main"
        },
        "vpc": {
            "source_dir": "\"/var/folders/tq/0qhyd1tx2mdfyb5wf16r4py40000gn/T/tmp0tst1q8y/;vpc;terraform-aws-modules/vpc/aws\"",
            "create_vpc": true,
            "name": "\"${local.hname}\"",
            "cidr": "\"10.156.0.0/16\"",
            "secondary_cidr_blocks": [],
            "instance_tenancy": "\"default\"",
            "azs": "${[for i in range(local.azs) : data.aws_availability_zones.available.names[i]]}",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": null,
            "use_ipam_pool": false,
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "enable_ipv6": false,
            "ipv6_cidr": null,
            "ipv6_ipam_pool_id": null,
            "ipv6_netmask_length": null,
            "ipv6_cidr_block_network_border_group": null,
            "vpc_tags": {},
            "tags": "\"{'Terraform': 'true', 'Prefix': '${\"\"}', 'Workspace': '${terraform.workspace}'}\"",
            "enable_dhcp_options": false,
            "dhcp_options_domain_name": "\"\"",
            "dhcp_options_domain_name_servers": [
                "AmazonProvidedDNS"
            ],
            "dhcp_options_ntp_servers": [],
            "dhcp_options_netbios_name_servers": [],
            "dhcp_options_netbios_node_type": "\"\"",
            "dhcp_options_tags": {},
            "public_subnets": "\"${local.public_subnets}\"",
            "public_subnet_assign_ipv6_address_on_creation": false,
            "public_subnet_enable_dns64": true,
            "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "public_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "create_multiple_public_route_tables": false,
            "public_subnet_ipv6_prefixes": [],
            "public_subnet_ipv6_native": false,
            "map_public_ip_on_launch": false,
            "public_subnet_private_dns_hostname_type_on_launch": null,
            "public_subnet_names": "[]",
            "public_subnet_suffix": "\"public\"",
            "public_subnet_tags": {
                "kubernetes.io/role/elb": "1"
            },
            "public_subnet_tags_per_az": {},
            "public_route_table_tags": {},
            "public_dedicated_network_acl": false,
            "public_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "public_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "public_acl_tags": {},
            "private_subnets": "\"${local.private_subnets}\"",
            "private_subnet_assign_ipv6_address_on_creation": false,
            "private_subnet_enable_dns64": true,
            "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "private_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "private_subnet_ipv6_prefixes": [],
            "private_subnet_ipv6_native": false,
            "private_subnet_private_dns_hostname_type_on_launch": null,
            "private_subnet_names": "[]",
            "private_subnet_suffix": "\"private\"",
            "private_subnet_tags": {
                "kubernetes.io/role/internal-elb": "1"
            },
            "private_subnet_tags_per_az": {},
            "private_route_table_tags": {},
            "private_dedicated_network_acl": false,
            "private_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "private_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "private_acl_tags": {},
            "database_subnets": "\"${local.database_subnets}\"",
            "database_subnet_assign_ipv6_address_on_creation": false,
            "database_subnet_enable_dns64": true,
            "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "database_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "database_subnet_ipv6_prefixes": [],
            "database_subnet_ipv6_native": false,
            "database_subnet_private_dns_hostname_type_on_launch": null,
            "database_subnet_names": "[]",
            "database_subnet_suffix": "\"db\"",
            "create_database_subnet_route_table": false,
            "create_database_internet_gateway_route": false,
            "create_database_nat_gateway_route": false,
            "database_route_table_tags": {},
            "database_subnet_tags": {},
            "create_database_subnet_group": "${length(local.database_subnets) > 0 ? True : False}",
            "database_subnet_group_name": null,
            "database_subnet_group_tags": {},
            "database_dedicated_network_acl": false,
            "database_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "database_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "database_acl_tags": {},
            "redshift_subnets": [],
            "redshift_subnet_assign_ipv6_address_on_creation": false,
            "redshift_subnet_enable_dns64": true,
            "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "redshift_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "redshift_subnet_ipv6_prefixes": [],
            "redshift_subnet_ipv6_native": false,
            "redshift_subnet_private_dns_hostname_type_on_launch": null,
            "redshift_subnet_names": [],
            "redshift_subnet_suffix": "\"redshift\"",
            "enable_public_redshift": false,
            "create_redshift_subnet_route_table": false,
            "redshift_route_table_tags": {},
            "redshift_subnet_tags": {},
            "create_redshift_subnet_group": true,
            "redshift_subnet_group_name": null,
            "redshift_subnet_group_tags": {},
            "redshift_dedicated_network_acl": false,
            "redshift_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "redshift_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "redshift_acl_tags": {},
            "elasticache_subnets": "\"${local.elasticache_subnets}\"",
            "elasticache_subnet_assign_ipv6_address_on_creation": false,
            "elasticache_subnet_enable_dns64": true,
            "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "elasticache_subnet_ipv6_prefixes": [],
            "elasticache_subnet_ipv6_native": false,
            "elasticache_subnet_private_dns_hostname_type_on_launch": null,
            "elasticache_subnet_names": "[]",
            "elasticache_subnet_suffix": "\"elasticache\"",
            "elasticache_subnet_tags": {},
            "create_elasticache_subnet_route_table": false,
            "elasticache_route_table_tags": {},
            "create_elasticache_subnet_group": "${length(local.elasticache_subnets) > 0 ? True : False}",
            "elasticache_subnet_group_name": null,
            "elasticache_subnet_group_tags": {},
            "elasticache_dedicated_network_acl": false,
            "elasticache_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "elasticache_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "elasticache_acl_tags": {},
            "intra_subnets": "\"${local.intra_subnets}\"",
            "intra_subnet_assign_ipv6_address_on_creation": false,
            "intra_subnet_enable_dns64": true,
            "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "intra_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "create_multiple_intra_route_tables": false,
            "intra_subnet_ipv6_prefixes": [],
            "intra_subnet_ipv6_native": false,
            "intra_subnet_private_dns_hostname_type_on_launch": null,
            "intra_subnet_names": "[]",
            "intra_subnet_suffix": "\"intra\"",
            "intra_subnet_tags": {},
            "intra_route_table_tags": {},
            "intra_dedicated_network_acl": false,
            "intra_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "intra_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "intra_acl_tags": {},
            "outpost_subnets": [],
            "outpost_subnet_assign_ipv6_address_on_creation": false,
            "outpost_az": null,
            "customer_owned_ipv4_pool": null,
            "outpost_subnet_enable_dns64": true,
            "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": true,
            "outpost_subnet_enable_resource_name_dns_a_record_on_launch": false,
            "outpost_subnet_ipv6_prefixes": [],
            "outpost_subnet_ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "outpost_arn": null,
            "outpost_subnet_private_dns_hostname_type_on_launch": null,
            "outpost_subnet_names": [],
            "outpost_subnet_suffix": "\"outpost\"",
            "outpost_subnet_tags": {},
            "outpost_dedicated_network_acl": false,
            "outpost_inbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "outpost_outbound_acl_rules": [
                {
                    "rule_number": 100,
                    "rule_action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                }
            ],
            "outpost_acl_tags": {},
            "create_igw": true,
            "create_egress_only_igw": true,
            "igw_tags": {},
            "enable_nat_gateway": "\"True\"",
            "nat_gateway_destination_cidr_block": "\"0.0.0.0/0\"",
            "single_nat_gateway": "\"${True ? False : True}\"",
            "one_nat_gateway_per_az": "\"True\"",
            "reuse_nat_ips": false,
            "external_nat_ip_ids": [],
            "external_nat_ips": [],
            "nat_gateway_tags": {},
            "nat_eip_tags": {},
            "customer_gateways": {},
            "customer_gateway_tags": {},
            "enable_vpn_gateway": false,
            "vpn_gateway_id": "\"\"",
            "amazon_side_asn": "\"64512\"",
            "vpn_gateway_az": null,
            "propagate_intra_route_tables_vgw": false,
            "propagate_private_route_tables_vgw": false,
            "propagate_public_route_tables_vgw": false,
            "vpn_gateway_tags": {},
            "manage_default_vpc": false,
            "default_vpc_name": null,
            "default_vpc_enable_dns_support": true,
            "default_vpc_enable_dns_hostnames": true,
            "default_vpc_tags": {},
            "manage_default_security_group": true,
            "default_security_group_name": null,
            "default_security_group_ingress": [],
            "default_security_group_egress": [],
            "default_security_group_tags": {},
            "manage_default_network_acl": true,
            "default_network_acl_name": null,
            "default_network_acl_ingress": [
                {
                    "rule_no": 100,
                    "action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                },
                {
                    "rule_no": 101,
                    "action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "ipv6_cidr_block": "::/0"
                }
            ],
            "default_network_acl_egress": [
                {
                    "rule_no": 100,
                    "action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "cidr_block": "0.0.0.0/0"
                },
                {
                    "rule_no": 101,
                    "action": "allow",
                    "from_port": 0,
                    "to_port": 0,
                    "protocol": "-1",
                    "ipv6_cidr_block": "::/0"
                }
            ],
            "default_network_acl_tags": {},
            "manage_default_route_table": true,
            "default_route_table_name": null,
            "default_route_table_propagating_vgws": [],
            "default_route_table_routes": [],
            "default_route_table_tags": {},
            "enable_flow_log": false,
            "vpc_flow_log_permissions_boundary": null,
            "flow_log_max_aggregation_interval": 60,
            "flow_log_traffic_type": "\"ALL\"",
            "flow_log_destination_type": "\"cloud-watch-logs\"",
            "flow_log_log_format": null,
            "flow_log_destination_arn": "\"\"",
            "flow_log_deliver_cross_account_role": null,
            "flow_log_file_format": null,
            "flow_log_hive_compatible_partitions": false,
            "flow_log_per_hour_partition": false,
            "vpc_flow_log_tags": {},
            "create_flow_log_cloudwatch_log_group": false,
            "create_flow_log_cloudwatch_iam_role": false,
            "flow_log_cloudwatch_iam_role_arn": "\"\"",
            "flow_log_cloudwatch_log_group_name_prefix": "\"/aws/vpc-flow-log/\"",
            "flow_log_cloudwatch_log_group_name_suffix": "\"\"",
            "flow_log_cloudwatch_log_group_retention_in_days": 7,
            "flow_log_cloudwatch_log_group_kms_key_id": null,
            "flow_log_cloudwatch_log_group_skip_destroy": false,
            "flow_log_cloudwatch_log_group_class": null,
            "putin_khuylo": true,
            "source": "\"terraform-aws-modules/vpc/aws\"",
            "version": "\"5.8.0\""
        }
    }
}